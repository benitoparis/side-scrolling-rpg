{"version":3,"sources":["src/model/class/damage-zone.ts","src/model/class/player.ts","src/model/class/enemy.ts","src/model/class/block.ts","src/model/class/display-controller.ts","src/model/class/input-controller.ts","src/model/class/game-service.ts","src/model/class/viewport.ts","src/model/class/map.ts","src/model/class/tileSet.ts","index.ts"],"names":[],"mappings":";;;;;;AGKA,AHHA,AIDA,AFGA,AIDA,ADFA,AGOA,APNA,AMFA,IJKA,AHHA,AIDA,AFGA,AIDA,ADFA,AGOA,APNA,AMFA,GCQA,ELHA,ADDA,GEHA,AGDA,EPEA,CIDA,AEEA,ELDA,EIDA,CJCA,EGDA,CAAA,IHCA,CAAA,KGDA,CAAA,SHCA,CAAA;AEGA,AHHA,AEEA,AIDA,ADFA,AGOA,ADRA;AJKA,AHHA,AIAA,AFEA,AIDA,ADFA,AGOA,APLA,AMHA,IHEA,AHCA,OGDA,AHCA,CEEA,AHHA,AEEA,AIDA,ADFA,AGOA,ADRA,EHEA,AHCA,OGDA,AHCA,CGDA,AHCA,SGDA,CAAA,MHCA,CAAA;AEqBC,AHdG,AEsBH,AI3BG,ADIA,AGSA,ADXA,WPGA,AMLA,ADIA,AGSA,ADXA,GCWA,CAAY,EAAZ,EAA+C,ADX/C,CAAY,CPGZ,AOHA,CPGY,AMLZ,CNKA,AOHuB,CAAvB,CPGe,AMLf,CNKA,AMJC,ADGD,AEFkC,CDJtC,CNOsB,AMFlB,CDCA,EEFA,EPGA,AOHiD,EPGxB,IOHzB,EPGA,AOH+D,EPGhC;AGelC,AHjBG,AIJJ,AF6BC,AG9BG,AJEJ,AMGQ,IHJR,AHCA,IOaiB,CRVb,AKLA,AEKS,CNHb,AMGQ,CJiBP,ACrBD,AF6BC,EG9BG,AGea,ADVA,CPAb,AIJJ,AGIQ,EJiBP,ADQA,AG9BS,AGeO,CLOJ,AHjBD,AEyBC,CCRZ,ADQA,AMfgB,CAAA,CLOO,ADQA,CCRvB,ACrBD,AF6BC,AG9BG,CDCJ,CDqBkC,ADQA,GFzB9B,KIJJ,CAAA,EDqBC,ADQA,ECRyD,ADQA;ACtBtD,AHAI,AEDJ,AGNA,AJCJ,AMIQ,QCSgB,CLPpB,AHAS,AEDT,AGNA,AEKS,CPEL,AOFA,GPES,AOFA,CJEb,AHAI,AEDJ,AGNA,AEKI,ECSgB,CLPZ,ADDA,AGNA,EFOR,ADDA,AMQoB,EAAA,CHdpB,AGcoB;ALNpB,AHAI,AILR,AFII,AIFA,ADJA,AJAJ,AMKQ,EDDJ,EFFJ,IIWkC,CLN9B,AHAS,AEDT,AGNA,AEKS,CPEL,CKPJ,CJAJ,CDOiB,AMHb,CNGI,AMHJ,ADJK,AEKD,CJEJ,ADDA,EKDiB,CJER,ADDA,AMOqB,CHb9B,CFOA,ADDA,CCcsD,AClB1D,AF0B0D,AMfxB,CLD9B,ADHA,AKJI,CDDJ,AES8B,CFT9B,AES8B,cFT9B,GAAA,UAAe,CAAf,EAA0B,CAA1B,EAAmC;ANI/B,AINR,AFQI,AILI,ADJJ,AGaI,APcJ,AMtBI,SPEK,AKPT,AGaS,ADRA,ENsBT,EI3BA,CLOI,AQMA,CDRA,CFLG,CLOU,AQMA,APcjB,CACI,AMvBc,CNsBlB,EI3BA,AJ6BI,CDtBA,AQMA,APcJ,EAEa,AMxBT;AJOJ,AHJI,AIPR,AFSI,AILI,ADJJ,AGaI,APTJ,AMCC,QDCO,CHKR,AHJS,AMDA,ADNT,AGaS,APTT,CKEU,CAAF,CFNZ,EEMkB,ALFd,CEOA,AHJI,AMDW,ADNf,CCMgB,CAAF,AEOV,APTG,CEOE,AHJS,AKPT,AJIT,CEOA,CGLoB,AEOA,CFPC,CAAC,CDNtB,CLOI,GMDI,CEOJ,GFNI,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KADd,IAEA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAFd,IAGA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MALlB,EAMG;AHEP,AHJC,AIHD,AEKS,ADPR,AGWG,APTJ,SEOA,AKES,APTT,EGAA,GHAA,CEOA,EFPO,CEOE,CAAT,AKEI,APTJ,GOSsB,MJTtB,CACK,GIQD,GJTJ,EACgB;ADOhB,ACLI,AFEJ,AICQ,AEIJ,APTJ,AMCA,EAAA,OJMA,ACLS,AFET,AMKS,APTT,CMCA,CAAA,EDIe,CHEf,AFPA,CGEI,AFEJ,AMKI,ELFI,AFPF,CEON,ACLkB,AFET,AICD,AEIU,CNLlB,ADJA,CMCA,CAAA,GHCI,IIOwB,CAAC,MAAzB,CDRJ,GAAA,UAAgB,CAAhB,EAA2B,CAA3B,EAAsC,KAAtC,EAAqD,MAArD,EAAmE;AJOnE,AHJJ,AIDQ,AFEJ,AICK,ADLT,AGSQ,APTJ,AMCI,KDJA,IHUJ,AHJJ,AIDa,AFET,AGJJ,AGSa,APTT,AMCS,CAAL,CDIO,ECJE,CJMb,AKEI,ADRA,CHCA,AFEJ,ADJA,CGEgB,CDKR,AKES,CNLR,ADJF,CEOP,AHJJ,AECI,CCOsD,AFXtD,CEaA,ACXI,GAAoB,ACF5B,GDEQ,AIOuB,CJVX,AIUY,CJPA,KIOX,GAAoB,KAAjC;ALKJ,AH1BJ,AEiBI,AIAa,ADlBjB,AGuBQ,APTJ,AMCI,CPdR,AKDA,ELCA,AKDA,CKDA,KRmBI,AMKS,APTT,AMCS,CAAL,GNDJ,AMCa,CLGb,AMKI,ADRA,ENDG,CCIC,AMKS,IPTjB,COSsB,GAAG,CNLzB,OMKI;ALKJ,ACZI,AFIJ,AIDQ,AEKJ,APTJ,AMCI,SHAK,AFIT,AMIS,APTT,AMCS,IDGM,CJCf,AKJI,CHAA,AIQA,APTJ,CGCgB,CFIR,AIDA,ACHS,CLIjB,AMImB,APTZ,CAAP,GGCI,AGAA,GHAqB,GAArB,AIQyB,CJZb,AIYc,CJRD,KIQV,GAAoB,KAArB,GAA8B,QAA5C;AExBR,AVCa,AEoBT,AIDK,ADpBI,AGyBR,APTD,AQLJ,AFMQ,IGjBR,ADWA,GTVa,AKDA,CLCA,AKDA,CHqBT,ADLA,AMCS,EENb,GPUI,CDLA,AMCI,ELII,CFpBC,ACeF,AMCW,CLIlB,ADLA,EDfS,EKDA,CKAb,AHiBQ,EFjBK,CKAb,IVCa,GUDb,CAAA,MLAa,gCKAb,CAAA;AP6BI,ACZI,AFKJ,AIDC,ALJD,AQNJ,AFOK,GDVD,ACKA,CDXJ,CAqBI,IFNS,AFKT,ADLA,GGAI,EHAJ,CGAe,EHAR,GGAa,KFKpB,CELe,AHAf,CGA2B,CFKR,CAAnB,QELe,CAAuB,IAAvB,CAAX;AMhBR,ANiBK,AFKD,AMIA,APTA,AQPJ,EDgBI,EE1BJ,IF0BI,CNJA,AMIA,APTA,GQPJ,UCVA,CF0BI,CAAI,CE1BR,ARsBI,ADLA,EOSI,CNJe,AMIf,APTe,ECKnB,EQtBJ,CAAA,IF0BI,CPTA,COSI,kBAAJ,EAAoB,UE1BxB,CAAA;AP6BI,ADNA,ADDA,AQLA,AFCJ,SJWS,ADNL,AMGA,APJA,AMJJ,CJWI,CMZA,ENYS,CAAT,CANsD,CAM1C,AFPZ,CMJJ,CEDI,CRKU,AQJN,EADJ,CRKA,CCCA,AOLkC,CDQlC,ENHiB,CAAC;AQtBtB,ANkBI,AFImB,AIAnB,AEII,APJJ,AMzBJ,CAAA,CHqBI,AEIA,CCzBJ,CGGA,ERsBuB,EOLd,CRKL,ECAwB,CQtB5B,CRsB6B,AIAzB,AEIW,ACTN,CPKa,AIAlB,CItBJ,CDiBS,EDSW,ACTX,CLCL,AKDK,CLCL,EMlBJ,CAAA,AJsBI,CAAA,CLAA,GOII,APJe,CGJnB,AHIA,CGJA,SEIA,CFJA,EEIA,CFJA,MMlBJ,CAAA,EJsBoB,CAAhB,EFJA,AEI2B,CFF1B,AEED,CFJA,CEIoC;AHOpC,ADP2B,AIEvB,AEGH,APJD,KOEoB,CNHO,EIGlB,AGRG,CNYP,AGJK,ALFV,CEMA,AGJW,CJHqB,AIGvB,EHIA,ADPwB,AOLrB,CNYZ,AGJe,CHHuC,AGGtC,CHIJ,AGJK,AGRL,EAAA,CAAA,GHQH,GAAiB,ALF1B,CKE2B,CAAC,CAAF,ALFP,EAAnB,CKEgC,EAAvB,IAA6B,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAAR,GAAiB,CAAC,CAAC,CAAjD,KACK,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAlB,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAhD,IACA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAd,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAFnC,CADJ,EAKC;AI5BT,ANqBI,AFAkB,AIQX,ALNP,AM3BS,EHyBT,EMrBJ,CRqBqB,EAAqB,AKzB7B,CEoBU,AFpBV,CN2BT,IKMc,GGbK,AFpBV,CDiCF,CI7BX,CNqBI,AKLmB,AFpBV,CHyBT,AIGoB,CExBxB,ADgBuB,CAAA,CROnB,GAAiB,CAAC,AM3BT,CGIb,CAAA,ANqBI,CAAA,IAAA,GAAA,UAAK,KAAL,EAAoB,OMrBxB,CAAA,ANqBI,EAAwC,MAAxC,EAAsD;ADQtD,ACNW,AFF4B,AISlC,ALPc,AQVnB,KHUI,CJFmC,ADEpB,EGAR,CDMN,ACNM,AKVX,EPQ4C,AISjC,ALPa,CGAb,CFFkC,ADEpB,CAAP,CCFoB,CCQtC,ECNW,CDMK,ACNL,CAAA,IDMU,CAAL,EMhBhB,CNgByB,EMhBe,EAAxC,CNgB8B,KAAL,GAAa,CAAtC;AO5BJ,AP6BI,ACPW,AFFqC,AIUxC,AEPY,APDO,AQJvB,GDKJ,CEvBJ,ERoBoD,ADErB,EGAb,CDOT,ACPS,AKJL,EClBb,ARoByD,ADErB,CGAlB,CFFwC,AIUvC,ALRkB,CStBrC,ADkBQ,ENWJ,CMXiB,CLIH,AEQN,CHDQ,ACPF,CAAH,CMtBf,CAAA,ADkBQ,ENWiB,CAAL,GAAS,KAAK,MAAL,GAAc,CAAvC,IO7BJ,CAAA;AP8BG,ACRY,AFF2B,AIWjC,AEJL,APLkB,AQHd,EDQJ,CL3BJ,CAkCE,CDdmB,ADEA,ECFyC,ADEpB,CGArB,AIKjB,CAAA,ACRS,ILGQ,CKHb,ELGa,CKHA,KLGA,AKHb,CLGa,AIKjB,CAAI,GAAA,CJLO,AIKP,SAAJ,EAAI,aAAJ,EAAe;AE1BnB,ANqBe,AFFgD,AIa1D,ALXsC,AQFnC,GHAJ,CInBJ,AJHA,CAqCI,CJf2D,ADEpB,EGAf,CIKxB,ACPS,EPAuD,ADEpB,ECFqB,ADEpB,CSrBjD,ANqB4B,AFFkC,CDEpB,ESrB1C,ANqB4B,AKFpB,GAAgB,GLEI,CMrB5B,ANqB4B,AIKxB,CE1BJ,GDmBQ,CAL8B,CLOvB,AKAP,uBCrBR,CAAA;ANqBe,AFFwD,AMQ/D,APN4C,MCFmB,ADEnB,EGAhB,GFFwC,ADEnB,EGArB,AFFyC,AMQ9D,APN2C,GGAtB,EIMhB,IJNgB,CAAA,AIM5B,KJNO;AMnBf,APgCE,ACZM,AFHsD,AMSzD,APPqC,AQClC,ENYN,EOhCF,CRiBqB,AMOF,APLE,EEanB,ADf+E,ADEnB,CEa5D,CCZW,AKAA,ECpBb,CNoBQ,CAAS,CMpBjB,GPgCE,CAAA,GOhCF,CAAA,ANoBQ,EDYN,CCZ2B,EDY3B,GCZM,CKAA,MNYC,MAAP,EAAqB,EOhCvB,CAAA;APkCI,ADjB8E,AIgB9E,ALd2D,AQE1D,EHYD,CG7BJ,CAmBI,EPN8E,ADEnB,EEevD,GDjB+E,ADEnB,EEevD,ADjB2E,AIgBpF,ALdiE,CEe7D,AGDJ,ALd0D,CCFmB,ECiBhE,GKVE,GLUI,AGDnB,CHCoB,AGDpB,CHCI,IAAqB,KAAK,CAAL,AGDzB,GHCkC,AGDlC,KHCuC,KAAd,AGDZ,CAAb,EHC+C,AGDhC,CAAf,EAAgB,EHCoC,CAApD,EAAuD;AOjC3D,APiC6D,ACZrD,AFLmF,AIiBnF,ALf+D,ISlBvE,ERgB2F,ADEpB,GSlBvE,ERgBgG,AIiBjF,ALf6D,CSlB5E,ANqBe,CFLkF,ADEpB,EKe1D,CAAC,CFZZ,EMrBR,CAAA,CJiCe,CAAY,IAAI,CAAC,MAAL,KAAgB,CAA5B,IIjCf,AJiCiD,CIjCjD,AJiCQ;AHCA,ACXI,AFPqE,AIkB5E,AEXc,APL2C,GKc1D,AETA,ENPiB,ADEA,CCFjB,CDE6E,IGKhE,WAAL;AMtBZ,APkCQ,ACXQ,AFPZ,AMUA,APT8E,AQK9E,EDIA,ACJA,ECtBJ,ETiBkF,EOS9E,CNVA,AMUA,ACJA,CAAA,CNYS,AFjB0E,ESjBvF,ANuBqB,AHNmE,EAAP,CSjBjF,ANuBgB,CDWR,ACXiB,EKDrB,CNYkB,AMZlB,CNYI,CDlBJ,CQhBJ,AF0BI,CE1BJ,AF0BQ,CJHQ,AFPI,CEQA,AFRC,CEQA,AIEb,CAAA,EJFgB,OIEpB,CJF4B,CAAC,AIEzB,CJHQ,EAEI,AKHhB,CLGiB,EKHjB,CLGoB,KMzBxB,CAAA,CF0BI,CJD4B,CAAC,AICb,CJHJ,CKDZ,CLIgB,KAHJ,EAII,MAJJ;ADYX,ACNW,AFbM,AIiBjB,ALhBsF,AQOnF,GH/BR,CA0CI,EJnBkB,ADCqE,EQO/E,CDER,ENVuB,ADCqE,ECDpE,ADCqE,AQOzF,CPRa,UMUjB;AEvBJ,ARa8B,AMWtB,APVyE,AQQzE,ICtBF,CTce,CCDS,ADC1B,EQQQ,ECtBA,CRauB,EQbd,ARae,AMWrB,ACFP,KDEY,GExBS,CAAC,EFwBtB,YExBa,CAAwB,MAAxB,CAArB;AAEA,AP+BI,ACNY,AFdK,AIoBjB,AERC,APVD,EKkBA,EI/BE,CRWc,AMUA,ENVqB,ECoBhC,AFlBL,CEkBA,GAAS,AGAT,CAAA,IHAc,CAAL,EO/BU,CP+BD,AFlBlB,CKkBA,CI/BsB,AJ+BtB,CLlBgB,CAAC,CEkBM,CO/BG,KP+B1B,CANmB,CAQnB,IGFA,GAAA,MI/B0B,CAAA,KJ+B1B,YI/BsB,CAAsB,MAAtB,CAA1B;AACA,APkCI,ACTY,AFf0B,AIqBlC,ALnBc,AQSd,ICrBF,ERUoC,ADEpB,EKmBR,CGVF,CCrBA,CRUmC,ADEpB,ESZZ,ANyBM,AFf2B,ADEpB,AQSZ,CRTK,AQSJ,CPXwB,CEezB,CMzBG,ANyBM,AKJL,CAAZ,EHUkB,AEXN,ACCG,CAAC,EHUK,CGVF,CCrBR,ANyBH,CMzBG,ANyBe,CAAlB,CEMkB,CFNG,AKJL,CLIhB,EMzBD,ANyByB,CMzBd,CDqBlB,ECrBO,ADqBwB,CLIvB,AKJwB,CCrBT,CNyBgB,AEMlB,AGVrB,CHUsC,CI/B/B,AJ+Bc,AGVc,CCrB3C,CJ+BgD,CAAnB,CFNb,AEMR;AI9BR,APkCG,ACTa,AFhBmC,AIsB3C,ALpBsB,AQWlB,GNCV,COvBI,APZN,AG2CQ,CHKN,CD3BiD,ADErB,KCF0B,AIsBzC,ALpBoB,AQWnB,CHSA,CJtByC,ADErB,EKoB5B,AGTY,CHSA,AGTC,GCtBA,ADsBG,CAAZ,ECtBa,ADsBE,CAAC,GCtBC,ADsBE,IHSvB,CGT4B,CHSA,IGTxB,EAAgC,CAAC,EAAjC,EAAoC,CCtBnB,AJ+BrB,CI/BqB,eAAJ,EAAzB;AACA,ANYQ,AFJiC,AIuBjC,AEbY,APRC,AQaL,GDLZ,CElBE,CRQc,ADEA,ECFyC,ADEpB,CKqB7B,AGRI,ICvBF,CDuBO,ECvBJ,CDuBO,CHQH,AGRI,ECvBJ,CJ+BG,AGRI,EHQpB,GGRyB,ICvBZ,CAAA,GDuBL,KCvBC,CAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB,CAAjB;AACa,AN0BR,AFnByD,AMc9D,APZ0C,AQc1B,GLjBZ,GFC0D,ADEpB,CST7B,CAAA,ADuBG,CDFhB,ENdmE,ADEpB,COY/C,CNdoE,ADEpB,AQc3B,CPhBwC,CDEpB,CQcjB,CAAC,ECvBZ,CDuBe,ECvBD,GDuBM,CCvBF,ODuBf,OCvBe,CAAA,WAAJ,EAAd;AAEb,APiCE,AD5BoE,AIyB9D,AE3CR,APoBmD,AQgBnC,CDpChB,CL8CE,CK9CF,CEaI,ERKkE,ADEnB,CE0BjD,CAAA,GD5ByE,ADEnB,CKuBzC,CI9BF,ARK+D,ADEnB,AQgBpC,GCvBL,CPiCd,COjCF,APiCE,MGHM,OGPQ,GNUd,AMVqC,GNUrC,UAAiB,CAAjB,AMVqC,CAAO,CNUxB,CAApB,EAAqB,CMV4B,kBAAZ,EAA8B,CAAE;ACtBvE,APiCI,ACVC,AFnBwD,AI0BjD,ALxB6B,AQgB+B,ICtBpE,CRIgB,ADEA,ECF4D,ADEnB,EE2BpD,CAAL,AMXoE,CHQvD,CAAL,CHGC,CAAT,COjCW,ADsB8D,EAAE,CCtB5D,EAAnB,EDsBuE;ACrBvE,APiCI,AD9B6E,AI2BjE,AE7CH,APoBiD,AQgBwB,ICrBlF,ERG6E,ADEnB,COpBjD,CF6CG,AE7CH,CLgDJ,CAAL,AMZkF,CPlBA,AMlBzE,APoBsD,ESLtD,APiCA,AD9B0E,ADEnB,CE4BhE,AKhDS,APoBgD,CCFmB,AOkBW,CCrB3E,CJ8BS,AE7CZ,ACoCgF,CCrB7F,EJ8B4B,OAAZ;AI5BhB,APgCG,ACVC,AFrBsF,AI4B1E,AL1BsD,AQgBC,ELGnE,CDOF,CO7BG,APpBL,CAsDE,CDjCwF,ADEpB,GQgBD,CAA9B,CCnB3B,ARCmF,ADEpB,AQgB3D,EPlBgF,ADEpB,CSH7D,KNsBX,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,YAAX,EAA8B,QAA9B,EAAkD,MAAlD,EAAgE;AMrB5D,ANuBA,AFvBwE,ADEnB,AQiBhD,ECnBL,GRAY,ADEA,CCFhB,CQAS,ATEmE,ESFjE,EADA;AAEP,ANuBA,AFvBJ,AI4BQ,AL3BqE,AQkBxE,ECnBD,ITCyE,EGsBrE,CFvBR,CQAY,CJ4BC,AL3BqE,CSDpE,AJ4BN,CL3B2E,CSHxE,CNyBP,AHtBwE,KCD5E,GAAc,CAAC;AQCX,APgCN,ACTM,AFxBY,AI6BJ,AL5B0E,ESAlF,APgCN,IDjCkB,ADCsE,CEgCxF,CAAA,ACTU,AEKI,GJ7BS,ADCsE,CSA7E,CRDQ,ADCsE,CSA5E,ARDD,CQEP,ANsBJ,CMvBY,CPgClB,AGJuB,CI3BX,AP+BZ,COhCkB,CJ4BQ,CI3BZ,CADI,EACF,CADE,CJ4BJ,CI3BI,CADA,EACE,CA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AF5BqC,AIgCjC,AL9BY,ES8CxB,INpBQ,AF5BqC,ADErB,CS8CnB,CJhBO,CIgBL,CADY,CR/C+B,ADErB,EG0Bd,AF5BoC,ADErB,GG0BX,CEIE,GAAG,CFJA,MAAL,AEIP,CFJmB,MAAZ,GAAqB,GAArB,GAA2B,MAAM,CAAC,MAA7C;AMqBR,APTF,ACXO,AF7B8B,AIiCvB,AL/BG,AQuBf,ECwBA,APTF,AMfE,GPzBc,ADEA,ES+CT,APTP,ADxCyD,ADEpB,CEsCrC,COSS,ADxBP,CCsBmB,ADtBnB,ONeF,CAAA,CMfE,CAAA,ONeF,GAAA,QMfE,GAAA,CNeF,SMfqB,EAAnB,EAA6B;ACyB7B,APRA,AD1CwD,AIwBpD,ALtBgC,AQwBhC,ECwBJ,IRlDwD,ADEpB,ISgD5B,CRlDqD,ADEpB,AQwB9B,CCwBD,CRlDoD,ADEpB,CCFa,CDEpB,CQwBnB,kBAAL,CAAwB,EAAxB,CAAP;ACqBe,APJnB,ACbI,AF9B4D,ADEnB,AQyB5C,CCoBL,EDtBI,GPzBgE,ADEnB,EG4BrC,CDaH,ED3CgE,ADEnB,ECFoB,ADEnB,CG4BrC,EDad,GAAiB,KAAK,CAAL,CCbS,EDaA,KAAK,ACbL,CAAA,IDaV,CCbR,EDaiC,ECbN,GDaW,GCbL,EDaA,GAAa,CAAtD,MCbqD,OAAA,CAAA,KAAjD,EAAuD;AMwB/D,APVI,ACbQ,AF/B+C,AImCnD,ALjC+B,ISoDnC,CRtDc,ADEA,CG6BN,CF/BkE,ADEnB,EE0ClD,EGTM,EFJI,CMuBL,EPVV,ACbkB,CMuBL,EPVI,CGTb,EFJoB,CAAC,CDaH,ACbJ,CMuBG,APVJ,COUK,CNvBO,CDaH,KAAK,ECbM,CAAC,CAA9B,EDaQ,COUH,CAAwB,CPVK,KAAK,GOUlC,CAAjB,EPV8C,GAAc,CAAxD;AOWJ,APVG,ACbS,AFhCmE,AIoC1E,ALlCuD,AQ0B5D,GNYE,AGrBE,CIoCA,AP7EJ,CAsEE,CChBU,AFhCmE,ADEnB,GQ0B5D,EP5BoF,ADEnB,ESqDpD,ANvBM,AFhCkE,ADEnB,CAAP,CCFmB,CQuD9D,ANvBM,AKJtB,MLI4B,CAAC,CMuBL,ANvBF,CMuBG,ENvBQ,QAAQ,CAAC,CAA9B,EMuBI,CAAwB,QAAxB,CAAhB;AACA,ANvBS,AFjC+E,ADEpB,AQjBpE,CAAA,EAAA,CCuEI,ERxDoF,ADEpB,KCFyB,ADEpB,CSsD7D,CRxDkF,ADEpB,ESsD3D,QAAQ,CAAC,cAAT,CAAwB,uBAAxB,CAAf;AACA,ARzD8E,AIuC9E,ALrC2D,ISuDvD,CRzDc,ADEA,CCFd,CDE0E,EKqC9E,EIkBW,GAAG,IAAI,EJlBlB,OIkBkB,CAAA,OAAJ,CAAY,cAAZ,CAAd;AACW,APTT,ACdM,AFlCJ,AIzBJ,AL0B+E,AQjBlE,CHTb,CHyEE,CGzEF,GL0B+E,CSwDpE,APTT,AMhEW,CCyEF,APTT,AMhEW,CLkDA,AFlCT,EQyDO,ATxDyE,CGiC5E,CAAS,AHjCoE,CSwDnE,CTxD4D,AQjBjE,ENgEX,COSoB,APTpB,AMhEW,ILkDL,AFlCJ,CQyDkB,ANtBV,CMsBU,CRzDF,AOhBP,CPgBQ,CQyDH,CAAQ,CPTxB,GAAA,GOSgB,ANvBV,CMuBG,CNrBC,CMuBZ,IPXc,CCZI,CAAC,KAFX,EAEkB,EDYxB,EAAuB;AAErB,ACbQ,AFrCU,ADCkE,IGoC5E,EFrCU,ADCkE,GEiD/E,CAAL,ACbc,CAAC,AFrCQ,ADCkE,EEiDhF,ADlDe,ADCkE,CCDzE,EEkCb,EAGkB,MDaF,CAAC,CAArB;AOUJ,APTI,ACbQ,AFtCkB,AIzBjB,AL0BiE,IS2DxE,CT3DY,CGiCV,AFlCsB,ADC1B,CK1BS,CF+DI,AE/DJ,CH4EJ,CAAL,CDnD+B,ECmDtB,ADnDuB,EQ4DnB,GAAG,CJrFP,GAAA,EH4EW,CAAC,CAArB,COSE,APZmB,CAItB,KG7EU,KIqFO,CAAC,KAAD,EAAc;AAE9B,ANvBQ,AFvCS,ADEjB,KCFgB,CEkCZ,CFlCgC,CEuCvB,CHrCb,aAAA,GAAgB,CAAC;AS6DjB,APVA,ACbQ,AFxC6B,ADEnB,IGsCV,EFxC6B,ADEnB,CS6Db,EPVA,EOUI,AN7BL,AFlCsC,ADEnB,CS6Db,CNvBO,AFxC0B,ADEnB,CAAP,CS6DJ,AR/DuB,CQ+DpC,EAAgB,APVhB,COUiB,EPfI,COeD,APTpB,KOSA,EAA2B,CAAC,EAA5B,EAAgC;AAC5B,APTL,ACdS,AFzCsC,ADEpB,GE8C5B,CAvEF,ACgEY,CDgBV,CDzDgD,ADEpB,ES8DhB,CAAC,EN9BP,AFlC+C,ADEpB,CS8DjB,CNvBG,AFzCmC,ADEpB,MS8DlB,CAAA,WAAA,CAAY,WAAZ,CAAwB,GAAxB,EAA6B,IAA7B,CAAV;AACA,ANvBI,AF1C4B,ADEnB,IGwCT,CF1CQ,ADEA,ECFuC,ADEnB,CS+D1B,CAAC,CNvBG,CAAC,CMuBD,GAAV,CN/BA,EAQkB;AMyBlB,ANxBI,AF3CgD,ADEnB,ISiEjC,ANxBI,EF3CgD,ADEnB,IGyCvB,CAAC,AF3C8C,ADEnB,ECFoB,ADEnB,CCFY,CQmExC,ATjEqB,EGgChC,CMiCW,ANxBO,cMwBP,CAAO,WAAP,EAAkB,CAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,OAAA,CAAA,WAAhB,CAAF,CAAlB,CAAX;AACH,APVH,ACxBM,AFlC4D,ADElB,EEwDhD,ID1DkE,ADElB,CEwDhD,CAAA,GD1DuE,ADElB,ECFmB,ADElB,IEwDtD,CAAA,mBAAA,GAAA,YAAA,CAEE;AOSH,APRE,ACfE,AF9CsD,ADEnB,CS0DxC,EAWA,APbE,ACvCE,EFnBgB,ADEA,ECFyD,ADElB;ACFmB,ADElB,MCFkB,ADElB,KCFuB,ADElB,ECFmB,ADElB,CAAP,CCFkB;AC8F7E,AChDK,AF9CkF,ADEnB,MCFmB,ADEnB,GE4FpE,ED9F4F,ADEnB,ECFoB,ADEnB,CE4F1E;AOtBA,AP/FA,ADuB6E,ADElB,CEzB3D,EAAA,CO+FM,CRxEc,ADEA,CCFhB,CAKsD,ADHmB,CCKzE,MQiEY,GAAG,SAAb,UAAa,CAAC,KAAD,EAAc;AAE7B,AN1BA,AFxCA,ADN0E,EG8C1E,IH9C0E,KAAK,EAAC,EAAP,IG8CzE,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AM2BA,APlGS,ACwEL,AFxCJ,ADPmF,MAAA,CSyE9E,APlGI,CAAA,CCwEA,EM0BA,ATzE+E,CSyE9E,AN1BN,CDxEK,ACwEI,AH/C4E,ESyE5E,CAAb,APlGS,EOkGO,CAAC,EPlGR,COkGW,AN1BhB,CAAmB,CAAnB,EAAsB,CM0B1B,AN1BI,EM0BuB,AN1BE,CM0BD,EAA5B,EAAgC,AN1BE,MAAL,CAAY,KAArC,EAA4C,KAAK,MAAL,CAAY,MAAxD;AM2BA,AN1BH,AHhDwE,GG8CzE,EH9CgB,CAAhB,ES0EU,CAAC,GAAG,OAAA,CAAA,WAAA,CAAY,WAAZ,CAAwB,GAAxB,EAA6B,IAA7B,CAAV;AACA,ARnEJ,ADPA,QS0EU,CAAC,AT1EX,GS0Ec,OAAA,AT1Ed,CS0Ec,ET1EA,EAAd,OS0Ec,CAAY,WAAZ,CAAwB,CAAxB,EAA2B,GAA3B,CAAV;AAEA,AN7BH,AHzCG,ISsEA,KTtEK,CAAL,CSsEO,CAAC,CTtEA,CAAR,CSsEA,CAAY;AAAC,ARpEjB,ADDI,MSqEa,CAAC,EAAA,ARpEb,ADDI,CSqEO,ARpEhB,ADDI,GCCK,ADDG,CCCZ,ADDI,CCLkD,CAM1C;AQoEQ,AN3BpB,AHzCI,EGyCJ,IM2BoB,CAAC,EAAA,ATpEZ,OAAL,GGyCJ,AHzCoB,CGyCpB,IHzCyB,CAAL,GAAS,CGyC7B,CAAA,GHzCkC,KAAL,GAAa,CAAtC,EGyCJ,GAAA,UAAe,aAAf,EAAmC,MAAnC,EAAiD;AM2BjC,ANzBV,AF1CN,ADAI,KSmEA,INzBO,AF1CN,ADAI,CCAT,EE0CM,CAAS,AF1CN,CAAT,CAPsD,CAO1C,ADAR,GAAgB,GG0Cd,CACE,CH3CiB,CAAL,GAAS,KAAK,GG0C5B,EACiB,CH3CM,GAAc,CAAvC;ASqEA,ANzBI,AH3CP,ISoEG,ANzBI,MAAM,CAAC,CAAP,CMyBK,ENzBM,CMyBN,INzBW,MAAL,CAAY,GMyBlB,CAAO,CNzBD,GAAoB,CAFjC,EAEoC,EMyB7B,EAAgB,CAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,OAAA,CAAA,WAAhB,CAAF,CAAhB,CAAT;AACH,ANzBO,AF5CR,SAAK,OAAL,GAAgB,KAAK,CAAL,GAAS,KAAK,KAAL,GAAa,CAAtC;AQsEH,ANzBW,AF5CR,ADCA,CSyDJ,CTzDI,GGuCM,EAIK,CH3CX,CCDK,ADCL,OCDA,EDCA,CCDgB,ADChB,KCDqB,CAAL,ADChB,GCDyB,ADCzB,KCD8B,KDCvB,CCDkB,GAAc,CAAvC,ADCA,EAA6B;AG6CrB,AF7CR,ADEI,QAAI,CG2CK,AF7CR,IDEQ,CAAC,CG2CN,CAAY,IF7CpB,ADEI,CGqCE,CHrCe,CG2CO,AF7CT,WAAnB;AQsEJ,ANxBY,AF5CR,ADAuB,ISoErB,IRpEE,CE4CS,EMwBJ,CRpED,EQoEI,CNxBJ,AF5CI,CE4CQ,GF5CpB,GEqCM,CM+BJ,CNxB2B,MMwBjB,GAAA;AACZ,ANxBQ,AF5CR,ADAQ,ESoER,GNhCM,EAQK,EF5CN,EDAQ,ESoEF,CAAC,CAAD,CAAX,CRpEA,ADAQ,CAAY,ECAJ,EDAR,SCAmB,CAAC,YAAA;AQqE5B,ANxBQ,AF7C4B,ADC/B,ESoEL,GNjCM,AHrCF,CCCgC,CE6CxB,GF7C4B,CAAC,ADC9B,CSoED,CAAC,CAAD,CAAV,ATpEe,KAAK,SCDgB,EDCrB,IAAoB,KAAK,eAAL,GAAuB,EAA/C,EAAkD;ASqEhE,ANxBW,AF9CuD,ADEvD,CSiEZ,IRnE+B,EAAsC,EE8CpD,EF9Cc,ADEd,CCFb,GE8CQ,CAAY,KAVd,EAUsB,GH5CpB;AG6CA,AF9CR,ADEK,KAFM,IG8CE,AF9CR,EDEM,IG4CH,CAAY,MAXd,CAWqB,EF9C3B,GAAwB,MAAxB;AQuEJ,ANpCU,AFjCP,ADCS,GC9CZ,CAiDE,GQiEK,CAAC,GAAR,ATpEiB,CSoEL,KTpEA,CAAY,KSoExB,ATpEY,ESoEa,SAAzB;ANvBK,AH5CI,GG6BL;AMyCJ,IAAI,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAM;AAEpB,AN5BC,AFzCH,ADDM,ECCN,IQqEK,CAAC,ARrEN,CAAA,ADDU,ISsEC,CAAC,ATtEG,CAAC,EAAN,CCCV,CAAA,EDDsB,ICCtB,CDD2B,CSsErB,CAAoB,ARrE1B,CQqEM,CTtEgB,CSsEO,ITtEO,GSsE/B,ERrEL,ADDM,CSsEkC,CTtEE,ESsErC,IAA0C,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA/E,EAAmF;AAC/E,ARpEJ,ADFQ,ISsEJ,OTtES,CCEL,KAAK,ADFL,ESsEW,CAAC,ATtEE,ESsElB,CTtEI,ESsEiB,IAArB,IRpEJ;AQqEC,AN5BD,AFxCE,ADFM,EG0CR,CM0BA,MAEO,ERpEA,ADFM,ESsEH,CAAC,CTtEH,GCEN,ADFkB,CSsEJ,AN5BhB,CM4BiB,AN5BjB,EH1CQ,OG0CR,CAAA,GM4BW,CAAoB,CAApB,EAAuB,AN5BlC,GAAA,IM4BU,GAAkC,GAAlC,AN5BF,GAAR,CM4BmD,CAAC,AN5BlC,KM4BuC,AN5BzD,CM4B0D,CN5BzB,KAAjC,EAAgD,KM4BI,CAAoB,CAApB,AN5BpD,EM4B2E,AN5BV,OM4Bd,AN5BnD,EAAgF,CM4BK,GAA9E,EAAmF;AACtF,AN3BA,AFzCA,ADFI,ISsEJ,KN3BK,EH3CI,CG2CT,AH3CI,CG2CK,AFzCJ,GDFS,GSsEC,ARpEf,CQoEgB,CTtEG,CG2CnB,AFzCc,CE0CV,AF1CJ,GQoEA,AN3BA,CH3CI,CG4CK,CM0BgB,IAAzB;AACH,AN1BO,AFzCJ,ADHC,GSoEE,CNxBC,KM0BD,AN5BH,EAEW,EM0BJ,ARnEF,CQmEG,ARnER,GAAU,EQmEG,CAAC,ERnEC,CAAL,GAAS,KAAK,EQmEhB,CAAoB,CAApB,EAAuB,ARnE/B,CAHF,CAKE,KQiEO,GAAkC,CAAlC,IAAuC,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA7E,EAAiF;AACpF,AN1BI,IM0BJ,eAAe,CAAC,IAAhB,GAAuB,IAAvB;AACH,AN1BO,AFxCJ,ADJA,GSoEG,CNxBC,IH5CA,CSsED,AN9BH,EAIW,EM0BL,ARlED,ADJI,CSsEF,ATtEG,ICIV,ADJA,CSsEY,CAAC,ATtEE,CCIF,KAAK,OQkEX,CAAoB,CAApB,EAAuB,GRlEjB,CAAoB,GQkE3B,ERlEgC,CQkEE,GAAlC,IAAyC,CAAC,KAAK,CAAC,CRlEzC,EAA2C,KAAxD,KQkEgD,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA9E,EAAmF;AACtF,AN1BI,AFxCJ,ADJI,ISsEJ,EN/BA,EAKS,GH5CA,ECIJ,IDJD,CCIJ,CQkEe,CAAC,ATtEE,CCIL,ADJM,CAAf,GSsEJ,CRlEkB,EQkEM,IAAxB,QRlEa,CAAoB,KAAK,gBAAzB,EAA2C,KAAxD;AQmEH,AN1BO,AFvCJ,ADLI,MGsCJ,EAMS,GH5CA,gBAAL,GAAuB,MAAvB;ASyEX,AN5BW,AH5CH,CS2DT,GNfY,OAPJ,EAOa;AACT,AFvCN,IEuCM,OARJ,AF/BG,EEuCW,IFvChB;AQoEN,AN5BY,AFvCJ,ADLA,ISwEJ,ENrCI,EASS,AH5CL,KSwEC,ARnEA,ADLI,CAAC,ESwEF,GRnER,ADLA,EAAgB,CCKF,CAAd,EQmEJ,SAAY,CAAC,KAAD,EAAM;AAElB,AN7BQ,AFtCJ,ADNI,ESyER,INvCI,CAUO,IH5CE,ECMJ,CAAL,GQmEW,ARnED,ADNN,CSyEQ,EAAhB,ATzEsB,CAAd,CCMW,CQmEE,ARnEP,GAAS,EQmEvB,GRnE4B,MAAxB,CAHF,CAKE;AQkEJ,ANxCI,AHjCI,ESyER,STzEa,MSyEE,CAAC,KAAhB,GAAwB,CTzEhB,GAAuB,CSyE/B,MTzEQ;AS0ER,AN7BC,AFrCG,ADPC,ESyEL,CN3CA,UFvBS,IQkEM,CAAC,ARlEZ,GAAa,CQkEjB,GAAuB,CRlED,IQkEtB,SRlEiB,CAAmB,KAAK,gBAAxB,EAA0C,KAAvD;AQmEJ,ARlEI,EQkEJ,WRlES,IQkEM,CAAC,ARlEZ,GAAa,GQkEjB,ERlEsB,CQkEG,KAAzB,ORlEiB,CAAmB,KAAK,gBAAxB,EAA0C,KAAvD;AQoEP,AN9BG,AFrCI,ADPA,CSmER,CNvBI,OH5CS,MAAL,GAAc,CG4ClB,AH5CI,CG4CJ,SAAA,CAAA,YAAA,GAAA,UAAa,KAAb,EAAkB;AACd,AFpCF,ADRE,SG4CK,AH5CA,CAAL,IAAU,CG4CV,CAAY,GH5CG,EG4Cf,GAAoB,CH5CpB,EG4CA,CADc,CACU;AM+BhC,ARlEM,ADPE,MSyEF,CAAC,ETzEM,MAAL,GAAc,KSyEtB,ATzE2B,CSyEH,KTzEF,GAAc,ISyEpC,ATzEQ,ESyE8B,WAAtC,EAAmD,KAAnD;AACA,AN/BQ,AFlCF,ADRE,MSyEF,CAAC,EN/BM,AH1CA,CAAL,IAAU,CG0CV,CAAY,GH1CG,GG0Cf,CM+BR,CAAwB,CN/BK,AH1CrB,GG0CA,CAFc,CAEW,IM+BjC,EAAoC,SAApC,EAA+C,KAA/C,GACA;AACA,ANhCK,AFjCC,GE8BF;AMoCJ,ARjEM,ADRE,QAAK,KAAK,CAAL,GAAS,KAAK,MAAf,GAAyB,KAAK,OAAlC,EAA0C;AS4ElD,ANlCI,AFjCE,ADT8C,EG0ChD,iBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAqB,OAArB,EAAqC,OAArC,EAAmD;AAC/C,AFjCF,ADTO,SG0CA,EH1CK,CG0CV,AH1CK,CG0CI,EH1CK,EG0Cd,GAAgB,AH1CG,OAAL,GAAe,EG0C7B,AH1CK;AS4Eb,ANjCQ,AFhCF,ADVO,OS2EN,ENjCM,EMoCb,AT9EkB,CG0CV,CAAS,EH1CJ,GAAY,GG0CjB,CAAkB,CH1Cb,EG0CL,EAAuB,OAAvB,EAAgC,OAAhC;AACH,AF/BC,ADXG,GGuCL;AMuCJ,ARlEM,SQkEG,IAAT,GAAa;AAET,ANrCJ,AF9BM,ADXE,ES8EJ,MT9EQ,CGyCZ,IHzCiB,CAAL,GAAS,ES8EA,CAAC,AT9Ed,EAAkB,GS8EtB,CNrCJ,EMmCa,CAIT;AN1JJ,AFsFM,ADZsB,CG1E5B,EAAA;AM4JI,ARrEE,ADZM,MSiFF,KTjFO,CAAL,CSiFK,ETjFI,CSiFD,EAAhB,ETjFsB,CAAL,GAAS,EAAlB;ASkFR,AN7JS,AFwFP,ADZG,KAFD,CSmFA,CN7JK,CAAA,GH4EE,GSiFC,CTjFG,ESiFA,CAAf,ETjFoB,CAAL,GAAS,CG5Ef,GAAA,GH4Ee,CAAA,GAAA,CAAI,SG5EnB,EH4Ee,GAAkB,GAA/B,EAAoC;ASkF/C,ATlFiD,MSkF3C,QAAQ,GAAG,EAAjB;AACA,ARrEI,ADbI,MSkFJ,KTlFS,CAAL,CSkFG,ETlFM,CSkFH,CAAd,GTlFsB,CAAL,GAAS,EAAlB;ASmFR,ARrEM,ADbD,MSkFD,ERrEE,KQqEK,ARrEA,CAAC,EQqEE,CAAd,aRrEW,CAAL;AQsEN,ARrEM,MQqEF,KAAK,GAAG,CAAZ;AACA,ARjHA,AD+BI,MSkFA,GTlFK,ESkFA,GAAG,CAAZ,QTlFI,CAAoB,KAApB;ASoFJ,ATnFI,MSmFA,GTnFK,CSmFD,GAAG,IAAI,CAAC,KAAL,CAAW,CTnFlB,OSmF0B,CAAC,CAAT,GAAa,QAAxB,CAAX,CAdS,CAcsC;ARrE/C,ADbC,GA9CD,MC2DK,cAAL;AQsEA,ARpEA,MQoEI,GRpEC,CQoEG,GAAG,IAAI,CAAC,ARpEhB,KQoEW,CAAW,QAAQ,CAAC,CAAT,GAAa,QAAxB,CAAX,CAfS,CAesC;ARnEhD,ADdC,EAAA,CCrCF,CAlDF,CAuGE,GDhBE,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,CAAZ,EAAuB,CAAvB,EAAgC;ASkFhC,ATjFI,MSiFA,GTjFK,CSiFD,ATjFJ,GSiFO,ATjFE,CAAT,GSiFW,CAAC,IAAL,CAAU,CAAC,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC,KAAvB,IAAgC,QAA1C,CAAX,CAhBS,CAgBuD;AThF5D,SAAK,CAAL,GAAS,CAAT;ASiFJ,ARlEF,ADdM,ECcN,IQkEM,CRlEN,CAAA,CDdW,CSgFD,GAAG,GThFP,CSgFW,ARlEjB,CQkEkB,ARlElB,CDdsB,GSgFT,CAAU,CAAC,AThFG,CAAL,GAAS,ISgFC,CAAC,AThFG,CSgFZ,ARlExB,GQkEqC,ARlErC,CDd+B,GAAa,CAAtC,GSgFuC,CAAC,CRlE7B,CAAjB,EAAoB,CAApB,CQkEuB,CRlEF,GQkEmC,QAA3C,CAAX,CAjBS,CAiBwD;ARjEjE,ADdI,SCcC,ADdI,CCcT,GAAS,CAAT,EDdI,GAAgB,KAAK,CAAL,GAAS,KAAK,MAAL,GAAc,CAAvC;ASkFJ,ARnEA,ADdC,GALD,CAtFJ,CA6FI,ES+EK,ERnEA,CAAL,CQmES,CAAC,CRnED,CAAT,CQmEa,IAAb,EAAmB,CAAC,GAAG,IAAvB,EAA6B,CAAC,EAA9B,EAAiC;AAE7B,ARpEL,GAHD,CAxGF,CA6GE,IQkEW,IAAI,CAAC,GAAG,IAAb,EAAmB,CAAC,GAAG,IAAvB,EAA6B,CAAC,EAA9B,EAAiC;AAE7B,UAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,GAAG,OAAJ,GAAc,CAAf,CAApB;AACA,ATnFR,EAAA,ISmFQ,ETnFR,CAAA,ISmFe,GAAG,CAAC,CTnFnB,CAAA,CSmFsB,MTnFtB,ESmFkB,CTnFlB,ESmFiC,QAAQ,ATnFjC,CSmFkC,CAAlC,ITnFR,EAAwB;ASoFhB,ARrEV,ADdM,ECcN,IQqEU,CRrEV,CAAA,CDdW,ISmFM,ATnFX,GSmFc,ATnFF,CSmFG,ARrErB,CAAA,EQqEwB,ETnFlB,MSmFc,GAAe,KRrEnC,GQqE2C,ARrE3C,CQqE4C,CAAlC,CAJ6B,CAMjC,QRvEN;AACE,ADdC,GAFD,MCgBK,gBAAL,GAAwB,KAAK,WAAL,CAAiB,eAAjB,EAAxB;AQuEU,ARtEX,GAFD,CA9GF,CAkHE,KQoEY,EAAA,GAAA,OAAA,CAAA,kBAAA,CAAA,KAAA,CAAA;AAAA,ATnFV,EAAA,MAAA,CAAA,CSmFW,KAAA,GAAA,EAAA,CAAA,ETnFX,CAAI,ESmFM,ITnFN,CAAA,SAAJ,EAAI,eAAJ,EAAiB;ASmFP,STnFV,CSmFiB,KAAA,GAAA,EAAA,CAAA,GTnFjB,ESmFU;ARnEZ,ADhB+B,ECgB/B,KAAA,CAAA,KDhBsC,ICgBtC,CAAA,ADhB2C,SCgB3C,CDhB+B,ECgB/B,YAAA;AQqEU,ARnER,ADlBqD,KAApC,KSqFL,KAAK,KAAK,CAAd,EAAgB;AACZ,ARnEZ,QQmEY,CRnEP,OAAL,GAAiB,CDnBA,ICmBK,CQmEO,ARnEZ,CQmEa,ERnEJ,KQmEd,ARnEmB,CQmEO,IRnEtB,GAAyB,GQmE7B,EAAsC,ARnEJ,KQmElC,ARnE6B,EQmEgB,CRnEH,CAAtD,GQmEY,EAAoD,OAApD,EAA6D,OAA7D;AACH,ARnET,SAAK,OAAL,GAAiB,KAAK,CAAL,GAAS,KAAK,MAAf,GAA0B,KAAK,MAAL,GAAc,CAAxD;AQqEK,ARpEN,ADrBkB,GCgBnB,ADhBE,CCnGJ,CA2HE;AQmEG,AT3FoD,GSsD5C,CAuCT;AT5FA,EAAA,MAAA,CAAA,cAAA,CAAI,MAAA,CAAA,SAAJ,EAAI,eAAJ,EAAiB;ACwBnB,EAAA,KAAA,CAAA,CDxBE,QCwBF,CAAA,IDxBoB,KAAlB,ECwBF,ADxBiC,GCwBjC,UAAY,WAAZ,EAAuB;AQqErB,ARnEA,AD1BmC,ES6FnC,ORnEK,CAAL,CQmES,AT7F+B,CS6F9B,CRnED,MQmET,CAAkB,CT7FiB,GC0Bf,AD1BiC,CC0BhC,CAArB,GD1BmC,CS6FjB,KAAA,EAAK;AACnB,ARnEJ,AD3B4D,IS8FxD,CT9Fa,IS8FR,ARnEJ,CQmEK,ARnEV,GAAS,GQmEL,CAAa,MAAb,CRnEgB,CAAC,CAArB,CAHqB,CAItB;AQmEK,IAAA,gBT/Fa,CS+FI,CAAC,UAAlB,CAA6B,UAA7B,EAAyC,QAAzC,EAAmD,KAAnD;ARlEJ,SAAK,SAAL,GALqB,CAMrB;AQmEI,ARlEL,AD/BkB,GCwBnB,ADxBE,CCpGJ,CAqIE,ADpIF,CAqGI,ES+FQ,CAAC,KAAK,CAAC,iBAAP,IAA4B,OAAA,CAAA,WAAA,CAAY,cAAZ,CAA2B,MAA3B,EAAmC,KAAnC,CAAhC,EAA0E;AAAE;AACxE,AT/FR,EAAA,IS+FQ,ET/FR,CAAA,ES+Fa,CAAC,MT/Fd,CAAA,MAAA,GAAA,CS+FQ,GAA0B,IAA1B,CADsE,CAEtE,AThGD,MAAP,EAAuB;AC+BzB,AD9BM,EC8BN,KAAA,CAAA,CD9BW,QC8BX,CAAA,ED9BM,GAAmB,MAAnB,QC8BN,GAAA,YAAA,CAEE;AQgEQ,AR/DT,ADhCK,GC6BN,CAtIF,CA2IE,CQ6DU,GT/FC,GS+FK,CAAC,WT/FX,ES+FI,CT/FmB,CAAvB,CS+F2B,MAAM,CAAC,aAAP,GAAuB,CAA9C;AACH,AT/FJ,GAHD,CAtGJ,CA2GI;AS8FC,GATD;AAWA,ARhEF,EQgEE,ARhEF,KAAA,CQgEQ,ARhER,CQgES,MAAP,CAAc,CRhEhB,CAAA,aQgEE,CRhEF,GAAA,YAAA;AQiEE,AR/DA,ADjCA,ESgGA,AThGA,MAAA,CAAA,SAAA,CSgGiB,AThGjB,CSgGkB,UAAlB,CAA6B,EThG7B,GAAA,ISgGA,EAAwC,IThGzB,ISgGf,CThGA,CSgGkD,CThGb,KSgGrC;AACA,AR/DA,ADhCI,ES+FJ,MR/DI,EQ+DI,CAAC,ER/DA,aQ+DT,CAAyB,ER/DrB,GAAwB,CQ+DG,AR/D/B,CQ+DgC,CAAP,AR/DK,IQ+DQ,MAAM,CAAP,GAAY,MAAM,CAAC,KAAP,GAAe,CAAvC,CAAzB,EAAqE,MAAM,CAAC,CAAP,GAAY,MAAI,CAAhB,GAAqB,EAA1F,EAA+F,GAA/F,EAAoG,GAApG;AR9DI,ADhCA,QAAI,GCgCC,EDhCI,cCgCT,EDhCI,GAAwB,CAA5B,EAA8B;ASgGlC,AR/DC,ADhCO,KC8BR,CQiEI,KR/DG,ADhCM,CS+FH,CAAC,ER/DA,KAAK,IQ+DhB,EAAuB,CT/Ff,SCgCG,KAA0B,CAA9B,EAAgC;AQ+Dd,AR9DrB,ADhCC,KAFD,MCkCK,ADhCE,IAAI,KAAK,OCgChB,GAAwB,CAAxB,KDhCW,KAA0B,CAA9B,EAAgC;AS+FvC,AR9DH,ADhCO,IS8FJ,OT9FS,US8FQ,CAAC,IAAlB,CAAuB,AT9FnB,GAAwB,CAAxB,OS8FJ,EAAmC,QAAnC,EAA4C,MAAM,CAAC,UAAnD;AACH,AT9FI;ACiCL,QAAI,KAAK,gBAAL,KAAyB,MAA7B,EAAoC;AQgEpC,AR/DI,ADhCA,OS+FC,CT/FG,GS+FC,AR/DA,CQ+DC,CT/FG,CAAC,CS+FD,CAAb,EAAgB,AT/FZ,CS+Fa,CT/FE,ES+FC,KR/DhB,GQ+DwB,AR/DA,CQ+DC,IR/DI,EQ+DjC,EAAqC,CAAC,EAAtC,EAAyC,IR/DrC;AQiEA,ARhEH,ADhCO,ISgGJ,CRlEJ,MAEO,ADhCM,CSgGD,GAAG,ARhEJ,IQgEQ,CAAC,ARhEJ,KQgED,CAAW,CAAC,AThGnB,GSgGuB,AThGC,KAAK,CCgC1B,CQgEI,CAAX,GRhEgC,OAA7B,ADhCC,ECgCoC;AQiExC,ARhEA,ADhCC,ISgGD,CTlGA,ISkGK,ERhEA,ADhCE,CSgGC,CAAC,CAAC,CThGC,ESgGE,GThGG,CAAC,ISgGI,CThGd,CCgCP,CQgEwB,AThGD,ECgCC,KQgEhB,ARhEqB,IQgEM,QAAnC,ERhEA;AQiEA,ARhEH,ADhCO,ISgGJ,KAAK,EThGI,CSgGD,QAAQ,GAAG,IThGf,GAAwB,CSgG5B,CAJqC,CAMrC,ETlGiC,cAA7B;ASmGJ,ATlGC;ASmGD,ARlEJ,QAAI,KAAK,gBAAL,KAAyB,OAAzB,IAAoC,KAAK,MAAL,GAAc,GAAtD,EAA2D;AQmEvD,ARnEyD,AD/BzD,QAAI,KAAK,gBAAL,KAAyB,OAAzB,IAAoC,KAAK,MAAL,GAAc,GAAtD,EAA2D;ASmG3D,ARnEA,ADhC6D,WCgCxD,KAAL,GAAa,CAAb;AQoEA,ARnEA,ADhCI,WCgCC,ADhCI,KCgCT,ADhCI,GCgCS,ADhCI,CAAb,CCgCJ;AQoEA,ARnEH,ADhCO,KC6BR,MAGO,ADhCM,ICgCF,CDhCH,GAAa,CCgCL,CDhCR,eCgCG,KAAyB,MAAzB,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;AQoE9D,ARpEgE,AD/B/D,KAHD,MAGO,IAAI,KAAK,gBAAL,KAAyB,MAAzB,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;ASoGlE,ARpEA,ADhCoE,WCgC/D,KAAL,GAAa,CAAb;AQqEA,ARpEA,ADhCI,WCgCC,ADhCI,KCgCT,ADhCI,GCgCS,ADhCI,CAAb,CCgCJ;AACH,ADhCO,KC6BD,MAGA,ADhCM,ICgCH,CDhCF,GAAa,CCgCN,CDhCP,eCgCE,KAAyB,UAAzB,IAAuC,KAAK,MAAL,GAAc,GAAxD,EAA6D;AQuEhE,ARtEA,ADhCC,KAHM,GSyGJ,GRtEE,ADhCE,IAAG,CSsGC,ARtEX,CQsEY,CAAD,CAAR,ARtEU,CAAb,ADhCe,ISsGI,CAAnB,EAAqB,STtGX,KAAyB,UAAzB,IAAuC,KAAK,MAAL,GAAc,GAAxD,EAA6D;ASuGhE,ARtEJ,ADhCI,USsGG,CRtEF,ADhCI,KCgCT,ADhCI,CSsGG,CAAA,CRtEM,ADhCI,CAAb,CCgCJ,QQsEO,CAAY,eAAZ,CAA4B,MAA5B,EAAoC;AAAC,ARrE/C,ADhCO,KC6BD,GQwEyC,CAAC,EAAE,ARrE5C,ADhCM,KSqGkC,ATrGvC,GAAa,EAAb;ASqGkD,ARrEjD,AD/BJ,KAHM,GSuG+C,CAAC,EAAE,ATpGlD,KSoGoC;AAAqB,ARpEhE,ADhCS,QSoGuD,GRpE3D,EQoEgE,EAAE,CRpEvE,CQoE2C,ERpE9B,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,EAA6C,KAA1D;AQoE2E,ARnE3E,ADhCI,QSmGuE,GRnEtE,ADhCI,GSmGwE,EAAE,ARnEnF,ADhCI,ESmGuC,CRnE9B,ADhCI,KCgCC,ADhCI,gBCgCT,ADhCI,CCgCkB,ADhCI,KCgCC,ADhCI,gBCgC/B,ADhCI,ECgCyC,ADhCI,KCgC9D,ADhCI;ASmGoF,ARlE3F,ADhCO,QSkGoF,GTlG/E,ESkGoF,EAAE,CTlG3F,GAAa,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,EAA6C,KAA1D;ASkGuC,ARjEhD,ADhCM,GCIP,IQ6Fa,CAAH,EAAiG;AAE7F,ATlGX,GA5BD,CA5GJ,CA0II,GSgGY,MAAM,CAAC,OAAP,CAAe,KAAf;AAEA,ARnEhB,QQmEgB,CRnEhB,KQmEsB,ARnEtB,CQmEuB,OAAP,GAAiB,KAAjB;AACA,AR9OhB,CAAA,EAAA,KQ8OgB,MAAM,CAAC,MAAP,CAAc,eAAd;AACA,ATnGZ,EAAA,MAAA,CAAA,GSmGkB,GAAG,GAAG,ATnGxB,CAAA,eSmGsC,CTnGtC,GAAA,ESmG4C,CAAC,CAArB,GAAsB,KTnG9C,USmGwB,GAAsC,MAAM,CAAC,CAAzD;AACA,ARhPH,AD8IL,OC9IK,CQgPG,ARhPH,AD8ID,CAAJ,IC9IK,GAAA,KAAA,IQgPoB,CAAC,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,EAAmC,EAAnC;AAEA,ATnGR,QAAI,CAAC,GSmGS,ATnGN,ISmGU,CTnGL,CAAL,CSmGa,ETnGJ,KAAK,MSmGU,ATnGf,GAAa,CAA9B,CSmGqB,GAAgB,YAAhB,GAA6B,KAA1C;AACA,QAAA,iBAAiB,CAAC,OAAlB,CAA0B,IAA1B,EAAgC,EAAhC,EAAoC,GAApC;AAEA,ATpGR,QSoGQ,ATpGJ,KAAK,GSoGO,CAAC,YTpGb,GSoGI,CAAyB,CTpGJ,KSoGU,CAAC,ATpGxC,CSoGiC,CTpGI,GSoGS,MAAM,CAAP,GAAY,MAAM,CAAC,KAAP,GAAe,CAAvC,CAAzB,EAAqE,MAAM,CAAC,CAAP,GAAY,MAAI,CAAhB,GAAqB,EAA1F,EAA+F,GAA/F,EAAoG,GAApG;AAGH,ATvGkC,OSwFnC,MAeO;AAEH,ATxGJ,MAAA,CAAC,CSwGG,ETxGA,ISwGM,CAAC,ATxGF,CAAL,GAAS,GSwGT,ETxGc,CSwGG,GAAjB,CTxGS,GAAa,CAA1B;ASyGI,ATxGP,KAFD,GS0GQ,GTxGD,GSwGO,CAAC,ATxGJ,KAAK,CSwGR,CAAc,cTxGX,CSwGH,ITxG4B,OAA7B,EAAqC;ASyGpC,ATzGsC,YSyGhC,iBAAiB,GAAE,gBAAc,MAAM,CAAC,CAA9C;AACA,ATzGJ,MAAA,CAAC,CSyGG,ETzGA,KAAK,CAAL,GAAS,KAAK,CSyGG,CAAC,GTzGT,GAAa,CSyGtB,ATzGJ,CSyG8B,iBAA1B,EAA6C,EAA7C,EAAiD,GAAjD;AAEA,AT1GP,YS0Ga,iBAAiB,GAAE,gBAAc,MAAM,CAAC,CAA9C;AACA,QAAA,iBAAiB,CAAC,OAAlB,CAA0B,iBAA1B,EAA6C,EAA7C,EAAiD,GAAjD;AAEA,AT3GR,SAAK,GS2GS,OT3Gd,GAAkB,IAAI,GS2GS,GAAE,OT3GX,CAAA,OS2GwB,GT3G5B,CAAe,CAAf,CS2GkC,CAAC,AT3GjB,CAAlB,EAAqB,KAAK,KS2GpC,AT3GU,EAAiC,KAAK,MAAtC,CAAlB;AS4GQ,AT3GX,GAZD,KSuHY,iBAAiB,CAAC,OAAlB,CAA0B,iBAA1B,EAA6C,EAA7C,EAAiD,GAAjD;AAEA,QAAA,QAAQ,CAAC,eAAT,CAAyB,MAAM,CAAC,CAAP,IAAa,MAAM,CAAP,GAAY,MAAM,CAAC,KAAP,GAAe,CAAvC,CAAzB,EAAqE,MAAM,CAAC,CAAP,GAAY,MAAI,CAAhB,GAAqB,EAA1F,EAA+F,GAA/F,EAAoG,GAApG;AAEH,AT9Gb,SAAA,MAAA;ASgHS,ATxQT,CAAA,EAAA;AS2QK;AT3QQ,OAAA,CAAA,MAAA,GAAA,MAAA;AS8QT,EAAA,WAAW,CAAC,OAAZ,CAAoB,UAAC,KAAD,EAAQ,KAAR,EAAa;AAC7B,IAAA,KAAK,CAAC,MAAN;AACA,IAAA,iBAAiB,CAAC,UAAlB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD,KAAjD;;AAGA,QAAI,MAAM,CAAC,WAAP,IAAsB,OAAA,CAAA,WAAA,CAAY,cAAZ,CAA2B,MAAM,CAAC,UAAlC,EAA8C,KAA9C,CAA1B,EAA+E;AAC3E,MAAA,KAAK,CAAC,sCAAD,CAAL;AACA,MAAA,WAAW,CAAC,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B;AACH;AACJ,GATD;AAaA,EAAA,MAAM,CAAC,qBAAP,CAA6B,IAA7B;AACH,EAKD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;AACA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,iBAAiB,CAAC,YAApD,EAAkE,KAAlE;AACA,MAAM,CAAC,gBAAP,CAAwB,mBAAxB,EAA6C,iBAAiB,CAAC,YAA/D,EAA6E,KAA7E;AAGA,IAAI","file":"side-scrolling-rpg.77de5100.js","sourceRoot":"..","sourcesContent":["import { sprite } from \"../interface/general-interfaces\";\n\nexport class DamageZone implements sprite {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    color = '#DC33B8';\n\n    constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n}","import { InputController } from './input-controller';\nimport { sprite } from '../interface/general-interfaces';\nimport { DamageZone } from './damage-zone';\nimport { map } from '../../../index';\n\nexport class Player {\n\n    x: number;\n    y: number;\n    centerX: number;\n    centerY: number;\n    faceX= 0;\n    faceY= 64;\n    width=64;\n    height=64;\n    jump = false;\n    speedX=0;\n    speedY=0;\n    color= '#E44C4A';\n    currentDirection = 'standing';\n    isAttacking: boolean;\n    attackTimeFrame: number;\n    damageZone: DamageZone;\n    \n    groundY = 704;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    lifeCredit =  10;\n\n    constructor(\n        x: number,\n        y: number,\n    ){\n        this.x= x;\n        this.y= y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    update(input: InputController){\n\n        if (input.attack){ // Si le joueur attaque\n            this.attack(true);\n        } else if (this.isAttacking && this.attackTimeFrame < 60){\n            this.attackTimeFrame++;\n        } else {\n            this.attack(false);\n        }\n\n        if (input.up && this.jump === false){\n            this.speedY = 230;\n            this.jump = true;\n            this.y -= this.speedY;\n        }\n\n        if (input.left){\n            this.speedX = -1;\n            this.currentDirection= 'left';\n        }\n\n        if (input.right){\n            this.speedX = 1;\n            this.currentDirection= 'right';\n        }\n        \n        this.speedY = 1;\n        this.y += this.speedY;\n\n        this.speedX = this.speedX * 0.90;\n        this.x += this.speedX;\n\n        \n        if ((this.y + this.height) > this.groundY){ // Si le player se trouve plus bas que palier\n             this.y = this.groundY - 64;\n             this.jump = false;\n        }\n\n        if (this.x < 300) { // On empeche le joueur d'aller au bord gauche de la map courante\n            this.x = this.x + 10;\n        } else if (this.x > map.getMapWidth - 300 ){ // On empeche le joueur d'aller au bord droit de la map courante\n            this.x = this.x - 10; \n        }\n\n        this.updateFaceCrop(input);\n        this.updateDamageZone();\n    }\n\n    setPosition(x: number, y: number){\n        this.x = x;\n        this.y = y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    // Méthode appelée quand le bouton de saut est touché\n    setJump(status : boolean): void {\n        this.jump = status;\n    }\n\n    get getLifeCredit():number { return this.lifeCredit;};\n    set setLifeCredit(value: number) { this.lifeCredit = value;}\n\n    // Méthode appelée quand le bouton d'action est touchée\n    attack(status : boolean): void {\n        this.isAttacking = status;\n        this.attackTimeFrame = 0;\n    }\n\n    // Méthode pour définir les coordonnées de la posture à croper\n    updateFaceCrop(input: InputController): void {\n\n        // On incrémente le compteur de pas\n        if (this.currentLoopIndex < 3){\n            this.currentLoopIndex++\n        } else if (this.currentLoopIndex === 3){\n            this.currentLoopIndex = 0;\n        }\n\n        if (input.left){\n            this.currentCycleLoop = this.leftCycleLoop;\n        } else if (input.right){\n            this.currentCycleLoop = this.rightCycleLoop;\n        }\n\n        if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n            this.faceX = 0;\n            this.faceY = 64;\n        } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n            this.faceX = 0;\n            this.faceY = 32;\n        } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n            this.faceX = 0;\n            this.faceY = 64;\n        } else { // Il avance\n            this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n            this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n        }\n    }\n\n    // On met à jour la zone d'attaque devant le joueur\n    updateDamageZone(): void {\n\n        let x: number\n        let y = this.y - this.height /2;\n\n        if (this.currentDirection=== 'left') { // Si direction vers la gauche\n            x = this.x - this.width / 2;\n        } else if (this.currentDirection=== 'right'){ // Si direction vers la droite\n            x = this.x + this.width / 2;\n        }\n\n        this.damageZone = new DamageZone(x, y, this.width, this.height);\n    }\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\n\nexport class Enemy {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    //characterImg: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 2;\n    color = '#6BE44A';\n    currentDirection: string;\n    faceX = 0;\n    faceY = 64;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    autoMove: any;\n    gameService: GameService;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n    this.gameService = gameService;\n\n    let that  = this;\n    this.autoMove = setInterval(() => { that.setRandomDirection();}, 3000);\n    this.currentDirection = 'left';\n\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update() {\n\n    switch (this.currentDirection) {\n      case 'right':\n        this.speedX = 2;\n\n        this.x = (this.x + this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.rightCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.rightCycleLoop[this.currentLoopIndex].faceY;\n\n        break;\n\n      case 'left':\n        this.speedX = 2;\n\n        this.x = (this.x - this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.leftCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.leftCycleLoop[this.currentLoopIndex].faceY;\n        break;\n\n      // case 'north':\n      //   this.speedY = 2;\n\n      //   this.y = (this.y - this.speedY);\n\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.upCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.upCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n      // case 'south':\n\n      //   this.speedY = 2;\n      //   this.y = (this.y + this.speedY);\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.downCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.downCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n        default:\n          alert('default update');\n          break;\n    }\n\n    this.updateFaceCrop()\n\n    this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    this.currentDirection = this.gameService.randomDirection();\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n  updateFaceCrop(): void {\n\n    // On incrémente le compteur de pas\n    if (this.currentLoopIndex < 3){\n        this.currentLoopIndex++\n    } else if (this.currentLoopIndex === 3){\n        this.currentLoopIndex = 0;\n    }\n\n    if (this.currentDirection=== 'left'){\n        this.currentCycleLoop = this.leftCycleLoop;\n    } else if (this.currentDirection=== 'right'){\n        this.currentCycleLoop = this.rightCycleLoop;\n    }\n\n    if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n        this.faceX = 0;\n        this.faceY = 64;\n    } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n        this.faceX = 0;\n        this.faceY = 32;\n    } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n        this.faceX = 0;\n        this.faceY = 64;\n    } else { // Il avance\n        this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n    }\n  }\n\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\nimport { Player } from './player';\n\nexport class Block {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    img: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 0;\n    faceX = 0;\n    faceY = 64;\n    haveTouchedPlayer: false;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update(player: Player) {\n\n    if (this.x < player.x && this.x + this.width > this.x) { // Si le joueur est en dessous du block\n        // Le block tombe\n        this.speedY = 2;\n    }\n    this.y = this.y + this.speedY;\n\n    //this.updateFaceCrop()\n\n    //this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    \n    //this.currentDirection = this.gameService.randomDirection();\n    //console.log('setRandomDirection this.currentDirection',this.currentDirection);\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n//   updateFaceCrop(): void {\n\n//     // On incrémente le compteur de pas\n//     if (this.currentLoopIndex < 3){\n//         this.currentLoopIndex++\n//     } else if (this.currentLoopIndex === 3){\n//         this.currentLoopIndex = 0;\n//     }\n\n//     if (this.currentDirection=== 'left'){\n//         this.currentCycleLoop = this.leftCycleLoop;\n//     } else if (this.currentDirection=== 'right'){\n//         this.currentCycleLoop = this.rightCycleLoop;\n//     }\n\n//     if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n//         this.faceX = 0;\n//         this.faceY = 32;\n//     } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else { // Il avance\n//         this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n//         this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n//     }\n//   }\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\nimport { Enemy } from './enemy';\nimport { ViewPort } from './viewport';\nimport { Block } from './block';\n\n\nexport class DisplayController {\n    \n    private canvas: any;\n    private ctx: CanvasRenderingContext2D;\n\n    constructor(\n         canvas: any\n    ){\n        this.canvas = canvas;\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 //window.innerHeight;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    initCanvas(){\n     \n    }\n\n    draw(shape: string, viewPort: ViewPort, sprite: sprite): void {\n\n        const {x, y, width, height, color } = sprite;\n        this.ctx.fillStyle = color;\n\n        switch(shape){\n\n            case 'rectangle':\n                this.ctx.fillRect(\n                    x - viewPort.x,\n                    y - viewPort.y,\n                    width,\n                    height\n                );\n                break;\n                default:\n                this.ctx.fillRect(x, y, width, height);\n                break;\n        }\n        \n    };\n\n    drawSprite(characterImg: any, viewPort: ViewPort, sprite: sprite){\n\n        // On va déterminer les coordonnées Y/Y du sprite à affichernsur le canvas\n        let canvasX: number;\n        let canvasY: number;\n\n        if (sprite instanceof Player){\n            canvasX = (this.canvas.width / 2) - sprite.width / 2;\n            canvasY = (this.canvas.height - 256 - sprite.height);\n        }\n        if (sprite instanceof Enemy || sprite instanceof Block){\n            canvasX = sprite.x - viewPort.x;\n            canvasY = sprite.y - viewPort.y;\n        }\n\n        this.ctx.drawImage(\n            characterImg,\n            sprite.faceX, // Position X de la partie à croper\n            sprite.faceY, // Position Y de la partie à croper\n            32 , // Largeur de la partie à croper\n            32 , // Hauteur de la partie à corper\n            canvasX, // on l'affiche toujours au milieu du canvas // Position x de l'image à croper sur le canvas\n            canvasY, // on l'affiche toujours au milieu du canvas // Position y de l'image à croper sur le canvas\n            sprite.width, // Largeur de la partie cropée\n            sprite.height // Hauteur de la partie cropée\n        );\n\n    };\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n\n    drawBackground(backgroundImg: any, player: sprite){\n\n          this.ctx.drawImage(\n            backgroundImg, // Objet image représentant le background\n            player.x - this.canvas.width / 2, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            0, // Position Y de la partie à croper\n\n            this.canvas.width , // Largeur de la partie à croper\n            this.canvas.height , // Hauteur de la partie à corper\n            0, // Position X sur le canvas de l'image cropée\n            0,  // Position Y sur le canvas de l'image cropée\n            this.canvas.width , // Largeur de l'image cropée sur le canvas\n            this.canvas.height // Hauteur de l'image cropée sur le canvas\n          );\n    };\n\n    drawImg(img: any, cropX: number, cropY: number, canvasX: number, canvasY: number ): void {\n\n        this.ctx.drawImage(\n            img, // Objet image représentant le background\n            cropX, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            cropY, // Position Y de la partie à croper\n            64 , // Largeur de la partie à croper\n            64 , // Hauteur de la partie à corper\n            canvasX, // Position X sur le canvas de l'image cropée\n            canvasY,  // Position Y sur le canvas de l'image cropée\n            64 , // Largeur de l'image cropée sur le canvas\n            64 // Hauteur de l'image cropée sur le canvas\n          );\n    }\n\n    resizeCanvas(event): void {\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 // window.innerHeight;\n    }\n   \n    drawTxt(txt: string, canvasX:number, canvasY:number): void {\n        this.ctx.font = \"20px Arial\";\n        this.ctx.fillText(txt, canvasX, canvasY);\n    }\n}","\nexport class InputController {\n\n    left= false;\n    right = false;\n    up = false;\n    down = false;\n    attack = false;\n\n    constructor(){\n    }\n\n\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\n\nexport class GameService {\n\n    constructor(){\n    }\n\n    // On vérifie s'il y a collusion entre deux sprites\n    checkCollision(a: sprite, b: sprite): boolean {\n        // On vérifie si A et B sont sur la même mapsheet et s'il y a collision\n        if (\n        (\n            b.x > a.x + a.width ||\n            b.x < a.x - b.width ||\n            b.y > a.y + a.height ||\n            b.y < a.y - b.height\n        )) { // Pas de collision\n            return false;\n        } else { // collision\n            return true;\n        }\n    }\n\n    // On réagit à la collision\n    handleCollision(a: sprite, b: sprite){\n \n        if (\n            (a.y + a.height < b.y + 20 && a.y + a.height > b.y)\n            && ((a.x + a.width > b.x && a.x + a.width < b.x + b.width) \n            || (a.x < b.x + b.width && a.x > b.x))\n\n        ){\n           return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    // Méthode qui retourne un chiffre compris entre A et B\n    rangeNumber (a,b){\n        return Math.floor((Math.random() * b)) + a;\n    };\n\n    // Méthode qui renvoie une direction aléatoire\n    randomDirection(){\n        const randomNumber = this.rangeNumber(1,2);\n        console.log('randomNumber', randomNumber);\n        let direction = '';\n\n        switch(randomNumber){\n            case 1:\n                direction = 'right';\n                break;\n            case 2:\n                direction = 'left';\n                break;\n            default:\n                direction = 'right';\n                break;\n        }\n        return direction;\n    }\n\n\n}","export class ViewPort {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    defineViewPoint(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height; \n    }\n}","\ninterface Grid {\n    nbCol: number,\n    tileSize: number,\n    collection: any[]\n}\n\n\nexport class Map {\n\n    private nbCol: number;\n    private nbRow: number;\n    private tileSize: number;\n    private collection: number[];\n    private length: number;\n    private width: number;\n    private height: number;\n\n    constructor({nbCol, tileSize, collection}: Grid) {\n        this.nbCol = nbCol;\n        this.tileSize = tileSize;\n        this.collection = collection;\n        this.length = collection.length;\n        this.nbRow = collection.length / nbCol;\n        this.width = nbCol * tileSize;\n        this.height = (collection.length / nbCol) * tileSize;\n    }\n\n    get getMapCollection(): number[] {\n        return this.collection;\n    }\n\n    get getMapWidth(): number {\n        return this.width;\n    }\n\n    get getMapHeight(): number {\n        return this.height;\n    }\n\n}","\ninterface CropCoordinates {\n    cropX: number,\n    cropY: number\n}\n\ninterface Grid {\n    nbCol: number,\n    nbRow: number,\n    tileSize: number\n}\n\nexport class TileSet {\n\n    nbCol: number;\n    nbRow: number;\n    tileSize: number;\n    imgTileSetCropList: CropCoordinates[] = [];\n\n    constructor(\n        {nbCol, nbRow, tileSize}: Grid\n        \n    ){\n        this.nbCol = nbCol;\n        this.nbRow = nbRow;\n        this.tileSize = tileSize;\n\n        // On constritue la liste des coordonnées des tuiles sur cette tileSet\n        this.initImgTileSetCropList();\n    }\n\n    // On initialise la liste des coordonnés de crop\n    initImgTileSetCropList(): void {\n\n        let cropX: number;\n        let cropY: number;\n\n        for(let y = 0; y < this.nbRow; y++){\n\n            for(let i = 0; i < this.nbCol ; i++){\n\n                cropX = i * this.tileSize;\n                cropY = y * this.tileSize;\n                \n                this.imgTileSetCropList = [...this.imgTileSetCropList, {cropX: cropX, cropY: cropY}];\n            }\n        }\n\n        console.log('this.imgTileSetCropList', this.imgTileSetCropList);\n    }\n\n    // Renvoie les coordonnées de l'image à croper en fonction d'un index de tuile\n    getCropCoordinates(id: number): CropCoordinates {\n        return this.imgTileSetCropList[id];\n    }\n}","/// On importe les classes ici\nimport { DisplayController } from './src/model/class/display-controller';\nimport { InputController } from './src/model/class/input-controller';\nimport { Player } from './src/model/class/player';\nimport { GameService } from './src/model/class/game-service';\nimport { Enemy } from './src/model/class/enemy';\nimport { ViewPort } from './src/model/class/viewport';\nimport { sprite } from './src/model/interface/general-interfaces';\nimport { Block } from './src/model/class/block';\nimport { Map } from './src/model/class/map';\nimport { TileSet } from './src/model/class/tileSet';\n\n\nconst canvas: any =  document.getElementById('game');\n\nconst displayController = new DisplayController(canvas);\nconst player = new Player(400, 600);\nconst inputController =  new InputController();\nconst viewPort = new ViewPort(0, 0, 800, 600);\nexport const gameService = new GameService();\n\nlet brickList = [];\nlet enemiesList =  [];\nlet blockList = [];\n\nlet  mapData = {\n        nbCol: 40,\n        tileSize: 64,\n        collection: [\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        ]\n};\n\nconst mapArray = [\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,\n]\n\n\nconst imgTileSetData = {\n    nbCol: 8,\n    nbRow: 8,\n    tileSize: 64\n};\n\n\nlet tileSetImg = document.getElementById('tileset');\nlet playerImg = document.getElementById('heros6');\nlet enemyImg = document.getElementById('personnage-important2');\nlet tileSet = new TileSet(imgTileSetData);\nexport let map =  new Map(mapData);\n\n// Méthode pour créer des ennemis\nconst initEnemies = (count: number) =>{\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = 640;\n\n        enemiesList = [...enemiesList, new Enemy(x, y, gameService)];\n    }\n}\n\n// Méthode pour créer des ennemis\nconst initBlocks = (count: number)=> {\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = gameService.rangeNumber(2, 100);\n\n        console.log({x, y});\n\n        blockList = [...blockList, new Block(x, y, gameService)];\n    } \n}\n\nconst initAll = ()=> {\n    initEnemies(5);\n    initBlocks(5);\n};\n\nconsole.log('blockList', blockList);\n\n\nlet handleStart = (event) =>{\n\n    if(+event.targetTouches[0].clientX  > 400 && +event.targetTouches[0].clientY < 300){\n        inputController.up = true;\n    } else if(+event.targetTouches[0].clientX > 400 && +event.targetTouches[0].clientY > 300) {\n        inputController.attack = true;\n    } else if (+event.targetTouches[0].clientX > 0 && +event.targetTouches[0].clientX < 200){\n        inputController.left = true;\n    } else if(+event.targetTouches[0].clientX > 200 && +event.targetTouches[0].clientX < 400) {\n        inputController.right = true;\n    }\n    \n\n}\n\nlet handleEnd = (event) => {\n\n    inputController.up = false;\n    inputController.right = false;\n    inputController.left = false;\n    inputController.attack = false;\n    \n}\n\ncanvas.addEventListener(\"touchstart\", handleStart, false);\ncanvas.addEventListener(\"touchend\", handleEnd, false);\n// canvas.addEventListener(\"touchcancel\", handleCancel, false);\n// canvas.addEventListener(\"touchleave\", handleLeave, false);\n// canvas.addEventListener(\"touchmove\", handleMove, false);\n\n\n// On crée tous les sprites et les éléments\ninitAll();\n\n\n// L'animation générale\nfunction loop() {\n\n    displayController.clear();\n\n    //displayController.drawBackground(backGroundImg, player);\n\n    const columNb = 80;\n    let indexRaw = 0;\n    const tileSize = 64;\n    let canvasX = 0;\n    let canvasY = 0;\n    let tileX = 0;\n    let tileY = 0;\n\n    let xMin = Math.floor(viewPort.x / tileSize ); // Colone minimale à dessiner\n    let yMin = Math.floor(viewPort.y / tileSize ); // Rangée Minimum à dessiner\n    let xMax = Math.ceil((viewPort.x + viewPort.width) / tileSize); // Colonne maximale à dessiner\n    let yMax = Math.ceil((viewPort.y + viewPort.height) / tileSize); // Rangée Minimale à dessiner\n\n \n    for (let x = xMin; x < xMax; x++){\n\n        for (let y = yMin; y < yMax; y++){\n\n            let value = mapArray[y * columNb + x];\n            canvasX = x * tileSize - viewPort.x;\n            canvasY = y * tileSize - viewPort.y;\n\n        // On récupère les coordonnées de l'index de tuile sur la tileSet\n        const {cropX,cropY} = tileSet.getCropCoordinates(value);\n\n            if (value !== 0){\n                displayController.drawImg(tileSetImg, cropX, cropY, canvasX, canvasY);\n            }\n            \n        }\n\n    }\n\n    // On affiche les blocks\n    blockList.forEach(block => {\n        block.update(player);\n        displayController.drawSprite(tileSetImg, viewPort, block);\n\n        if (!block.haveTouchedPlayer && gameService.checkCollision(player, block)){ // Si le block n'a pas encore percuté le joueur et qu'il y a collision\n            block.haveTouchedPlayer = true;\n            // On retire un point de crédit au joueur.\n            player.setLifeCredit = player.getLifeCredit - 1;\n        }\n    });\n\n    player.update(inputController);\n    displayController.drawSprite(playerImg, viewPort, player);\n    viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n    if (player.isAttacking){ // Si le player attaque on affiche sa zone d'attaque représentée par un carré\n        displayController.draw('rectangle',viewPort,player.damageZone);\n    }\n\n\n    for (let i = 0; i < mapArray.length; i++){\n        \n        indexRaw = Math.floor(i /  columNb);\n        tileX = (i - indexRaw * columNb) * tileSize;\n        tileY = indexRaw * tileSize;\n\n        // switch(mapArray[i]){\n        //     case 0:\n        //         cropX = 320;\n        //         cropY = 320;\n        //         break;\n        //     case 1:\n        //         cropX = 64;\n        //         cropY = 0;\n        //         break;\n        // }\n\n        \n\n        if(mapArray[i] === 3){\n            if(gameService.handleCollision(player, {x: tileX, y: tileY, width: 64, height: 64 , color: '' })){\n               \n                player.setJump(false);\n                \n                player.groundY = tileY;\n                player.update(inputController);\n                const txt = `player.x : ${player.x}, player.y : ${player.y }`;\n                displayController.drawTxt(txt, 10, 50);\n\n                const txt2 = `tileX : ${tileX}, tileY : ${tileY}`;\n                displayController.drawTxt(txt2, 10, 100);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n                \n            } else {\n                \n                player.groundY = 704;\n                player.update(inputController);\n                const texteCoordonneesX= `player.x : ${player.x}`;\n                displayController.drawTxt(texteCoordonneesX, 10, 120);\n               \n                const texteCoordonneesY= `player.y : ${player.y}`;\n                displayController.drawTxt(texteCoordonneesY, 10, 150);\n\n                const texteCreditsDispo= `Credits : ${player.getLifeCredit}`;\n                displayController.drawTxt(texteCreditsDispo, 10, 180);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n            }\n            \n        }\n        \n\n    }\n    \n    \n    enemiesList.forEach((enemy, index) => {\n        enemy.update();\n        displayController.drawSprite(enemyImg, viewPort, enemy);\n\n\n        if (player.isAttacking && gameService.checkCollision(player.damageZone, enemy)){\n            alert('collision entre ennemi et damagezone');\n            enemiesList.splice(index, 1); \n        }\n    });\n\n \n    \n    window.requestAnimationFrame(loop); \n}\n\n\n\n\n// fetch('/levels.json').then(data=> {\n//      return data.json();\n// }).then(elem => {\n//     console.log('elem', elem);\n// })\n\n// function loadImage(url) {\n//     return new Promise(resolve => {\n//         const image = new Image();\n//         image.addEventListener('load', () => {\n//             resolve(image);\n//         });\n//         image.src = url; \n//     });\n// }\n\n\n// let backGroundImg = new Image();\n// backGroundImg.src = 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Polarlicht_2_kmeans_16_large.png';\n// backGroundImg.onload = ()=> {\n//     alert('charge');\n// };\n\n// let tileSetImg = new Image();\n// //tileSetImg.src = 'https://opengameart.org/sites/default/files/Preview3.jpg';\n// tileSetImg.src = '/src/assets/tileset3232.png';\n// tileSetImg.onload = ()=> {\n//     alert('tileset charge');\n//     loop();\n// };\n//console.log(tileSetImg)\n\n\n\n// On ajoute les évènement pour resizer le canvas\nwindow.addEventListener('resize', displayController.resizeCanvas, false);\nwindow.addEventListener('orientationchange', displayController.resizeCanvas, false);\n\n\nloop();\n\n\n\n"]}