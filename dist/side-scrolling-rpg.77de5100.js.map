{"version":3,"sources":["src/model/class/damage-zone.ts","src/model/class/player.ts","src/model/class/enemy.ts","src/model/class/block.ts","src/model/class/display-controller.ts","src/model/class/input-controller.ts","src/model/class/game-service.ts","src/model/class/viewport.ts","src/model/class/level.ts","index.ts"],"names":[],"mappings":";;;;;;AGKA,AHHA,AIDA,AFGA,AIDA,ADFA,AGOA,APNA,AMAA,IJGA,AHHA,AIDA,AFGA,AIDA,ADFA,AGOA,APNA,AMAA,KJGA,ADDA,AMIA,GJPA,AGCA,EPAA,CIDA,AEEA,ELDA,EIDA,CJCA,EGDA,CAAA,IHCA,CAAA,KGDA,CAAA,SHCA,CAAA;AEGA,AHHA,AEEA,AIDA,ADFA,AGOA,ADNA;AJGA,AHHA,AIAA,AFEA,AIDA,ADFA,AGOA,APLA,AMDA,IHAA,AHCA,OGDA,AHCA,CEEA,AHHA,AEEA,AIDA,ADFA,AGOA,ADNA,EHAA,AHCA,OGDA,AHCA,CGDA,AHCA,SGDA,CAAA,MHCA,CAAA;AEqBC,AHdG,AEsBH,AI3BG,ADIA,AGSA,ADTA,WPCA,AMLA,ADIA,AGSA,ADTA,KCSA,CAAY,EDTZ,CAAY,CPCZ,AODA,CPCY,AMLZ,AEaA,CRRA,AODuB,CCSO,ADT9B,CPCe,AMLf,CNKA,AMJC,ADGD,AEAkC,CDNtC,CNOsB,AMFlB,CDCA,EEAA,EPCA,AODiD,EPCxB,IODzB,EPCA,AOD+D,EPChC;AGelC,AHjBG,AIJJ,AF6BC,AG9BG,AGgBI,APdR,AMKQ,IHNR,AHCA,KDGI,AKLA,AGgBS,ADTA,CNLb,AMKQ,CJeP,ACrBD,AF6BC,EG9BG,AEOa,CPFb,AIJJ,AGMQ,EJeP,ADQA,AG9BS,CFsBG,AHjBD,AEyBC,CCRZ,ADQA,ECRuB,ADQA,CCRvB,ACrBD,AF6BC,AG9BG,CDCJ,CDqBkC,ADQA,GFzB9B,EQWI,GJfR,AIemC,CJfnC,EDqBC,ADQA,ECRyD,ADQA,AMdlB,CAAC,mBAAjC;ALRJ,AHAI,AEDJ,AGNA,AGgBI,APfR,AMMQ,SJAJ,AHAS,AEDT,AGNA,AGgBS,ADTA,CPAL,AOAA,GPAS,AOAA,CJAb,AHAI,AEDJ,AGNA,AEOI,CCSA,ELTI,ADDA,AGNA,CGgBU,CLTlB,ADDA,GGNA,CGgBuB,CAAC,MAApB;ALRJ,AHAI,AILR,AFII,AIFA,ADJA,AGgBI,APhBR,AMOQ,EDHJ,EFFJ,KDKI,AHAS,AEDT,AGNA,AGgBS,ADTA,CPAL,CKPJ,CJAJ,CDOiB,AMHb,CNGI,AMHJ,ADJK,AEOD,CJAJ,ADDA,EMUI,ADTa,CJAR,ADDA,CGNT,CFOA,ADDA,AMUoB,CLIkC,AClB1D,AF0B0D,CChBtD,ADHA,AKFI,CDHJ,CAAA,CEYyB,CAAC,QAAtB,IFZJ,GAAA,UAAe,CAAf,EAA0B,CAA1B,EAAmC;ANI/B,AINR,AFQI,AILI,ADJJ,AGgBI,APWJ,AMpBI,SPAK,AKPT,AGgBS,ADTA,ENoBT,EI3BA,CLOI,CQSA,ADTA,CFPG,CLOU,ACoBjB,COXkB,APYd,AMrBc,CNoBlB,EI3BA,AJ6BI,CDtBA,ACoBJ,COXuB,CPaV,AMtBT,kBCSc,CAAyB,MAAvC;ALJJ,AHJI,AIPR,AFSI,AILI,ADJJ,AGgBI,APZJ,AMGC,QDDO,CHKR,AHJS,AMDA,ADNT,AGgBS,APZT,CKEU,CAAF,CFNZ,EEMkB,ALFd,CEOA,AHJI,AMDW,ADNf,AGgBI,CFVY,CAAF,ALFP,CEOE,AHJS,AKPT,AGgBS,APZlB,CEOA,CGLoB,CAAC,CAAC,CDNtB,AGgBuB,CRTnB,GMDI,IACA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,EESI,CFTE,AESuB,CFTtB,CAAC,IESJ,CFVV,EEU4C,EFR5C,CAAC,CAAC,CAAF,AEQiD,GFR3C,CAAC,CAAC,CAAF,AEQV,GFRgB,CAAC,CAAC,MAFd,IAGA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MALlB,EAMG;AHEP,AHJC,AIHD,AEKS,ADPR,AGcG,APZJ,SEOA,AKKS,APZT,EGAA,GIYI,APZJ,CEOA,EKKiB,APZV,CEOE,CAAT,AFPA,GOYsB,MJZtB,CACK,CIWY,GAAgB,EJZjC,EACgB,CIWsB,MAAlC;ALJJ,ACLI,AFEJ,AICQ,AEOJ,APZJ,AMGA,EAAA,OJIA,ACLS,AFET,AMQS,APZT,CMGA,CAAA,EDEe,CHEf,AFPA,CGEI,AFEJ,AMQI,ELLI,AFPF,CEON,ACLkB,AFET,AICD,AEOU,CNRlB,ADJA,CMGA,CAAA,ECSuB,CJVnB,OIUc,GAAgB,EDTlC,GCSuC,ADTvC,MCSI,IDTY,CAAhB,EAA2B,CAA3B,EAAsC,KAAtC,EAAqD,MAArD,EAAmE;AJKnE,AHJJ,AIDQ,AFEJ,AICK,ADLT,AGYK,APZD,AMGI,KDNA,IHUJ,AHJJ,AIDa,AFET,AGJJ,AJAI,AMGS,CAAL,CDEO,ECFE,CJIb,AIJI,CHDA,AFEJ,ADJA,CGEgB,CDKR,CDHC,ADJF,CEOP,AHJJ,AECI,CCOsD,AFXtD,CEaA,ACXI,GAAoB,ACF5B,GDEQ,CAHY,CAGY;ADY5B,AH1BJ,AEiBI,AIAa,ADlBjB,AJcI,AMGI,CPhBR,AKDA,ELCA,AKDA,CIDA,KPmBI,ADJA,AMGS,CAAL,GNHJ,AMGa,CLCb,AKDI,ENHG,CCIC,IDJR,KCIA;ACUA,ACZI,AFIJ,AIDQ,AEOZ,APXI,AMGI,SHFK,AFIT,AMMJ,APXI,AMGS,IDCM,CJCf,AMMJ,ADRQ,CHFA,AHDJ,CGCgB,CFIR,AIDA,ACDS,CLEjB,ADLO,CAAP,GGCI,AGEA,GHFqB,GAArB,CAJY,CAIa;AKhBjC,ATCa,AEoBT,AIDK,ADpBI,AGOb,APSI,AMGI,CCZR,EAAA,CCPA,GTCa,AKDA,CLCA,AKDA,CHqBT,ADLA,AMGS,KLET,CDLA,AMGI,ELEI,CFpBC,ACeF,AMGW,CLElB,ADLA,EDfS,EKDA,CIAb,AFmBQ,EFnBK,CIAb,ITCa,GSDb,CAAA,MJAa,gCIAb,CAAA;AN6BI,ACZI,AFKJ,AIDC,ALJD,AMGC,GDZD,ACOA,CDbJ,CAqBI,IFNS,AFKT,ADLA,GGAI,EHAJ,CGAe,EHAR,GGAa,KFKpB,CELe,AHAf,CGA2B,CFKR,CAAnB,QELe,CAAuB,IAAvB,CAAX;AKhBR,ALiBK,AFKD,AMhBS,APWT,IQjBJ,GDMa,CAAA,CNgBT,ADLA,IOXS,GAAA,KAAA,CCNb,GAAA,APsBI,ADLA,GCKmB,ADLA,ECKnB,EOtBJ,CAAA,KRiBI,+BQjBJ,CAAA;AN6BI,ADNA,ADDA,AMFJ,SJSS,ADNL,ADDA,AMFJ,CJSI,GAAS,CAAT,CANsD,CAM1C,AFPZ,CMFJ,ENEc,GAAV,CCCA,GAAiB,CAAC;AOtBtB,ALkBI,AFImB,AIAnB,ALAA,AMvBJ,CAAA,CHmBI,AEIA,CCvBJ,CECA,EPsBuB,GDAnB,ECAwB,COtB5B,CPsB6B,AIAzB,CJAkB,AIAlB,CGtBJ,ILkBI,CAAA,EKlBJ,CAAA,AHsBI,CAAA,CLAA,GAAmB,CGJnB,AHIA,CGJA,SEIA,CFJA,EEIA,CFJA,MKlBJ,CAAA,EHsBoB,CAAhB,EFJA,AEI2B,CFF1B,AEED,CFJA,CEIoC;AHOpC,ADP2B,AIEvB,ALDJ,MCD2B,EIGlB,CHIJ,AGJK,ALFV,CEMA,AGJW,CJHqB,AIGvB,EHIA,ADPwB,CCOjC,AGJe,CHHuC,AGGtC,CHIJ,AGJK,MAAR,GAAiB,ALF1B,CKE2B,CAAC,CAAF,ALFP,EAAnB,CKEgC,EAAvB,IAA6B,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAAR,GAAiB,CAAC,CAAC,CAAjD,KACK,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAlB,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAhD,IACA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAd,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAFnC,CADJ,EAKC;AG5BT,ALqBI,AFAkB,AIQX,ALNP,AMzBS,EHuBT,EKrBJ,CPqBqB,EAAqB,AKvB7B,CAAA,CNyBT,IKMc,GC/BL,CD+BF,CG7BX,CLqBI,AGvBS,CHuBT,CKrBJ,ERuBI,GAAiB,CAAC,AMzBT,CEEb,CAAA,ALqBI,CAAA,IAAA,GAAA,UAAK,KAAL,EAAoB,OKrBxB,CAAA,ALqBI,EAAwC,MAAxC,EAAsD;ADQtD,ACNW,AFF4B,AISlC,ALPc,KKAf,CJFmC,ADEpB,EGAR,CDMN,ACNM,EFFiC,AISjC,ALPa,CGAb,CFFkC,ADEpB,CAAP,CCFoB,CCQtC,ECNW,CDMK,ACNL,CAAA,IDMU,CAAL,GAAS,KAAK,KAAL,GAAa,CAAtC;AM5BJ,AN6BI,ACPW,AFFqC,AIUxC,ALRmB,IQtB/B,EPoBoD,ADErB,EGAb,CDOT,ACPS,EKtBlB,APoByD,ADErB,CGAlB,CFFwC,AIUvC,ALRkB,CQtBrC,EN6BI,ECPc,AEQN,CHDQ,ACPF,CAAH,CKtBf,CAAA,EN6ByB,CAAL,GAAS,KAAK,MAAL,GAAc,CAAvC,IM7BJ,CAAA;AN8BG,ACRY,AFF2B,AIWjC,ALTa,GEtBtB,CAkCE,CDdmB,ADEA,ECFyC,ADEpB,CGArB,KAAA,GAAA,MAAA,CAAA,KAAN;AKrBf,ALqBe,AFFgD,AIa1D,ALXsC,GKFvC,CGnBJ,AHHA,CAqCI,CJf2D,ADEpB,EGAf,GFFwC,ADEpB,ECFqB,ADEpB,CQrBjD,ALqB4B,AFFkC,CDEpB,EQrB1C,ALqB4B,MAAA,CKrB5B,ALqB4B,CKrB5B,KLqBe,uBKrBf,CAAA;ALqBe,AFFwD,ADEnB,MCFmB,ADEnB,EGAhB,GFFwC,ADEnB,EGArB,AFFyC,ADEnB,GGAtB,MAAA,CAAA,KAArB;AKnBf,ANgCE,ACZM,AFHsD,ADEpB,EEaxC,EMhCF,CPiBqB,ADEA,EEanB,ADf+E,ADEnB,CEa5D,CCZW,EKpBb,CLoBQ,CAAS,CKpBjB,GNgCE,CAAA,GMhCF,CAAA,ALoBQ,EDYN,CCZ2B,EDY3B,GCZM,ODYC,MAAP,EAAqB,EMhCvB,CAAA;ANkCI,ADjB8E,AIgB9E,ALd2D,EKc3D,IJhB8E,ADEnB,EEevD,GDjB+E,ADEnB,EEevD,ADjB2E,AIgBpF,ALdiE,CEe7D,AGDJ,ALd0D,CCFmB,ECiBhE,MAAM,AGDnB,CHCoB,AGDpB,CHCI,IAAqB,KAAK,CAAL,AGDzB,GHCkC,AGDlC,KHCuC,KAAd,AGDZ,CAAb,EHC+C,AGDhC,CAAf,EAAgB,EHCoC,CAApD,EAAuD;AMjC3D,ANiC6D,ACZrD,AFLmF,AIiBnF,ALf+D,IQlBvE,EPgB2F,ADEpB,KQlBvE,APgBgG,AIiBjF,ALf6D,CGG7D,CFLkF,ADEpB,CQlB7E,CHiCmB,CAAC,CFZZ,IKrBR,AHiCe,CGjCf,AHiC2B,IAAI,CAAC,MAAL,KAAgB,CAA5B,IAAkC,CAAzC,GGjCR,CAAA;ANkCQ,ACXI,AFPqE,AIkB5E,ALhByD,GKc1D,EJhBiB,ADEA,CCFjB,CDE6E,IGKhE,WAAL;AKpBZ,ANgCQ,ACXQ,AFPZ,ADC8E,IQf5E,ERe4E,GCD9E,COdQ,CNgCC,AFjB0E,EQflE,ALqBA,AHNmE,EAAP,CGMjE,CDWR,ACXiB,GDWH,CMhCO,ANgCrB,CMhCsB,APc1B,GEOY,AFPI,CEQA,AFRC,CEQA,GAAG,MKtBH,CAAwB,CLsBb,CAAC,CADjB,EAEI,CKvBC,ALuBA,CKvBrB,ELuBwB,QAAQ,CAAC,CAFjB,EAGI,KAHJ,EAII,MAJJ;AKnBhB,AN+BK,ACNW,AFbM,AIiBjB,ALhBsF,GKxB3F,CGWM,AH+BF,EJnBkB,ADCqE,KCDhE,ADCqE,ECDpE,ADCqE,CCD5E,OOZE,GAAG,IAAI,oBAAA,CAAA,iBAAJ,CAAsB,MAAtB,CAA1B;AACA,APW8B,ADCmD,IQZ3E,CRYe,CCDS,ADC1B,IQZQ,CPWuB,EOXpB,APWqB,IOXjB,QAAA,CAAA,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAf;AACA,AN8BI,ACNY,AFdK,AIoBjB,ALlBA,EKkBA,EG9BE,CPUc,EAAqB,ECoBhC,AFlBL,CEkBA,GAAS,AGAT,CAAA,IHAc,CM9BG,AN8BR,GM9BY,AN8BH,AFlBlB,CKkBA,CAAA,CLlBgB,CQZS,ARYR,CEkBM,MAAvB,CANmB,CAQnB,IGFA,GAAA,EG9ByB,CAAA,SH8BzB,MG9BqB,EAAzB;AACA,ANiCI,ACTY,AFf0B,AIqBlC,ALnBc,IQXhB,EPSoC,ADEpB,EKmBR,GJrBiC,ADEpB,CQXb,CLwBO,AFf2B,ADEpB,CAAP,CQXJ,APSwB,CEezB,CAAS,EKxBJ,CH8BK,GAAG,EFNb,CAAkB,CAAlB,CEMkB,CG9Bb,ALwBgB,CKxBhB,ALwBL,EAAwB,KAAxB,CKxBC,CAAa,ALwBiB,AEMlB,CG9BZ,AH8B6B,CAAjB,CG9BI,CAAhB,AH8B+B,CAAnB,CG9BO,ALwBpB,AEMR,GG9BS,EAAwB,GAAxB,CAAjB;AACa,ANiCV,ACTa,AFhBmC,AIsB3C,ALpBsB,GEY5B,CAnCF,AG2CQ,CHKN,CD3BiD,ADErB,CQVjB,CAAA,GPQ2C,AIsBzC,ALpBoB,CKoBnB,CJtByC,ADErB,EKoB5B,CAAY,GG9BP,GAAc,IAAI,IH8BvB,EAA4B,QG9BL,CAAA,GH8BvB,QG9BmB,EAAd;AAEb,ALUQ,AFJiC,AIuBjC,ALrBa,IQRjB,CPMgB,ADEA,ECFyC,ADEpB,CKqB7B,KG7BC,GAAG,CH6BK,CG7BrB,EH6BwB,EAAhB;AG5BR,ALwBK,AFnByD,ADEpB,GGHtC,CKJA,EPK0D,ADEpB,KCFyB,ADEpB,ECFqB,ADEpB,CCFa,COL9C,ARO0B,GQPtB,EAAnB;AACA,ANgCE,AD5BoE,AIyB9D,ALvB2C,EE0BjD,EMhCE,EPIkE,ADEnB,CE0BjD,CAAA,GD5ByE,ADEnB,CKuBzC,CG7BF,API+D,ADEnB,GQNzC,CNgCd,CMhCF,ANgCE,MGHM,UHGN,GAAA,UAAiB,CAAjB,EAAoB,CAApB,EAAqB;AM9BvB,AN+BI,ACVC,AFnBwD,AI0BjD,ALxB6B,IQJrC,CPEgB,ADEA,ECF4D,ADEnB,EE2BpD,CAAL,CGHa,CAAL,CG5BC,AN+BA,CAAT,EM/BY;AACZ,AN+BA,AD9B6E,AI2BjE,ALzB8C,EQH1D,IPC6E,ADEnB,EQHpD,AH4BM,CHGP,CM/BG,AN+BR,CD9BkF,ADEnB,CQJnD,CNgCH,AD9B0E,ADEnB,CE4BhE,AF5ByD,CCFmB,EI2BvD,GAAG,OAAZ;AG3BZ,AN+BD,ACVC,AFrBsF,AI4B1E,AL1BsD,EQFlE,ALqBA,CDOF,CAjDF,CAsDE,CDjCwF,ADEpB,IQF1D,CPAmF,ADEpB,CQF7D,CPAkF,ADEpB,CQJ5D,KLuBZ,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,YAAX,EAA8B,QAA9B,EAAkD,MAAlD,EAAgE;AKpBhE,ALsBI,AFvBwE,ADEnB,EQDzD,GPDgB,ADEA,CCFhB,CDE4E,cQDzD,EAAE,CACjB,CADiB,EACf,CADe,EACb,CADa,EACX,CADW,EACT,CADS,EACP,CADO,EACL,CADK,EACH,CADG,EACD,CADC,EACC,CADD,EACG,CADH,EACK,CADL,EACO,CADP,EACS,CADT,EACW,CADX,EACa,CADb,EACe,CADf,EACiB,CADjB,EACmB,CADnB,EACqB,CADrB,EACuB,CADvB,EACyB,CADzB,EAC2B,CAD3B,EAC6B,CAD7B,EAC+B,CAD/B,EACiC,CADjC,EACmC,CADnC,EACqC,CADrC,EACuC,CADvC,EACyC,CADzC,EAC2C,CA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BqE,CK2B1E,CL3B2E,EGsB/E,AHtBwE,KCD5E,GAAc,CAAC;AOwBnB,ANSE,ACTM,AFxBY,AI6BJ,AL5B0E,EEgCxF,EMTE,EPxBgB,ADCsE,CEgCxF,CAAA,ACTU,AEKI,GJ7BS,ADCsE,ECDrE,ADCsE,CQuBlF,APxBK,CEwBX,EKAS,ANSf,AGJuB,CHIvB,EGJ0B,KGLH,CAAC,AHKV,UHId,GAAA,CMTe,CAAwB,SAAxB,CAAjB,ANSE,CAEE;AMVJ,ANWI,ADpCwB,AI8BZ,AL7BgE,IQwB5E,CRxBgB,CCDQ,ADCxB,KCD6B,EOyBpB,APzBqB,GOyBlB,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAhB;AACA,ANWG,ACXK,AF1BW,ADEf,GE+BF,CMPE,ANhDJ,CA6DE,ADvCgB,EAAqB,CE0B3B,CHxBR,GQwBQ,ELAM,CKAH,KRxBX,GQwBmB,ARxBL,CQwBM,ARxBL,EGwBW,QAAA,CAAA,GKAf,CAAwB,ELA/B,EAA6B,mBKAtB,CAAf;AACW,ALAC,AF3B4B,AI+B5B,AL7BQ,MGyBR,AF3B4B,ADEpB,CQyBT,CAAA,GP3BkC,ADEpB,EQyBd,ALAQ,AF3B2B,ADEpB,CAAP,CCFoB,CO2BnB,ALAG,IKAC,CLAI,MKAJ,ALAD,CKAC,ALAW,KKAf,ALAG,CKAO,ELAa,CAArB,GAA0B,GKA5B,CAAT,EAEX,ALFsD,CAAC,KAAP,GAAe,CAAnD;AACA,AF5BqC,AIgCjC,AL9BY,MG0BhB,AF5BqC,ADErB,EK8BZ,GJhCsC,ADErB,EG0Bd,AF5BoC,ADErB,GG0BX,CEIE,GAAG,CFJA,MAAL,AEIP,CFJmB,MAAZ,GAAqB,GAArB,GAA2B,MAAM,CAAC,MAA7C;AKEZ,ANUE,ACXO,AF7B8B,AIiCvB,AL/BG,EEsCjB,EMVI,CP9BY,ADEA,EEsChB,ADxCyD,ADEpB,CEsCrC,OMVe,ENUf,CMVkB,ANUlB,SMVI,ANUJ,GAAA,QMVkB,CAAC,GNUnB,EMVkB,EAAc;AAE9B,ANUA,AD1CwD,AIwBpD,ALtBgC,MCFoB,ADEpB,KCFyB,ADEpB,ECFqB,ADEpB,CCFa,CDEpB;AQ+BnC,ANUA,ACbI,AF9B4D,ADEnB,MCFmB,ADEnB,CQ+BxC,CLHG,CDaH,EMVI,APjC4D,ADEnB,CQ+BxC,CPjC4D,ADEnB,CG4BrC,CKGD,CAAb,ANUA,EMVgB,CAAC,ANUA,GMVG,ENUE,CAAL,CCbS,CKG1B,CNU0B,CMVC,CAAC,EAA5B,CNU+B,ACbL,CKGM,ALHN,IDaV,CCbR,EDaiC,ECbN,GDaW,GCbL,EDaA,GAAa,CAAtD,MCbqD,OAAA,CAAA,KAAjD,EAAuD;AKIvD,ANUJ,ACbQ,AF/B+C,AImCnD,ALjC+B,KCFrB,ADEA,CG6BN,CF/BkE,ADEnB,CQgC7C,CAAC,ANUN,EGTM,CGDG,CLHC,GDaf,ACbkB,GKGJ,ANUG,CMVH,AHCV,EFJoB,CAAC,CDaH,ACbJ,CDaD,ECbY,CDaH,GMVZ,CAAY,CNUK,ECbM,CAAC,CAA9B,EDaQ,GAA0B,CMV5B,CAAwB,GAAxB,ANUiC,EMVJ,IAA7B,ANU4B,CMVtC,ENUoD,CAAxD;AMTI,ANUL,ACbS,AFhCmE,AIoC1E,ALlCuD,GEsC1D,AGrBE,CHzCJ,CAsEE,CChBU,AFhCmE,ADEnB,EQiC9C,CAAC,EPnCqE,ADEnB,CQiC/C,CLHC,AFhCkE,ADEnB,CAAP,CQiCnD,APnCsE,CEgCxD,MAAM,CAAC,CAAP,GAAW,QAAQ,CAAC,CAA9B;AKKJ,ALJC,AFjC+E,ADEpB,IQmC5D,EPrCgF,ADEpB,KCFyB,ADEpB,ECFqB,ADEpB,EQmCvD,GAAA,cAAA,CAAO,WAAP,EAAkB,CAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,OAAA,CAAA,WAAhB,CAAF,CAAlB,CAAX;AACH,APtCyE,AIuC9E,ALrC2D,KCFzC,ADEA,CCFd,CDE0E,EKqC9E,WAAA;AGAC,ANUC,ACdM,AFlCJ,AIzBJ,AL0B+E,CQ4B/E,AHtDA,CHyEE,CMRF,AHjEA,GL0B+E,CE+C7E,CAAA,CCdW,AFlCT,EDCgF,CGiC5E,CAAS,AHjCoE,EAAP,EE+C5E,CAAA,ICdM,AFlCJ,CEmCQ,EFnCQ,CAAC,GCgDnB,GAAA,GCdM,EAEI,KDYE,CCZI,CAAC,KAFX,EAEkB,EDYxB,EAAuB;AAErB,ACbQ,AFrCU,ADCkE,IGoC5E,EFrCU,ADCkE,GEiD/E,CAAL,ACbc,CAAC,AFrCQ,ADCkE,EEiDhF,ADlDe,ADCkE,CCDzE,EEkCb,EAGkB,MDaF,CAAC,CAArB;AACA,ACbQ,AFtCkB,AIzBjB,AL0BiE,KAA5D,CGiCV,AFlCsB,ADC1B,CK1BS,CF+DI,AE/DJ,CH4EJ,CAAL,CDnD+B,ECmDtB,ADnDuB,MIzBvB,GAAA,EH4EW,CAAC,CAArB,CAHqB,CAItB,KG7EU;AGkEb,ALFY,AFvCS,ADEjB,IQuCE,CPzCc,CEkCZ,CFlCgC,CEuCvB,CHrCb,KQuCY,GAAG,KRvCf,GAAgB,CQuCd,ARvCe,UQuCF,CAAC,KAAD,EAAc;AAE7B,ANUA,ACbQ,AFxC6B,ADEnB,IGsCV,EFxC6B,ADEnB,GEmDb,ECnBD,AFlCsC,ADEnB,EGsCN,AFxC0B,ADEnB,CAAP,CCFmB,GCqDpC,GALqB,CAMrB;AMVA,ANWD,ACdS,AFzCsC,ADEpB,GE8C5B,CAvEF,ACgEY,CDgBV,CDzDgD,ADEpB,CQ0CrB,IAAI,ALVL,AFlC+C,ADEpB,CQ0CrB,CLHO,AFzCmC,ADEpB,EQ0CnB,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC5B,ALHI,AF1C4B,ADEnB,IGwCT,CF1CQ,ADEA,ECFuC,ADEnB,CQ2C1B,CAAC,CLHG,CAAC,CKGD,ILXV,EAQkB,CKGR,CAAA,WAAA,CAAY,WAAZ,CAAwB,GAAxB,EAA6B,IAA7B,CAAV;AACA,ALHI,AF3CgD,ADEnB,IGyC7B,EF3CgD,ADEnB,EQ4C3B,CAAC,CLHG,CAAC,AF3C8C,ADEnB,CQ4C5B,CP9CgD,ADEnB,CCFY,CDEnB,EGgChC,CASkB,CKGR,CAAA,WAAA,CAAY,WAAZ,CAAwB,CAAxB,EAA2B,GAA3B,CAAV;AAEA,ANUN,ACxBM,AFlC4D,ADElB,EEwDhD,EMVM,EPhD4D,ADElB,CEwDhD,CAAA,GMVa,APhD0D,ADElB,CQ8CvC,CPhD0D,ADElB,EQ8ChD,CAAY,CNUlB,CAAA,mBAAA,GAAA,YAAA,CAEE;AMZiB,ANalB,ACfE,AF9CsD,ADEnB,GEwDtC,ACvCE,EFnBgB,ADEA,CQ8CC,CAAC,APhDuD,ADElB,EQ8CrC,CAAF;AAAI,APhDsD,ADElB,MQ8CpC,APhDsD,ADElB,CQ8CnC,EAAA,EPhD0D,ADElB,ECFmB,ADElB,CAAP,CCFkB;AOgDzD,AN8CpB,AChDK,AF9CkF,ADEnB,KQ8C5D,CPhD+E,ADEnB,GE4FpE,ED9F4F,ADEnB,ECFoB,ADEnB,CE4F1E;AM5CQ,ANzER,ADuB6E,ADElB,CEzB3D,EAAA,CMyEQ,CPlDY,ADEA,CCFhB,CAKsD,ADHmB,CCKzE,KO2Ca,GAAA,cAAA,CAAO,SAAP,EAAgB,CAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,OAAA,CAAA,WAAhB,CAAF,CAAhB,CAAT;AACH,ALHD,AFxCA,ADN0E,EG8C1E,IH9C0E,KAAK,EAAC,EAAP,IG8CzE,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AKIH,AN3EY,ACwEL,AFxCJ,ADPmF,CQuCvF,KRvCuF,CEzB1E,CAAA,CCwEA,EH/C+E,CG+CpF,CDxEK,ACwEI,AH/C4E,GEzBhF,KAAA,CCwEL,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK,MAAL,CAAY,KAArC,EAA4C,KAAK,MAAL,CAAY,MAAxD;AACH,AHhDwE,GG8CzE,EH9CgB,CAAhB;AQyDJ,APjDI,ADPA,IQwDE,KRxDF,SQwDgB,CRxDhB,EQwDmB,CRxDL,EAAd,MQwDE,cAAiB,CAAC,KAAD,EAAc;ALThC,AHzCG,SAAK,CAAL,GAAQ,CAAR,mBQqDK,GAAC;AACN,APpDJ,ADDI,QQqDM,CPpDL,ADDI,CCCT,ADDI,GCCK,ADDG,CCCZ,ADDI,CCLkD,CO0DpC,APpDN,GOoDS;AACb,ALZR,AHzCI,EGyCJ,IKYQ,CAAC,EAAE,ARrDF,IQqDM,CAAC,ERrDZ,GGyCJ,AHzCoB,CQqDT,ALZX,IHzCyB,CQqDE,ARrDP,GAAS,CQoDR,ALXrB,CAAA,GHzCkC,KAAL,GAAa,CAAtC,EGyCJ,GAAA,UAAe,aAAf,EAAmC,MAAnC,EAAiD;AKazC,ALXF,AF1CN,ADAI,MQqDI,CAAC,EAAE,ALXA,AF1CN,ADAI,CCAT,EE0CM,CKWS,ALXA,AF1CN,COqDO,APrDhB,CAPsD,CAO1C,ADAR,GAAgB,CQqDT,ELXL,CACE,CH3CiB,CQqDE,ARrDP,GAAS,GQqDI,CAAC,CRrDA,GG0C5B,EKWK,ALVY,CH3CM,EQqDc,CRrDA,CAAvC,CQmDiB;AAGb,ALVA,AH3CP,IG2CO,EKUA,ILVM,CKUD,ALVE,CAAP,CKUO,ELVI,CKOE,ILPG,MAAL,CAAY,KAAZ,GAAoB,CAFjC,EAEoC;AKWlC,ALVA,AF5CR,MOsDQ,GPtDH,GOsDS,EAAE,EPtDhB,COkDqB,EPlDL,KAAK,CAAL,GAAS,KAAK,KAAL,GAAa,CAAtC;AOuDQ,ALVA,AF5CR,ADCA,EAAA,GGuCM,CKcE,CLVG,CH3CX,CCDK,ADCL,EQqDa,EAAE,GPtDf,EDCA,CCDgB,ADChB,KCDqB,CAAL,ADChB,GCDyB,ADCzB,KCD8B,KDCvB,CCDkB,GAAc,CAAvC,ADCA,EAA6B;AQgDR,ALHb,AF7CR,ADEI,KQ8CA,GR9CI,CG2CK,AF7CR,IDEQ,CAAC,CG2CN,CAAY,IF7CpB,ADEI,CGqCE,CHrCe,CG2CO,AF7CT,WAAnB;AE8CQ,AF5CR,ADAuB,QCAnB,CE4CS,GF5CL,GE4CA,AF5CI,CE4CQ,GF5CpB,GEqCM,EAOuB;AKUzB,ALTI,AF5CR,ADAQ,KGoCF,EAQK,CKSH,CPrDH,EDAQ,MQqDI,APrDjB,ADAQ,CQqDU,ARrDE,ECAJ,EDAR,EQqDA,KAAqB,CAAzB,CPrDuB,COqDI,APrDH,YAAA;AOsDpB,ALTA,AF7C4B,ADC/B,KGmCC,AHrCF,CQuDI,APtD4B,CE6CxB,GF7C4B,CAAC,ADC9B,IQqDM,ARrDF,GQqDE,ERrDG,SCDgB,EDCrB,CQqDE,CAAO,ERrDW,KAAK,EQqDvB,EAAgB,CAAE,QAAF,CAAhB,CAAT,ARrD2B,GAAuB,EAA/C,EAAkD;AQsDxD,ALTG,AF9CuD,ADEvD,KCFmB,EAAsC,EE8CpD,EF9Cc,ADEd,CCFb,GE8CQ,CAAY,KAVd,EAUsB,GH5CpB;AG6CA,AF9CR,ADEK,KAFM,IG8CE,AF9CR,EDEM,IG4CH,CAAY,MAXd,CAWqB,EF9C3B,GAAwB,MAAxB;AOwDI,ALrBE,AFjCP,ADCS,GC9CZ,COmGQ,APlDN,ODHe,EQqDA,CAAC,GRrDN,CAAY,GQqDhB,CAAkB,CRrDd,SQqDc,IAAA,EAAI;AAClB,ALTP,AH5CI,GG6BL,OKwBY,CAAC,OAAA,CAAA,WAAA,CAAY,cAAZ,CAA2B,IAA3B,EAAgC,QAAhC,CAAL,EAA+C;AAAE;AAC7C,ALVX,AFzCH,ADDM,ECCN,KAAA,CAAA,ADDU,KAAK,CAAC,EAAN,CCCV,CAAA,EDDsB,ICCtB,CDD2B,ECC3B,EDDsB,KAAc,KCCpC,ADDM,EAAoC;AQqD5B,APlDZ,ADFQ,QQoDI,GRpDC,CCEL,KOkDa,APlDR,ADFL,GQoDa,ARpDC,GAAd,UCER,COkDqB,CAAO,SAAP,EAAgB,CAAE,QAAF,CAAhB,CAAT;AACH,ALVT,AFxCE,ADFM,EG0CR,SFxCO,ADFM,IAAL,GCEN,ADFkB,CG0CpB,CAAA,EH1CQ,OG0CR,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAkB,KAAlB,EAAiC,KAAjC,EAAgD,OAAhD,EAAiE,OAAjE,EAAgF;AKW3E,ALTD,AFzCA,ADFI,KQ+CJ,ILJK,EH3CI,CG2CT,AH3CI,CG2CK,AFzCJ,GDFS,GCEd,EDFmB,CG2CnB,AFzCc,CE0CV,AF1CJ,GEyCA,CH3CI,CG4CK;AACL,AFzCJ,ADHC,IQ8B4B,ALczB,CKZR,ILUI,EAEW,EFzCN,CAAL,GAAU,KAAK,CAAL,GAAS,KAAK,MAAxB,CAHF,CAKE;AEwCI;AACA,AFxCJ,ADJA,IG4CI,IH5CA,CGwCJ,EAIW,EFxCN,ADJI,CAAC,ICIV,ADJA,EAAe,CCIF,KAAK,cAAL,CAAoB,KAAK,gBAAzB,EAA2C,KAAxD;AO2BJ,ALcQ,AFxCJ,ADJI,MGuCJ,CKTC,CLcQ,GKdJ,AR9BI,CQ8BH,CP1BD,EO0BI,CAAb,CR9BQ,CQ8BQ,AP1BZ,CO0Ba,CR9BK,CCIL,ADJM,CQ8BH,AR9BZ,ICIc,CO0BtB,EAA2B,CAAC,EAA5B,EAA8B,MP1Bb,CAAoB,KAAK,gBAAzB,EAA2C,KAAxD;AEyCI,AFvCJ,ADLI,MGsCJ,EAMS,GH5CA,CQ6BJ,eR7BD,GAAuB,MAAvB;AQgDP,ALHO,AH5CH,IG4CG,OAPJ,EAOa;AKIpB,ALHW,AFvCN,COmBN,GLoBY,OARJ,AF/BG,EEuCW,IFvChB;AEwCM,AFvCJ,ADLA,MGmCA,EASS,AH5CL,KCKC,ADLI,CAAC,KCKV,ADLA,EAAgB,CCKF,CAAd;AO8CR,ALNY,AFtCJ,ADNI,IQkDN,ELhBE,CAUO,IKMF,ARlDI,ECMJ,CO4CG,AP5CR,GAAU,ADNN,GAAc,CAAd,CCMW,CO4CjB,AP5CY,GAAS,IO4CX,CP5CgB,EO4ChB,IP5CR,CAHF,CAKE;AO2CJ,ALjBI,AHjCI,EQkDR,SRlDa,EQkDF,CAAC,CAAD,CAAX,WRlDQ,GAAuB,OAAvB;AQmDR,ALNC,AFrCG,ADPC,EQkDL,CLpBA,UFvBS,GO2CK,CAAC,CAAD,AP3CV,CO2CJ,EP3CiB,KAAK,aAAL,CAAmB,KAAK,gBAAxB,EAA0C,KAAvD;AO4CJ,AP3CI,EO2CJ,UAAU,CAAC,AP3CF,CO2CC,CAAV,GP3CI,GAAa,KAAK,aAAL,CAAmB,KAAK,gBAAxB,EAA0C,KAAvD;AO4CP,ALNG,AFrCI,ADPA,CQ8CR,CLFI,OH5CS,MAAL,GAAc,CG4ClB,AH5CI,CG4CJ,SAAA,CAAA,YAAA,GAAA,UAAa,KAAb,EAAkB;AACd,AFpCF,ADRE,SG4CK,AH5CA,CAAL,IAAU,CG4CV,CAAY,GH5CG,EG4Cf,GAAoB,CH5CpB,EG4CA,CADc,CACU;AKOhC,AP1CM,ADPE,OQiDD,CAAC,CRjDK,EQiDb,CAAY,GRjDJ,GAAc,KQiDtB,ARjD2B,EQiDF,IRjDH,GAAc,EQiDpC,ERjDQ;AG2CA,AFlCF,ADRE,SG0CK,AH1CA,CAAL,IAAU,CG0CV,CAAY,GH1CG,GG0Cf,GAAqB,AH1CrB,GG0CA,CAFc,CAEW;AKSjC,ALRK,AFjCC,GE8BF,CKWA,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAM;AAEpB,AP1CE,ADRE,MQkDD,CAAC,CRlDK,IQkDA,CAAC,ARlDI,CAAL,GAAS,KAAK,IQkDnB,CAAoB,CAApB,ARlDI,EQkDmB,CRlDM,KAAK,CQkDnC,GAAmC,GAAnC,ARlDC,EAA0C,EQkDD,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA/E,EAAmF;AA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V,GO6Ca,EP7CR,CO6CA,MR7ER,SCgCG,KAA0B,CAA9B,EAAgC;AO8CvB,AP7CZ,ADhCC,KAFD,MCkCK,ADhCE,IAAI,KAAK,OCgChB,GAAwB,CAAxB,KDhCW,KAA0B,CAA9B,EAAgC;ACiC1C,ADhCO,WAAK,gBAAL,GAAwB,CAAxB;AQ6EI,AR5EP,aQ4EY,CAAL;AACI,AP5ChB,QAAI,EO4CY,GP5CP,EO4CY,GAAG,CAAR,UP5CZ,KAAyB,MAA7B,EAAoC;AO6CpB,AP5CZ,ADhCA,QAAI,EQ4EQ,CP5CP,EDhCI,CAAC,CQ4EO,GAAG,AR5EpB,CQ4EY,CR5EG,OCgCf,GAAwB,KAAK,aAA7B;AO6CY,AP5Cf,ADhCO,KC8BR,MAEO,ADhCM,ICgCF,KAAK,ODhCR,GAAwB,KAAK,CCgC1B,KAAyB,OAA7B,ADhCC,ECgCoC;AACxC,ADhCC,KAFD,MCkCK,ADhCE,IAAI,KAAK,CAAC,KAAV,CCgCP,CDhCuB,ECgCC,KAAK,cAA7B;AO4CQ,AP3CX,ADhCO,WAAK,EQ2EI,CAAL,aR3EJ,GAAwB,KAAK,cAA7B;AQ4EQ,AR3EX,UQ2EW,KAAK,GAAG,GAAR;AACA,AP3ChB,QAAI,EO2CY,GP3CP,EO2CY,GAAG,CAAR,UP3CZ,KAAyB,OAAzB,IAAoC,KAAK,MAAL,GAAc,GAAtD,EAA2D;AO4C3C,AP5C6C,AD/BzD,QAAI,KAAK,gBAAL,KAAyB,OAAzB,IAAoC,KAAK,MAAL,GAAc,GAAtD,EAA2D;ACgC3D,ADhC6D,WCgCxD,KAAL,GAAa,CAAb;AO4CQ,AP3CR,ADhCI,WCgCC,ADhCI,EQ2EI,CAAL,EP3CR,ADhCI,GCgCS,ADhCI,CAAb,CCgCJ;AO4CY,AP3Cf,ADhCO,KC6BR,KO8CgB,CP3CT,ADhCM,IQ2EQ,AP3CV,CDhCH,EQ2EgB,CR3EH,CCgCL,CO2CA,AR3ER,eCgCG,KAAyB,MAAzB,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;AO4ClD,AP5CoD,AD/B/D,KAHD,KQ8EY,CR3EL,IQ2EU,AR3EN,GQ2ES,CAAR,CR3EI,gBAAL,KAAyB,MAAzB,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;AQ4EtD,AP5CZ,ADhCoE,WCgC/D,KAAL,GAAa,CAAb;AACA,ADhCI,WCgCC,ADhCI,KCgCT,ADhCI,GCgCS,ADhCI,CAAb,CCgCJ;AO4CQ,AP3CX,ADhCO,KC6BD,MAGA,ADhCM,EQ2EI,CAAL,CP3CF,CDhCF,GAAa,CCgCN,CDhCP,eCgCE,KAAyB,UAAzB,IAAuC,KAAK,MAAL,GAAc,GAAxD,EAA6D;AO4CpD,AP3CZ,ADhCC,KAHM,KQ8EK,CP3CP,ADhCE,IQ2EU,AR3EP,CCgCV,EO2CoB,CP3CP,CAAb,ADhCe,CQ2EH,eR3EF,KAAyB,UAAzB,IAAuC,KAAK,MAAL,GAAc,GAAxD,EAA6D;AQ4ExD,AP3CZ,ADhCI,UQ2EQ,CP3CP,ADhCI,IQ2EQ,CP3CjB,ADhCI,EQ2EgB,CP3CP,ADhCI,CAAb,CQ2EQ,AP3CZ;AO4CY,AP3Cf,ADhCO,KC6BD,MAGA,ADhCM,KAAL,GAAa,EAAb;ACgCC,AD/BJ,KAHM,MAGA;AQ2EC,AP3CR,ADhCS,WCgCJ,EO2CQ,CAAL,EP3CR,GAAa,KAAK,gBAAL,CAAsB,KAAK,gBAA3B,EAA6C,KAA1D;AO4CY,AP3CZ,ADhCI,UQ2EQ,CP3CP,ADhCI,IQ2EQ,CP3CjB,ADhCI,EQ2EgB,CP3CP,ADhCI,EQ2EL,GP3CM,ADhCI,gBCgCT,ADhCI,CCgCkB,ADhCI,KCgCC,ADhCI,gBCgC/B,ADhCI,ECgCyC,ADhCI,KCgC9D,ADhCI;AQ4EQ,AP3Cf,ADhCO,UQ2EQ,CR3EH,IQ2EQ,CR3Eb,EQ2EgB,CR3EH,EQ2EL,GR3EU,gBAAL,CAAsB,KAAK,gBAA3B,EAA6C,KAA1D;AQ4EQ,AP3CjB,ADhCM,GCIP;AO+CU,ARlDP,GA5BD,CA5GJ,CA0II;AC+BJ,SAAA,KAAA;AO2CY,APrNZ,CAAA,EAAA,OOqNe,KAAK,KAAK,CAAb,EAAe;AACX,AR1EZ,EAAA,MQ0EY,AR1EZ,CAAA,SAAA,CAAA,MQ0E6B,CAAC,OAAlB,CAA0B,CR1EtC,GAAA,MQ0EY,EAAqC,IR1EjD,CQ0EY,EAA4C,KAA5C,EAAmD,OAAnD,EAA4D,OAA5D;AACH,APvNA,AD8IL,OC9IK,CAAA,AD8ID,CAAJ,IC9IK,GAAA,KAAA;AOyN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","file":"side-scrolling-rpg.77de5100.js","sourceRoot":"..","sourcesContent":["import { sprite } from \"../interface/general-interfaces\";\n\nexport class DamageZone implements sprite {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    color = '#DC33B8';\n\n    constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n}","import { InputController } from './input-controller';\nimport { sprite } from '../interface/general-interfaces';\nimport { DamageZone } from './damage-zone';\nimport { level } from '../../../index';\n\nexport class Player {\n\n    x: number;\n    y: number;\n    centerX: number;\n    centerY: number;\n    faceX= 0;\n    faceY= 64;\n    width=64;\n    height=64;\n    jump = false;\n    speedX=0;\n    speedY=0;\n    color= '#E44C4A';\n    currentDirection = 'standing';\n    isAttacking: boolean;\n    attackTimeFrame: number;\n    damageZone: DamageZone;\n    \n    groundY = 704;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    lifeCredit =  10;\n\n    constructor(\n        x: number,\n        y: number,\n    ){\n        this.x= x;\n        this.y= y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    update(input: InputController){\n\n        if (input.attack){ // Si le joueur attaque\n            this.attack(true);\n        } else if (this.isAttacking && this.attackTimeFrame < 60){\n            this.attackTimeFrame++;\n        } else {\n            this.attack(false);\n        }\n\n        if (input.up && this.jump === false){\n            this.speedY = 230;\n            this.jump = true;\n            this.y -= this.speedY;\n        }\n\n        if (input.left){\n            this.speedX = -1;\n            this.currentDirection= 'left';\n        }\n\n        if (input.right){\n            this.speedX = 1;\n            this.currentDirection= 'right';\n        }\n        \n        this.speedY = 1;\n        this.y += this.speedY;\n\n        this.speedX = this.speedX * 0.90;\n        this.x += this.speedX;\n\n        \n        if ((this.y + this.height) > this.groundY){ // Si le player se trouve plus bas que palier\n             this.y = this.groundY - 64;\n             this.jump = false;\n        }\n\n        if (this.x < 300) { // On empeche le joueur d'aller au bord gauche de la map courante\n            this.x = this.x + 10;\n        } else if (this.x > level.length - 500 ){ // On empeche le joueur d'aller au bord droit de la map courante\n            this.x = this.x - 10; \n        }\n\n        this.updateFaceCrop(input);\n        this.updateDamageZone();\n    }\n\n    setPosition(x: number, y: number){\n        this.x = x;\n        this.y = y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    // Méthode appelée quand le bouton de saut est touché\n    setJump(status : boolean): void {\n        this.jump = status;\n    }\n\n    get getLifeCredit():number { return this.lifeCredit;};\n    set setLifeCredit(value: number) { this.lifeCredit = value;}\n\n    // Méthode appelée quand le bouton d'action est touchée\n    attack(status : boolean): void {\n        this.isAttacking = status;\n        this.attackTimeFrame = 0;\n    }\n\n    // Méthode pour définir les coordonnées de la posture à croper\n    updateFaceCrop(input: InputController): void {\n\n        // On incrémente le compteur de pas\n        if (this.currentLoopIndex < 3){\n            this.currentLoopIndex++\n        } else if (this.currentLoopIndex === 3){\n            this.currentLoopIndex = 0;\n        }\n\n        if (input.left){\n            this.currentCycleLoop = this.leftCycleLoop;\n        } else if (input.right){\n            this.currentCycleLoop = this.rightCycleLoop;\n        }\n\n        if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n            this.faceX = 0;\n            this.faceY = 64;\n        } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n            this.faceX = 0;\n            this.faceY = 32;\n        } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n            this.faceX = 0;\n            this.faceY = 64;\n        } else { // Il avance\n            this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n            this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n        }\n    }\n\n    // On met à jour la zone d'attaque devant le joueur\n    updateDamageZone(): void {\n\n        let x: number\n        let y = this.y - this.height /2;\n\n        if (this.currentDirection=== 'left') { // Si direction vers la gauche\n            x = this.x - this.width / 2;\n        } else if (this.currentDirection=== 'right'){ // Si direction vers la droite\n            x = this.x + this.width / 2;\n        }\n\n        this.damageZone = new DamageZone(x, y, this.width, this.height);\n    }\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\n\nexport class Enemy {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    //characterImg: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 2;\n    color = '#6BE44A';\n    currentDirection: string;\n    faceX = 0;\n    faceY = 64;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    autoMove: any;\n    gameService: GameService;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n    this.gameService = gameService;\n\n    let that  = this;\n    this.autoMove = setInterval(() => { that.setRandomDirection();}, 3000);\n    this.currentDirection = 'left';\n\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update() {\n\n    switch (this.currentDirection) {\n      case 'right':\n        this.speedX = 2;\n\n        this.x = (this.x + this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.rightCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.rightCycleLoop[this.currentLoopIndex].faceY;\n\n        break;\n\n      case 'left':\n        this.speedX = 2;\n\n        this.x = (this.x - this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.leftCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.leftCycleLoop[this.currentLoopIndex].faceY;\n        break;\n\n      // case 'north':\n      //   this.speedY = 2;\n\n      //   this.y = (this.y - this.speedY);\n\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.upCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.upCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n      // case 'south':\n\n      //   this.speedY = 2;\n      //   this.y = (this.y + this.speedY);\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.downCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.downCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n        default:\n          alert('default update');\n          break;\n    }\n\n    this.updateFaceCrop()\n\n    this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    this.currentDirection = this.gameService.randomDirection();\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n  updateFaceCrop(): void {\n\n    // On incrémente le compteur de pas\n    if (this.currentLoopIndex < 3){\n        this.currentLoopIndex++\n    } else if (this.currentLoopIndex === 3){\n        this.currentLoopIndex = 0;\n    }\n\n    if (this.currentDirection=== 'left'){\n        this.currentCycleLoop = this.leftCycleLoop;\n    } else if (this.currentDirection=== 'right'){\n        this.currentCycleLoop = this.rightCycleLoop;\n    }\n\n    if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n        this.faceX = 0;\n        this.faceY = 64;\n    } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n        this.faceX = 0;\n        this.faceY = 32;\n    } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n        this.faceX = 0;\n        this.faceY = 64;\n    } else { // Il avance\n        this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n    }\n  }\n\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\nimport { Player } from './player';\n\nexport class Block {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    img: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 0;\n    faceX = 0;\n    faceY = 64;\n    haveTouchedPlayer: false;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update(player: Player) {\n\n    if (this.x < player.x && this.x + this.width > this.x) { // Si le joueur est en dessous du block\n        // Le block tombe\n        this.speedY = 2;\n    }\n    this.y = this.y + this.speedY;\n\n    //this.updateFaceCrop()\n\n    //this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    \n    //this.currentDirection = this.gameService.randomDirection();\n    //console.log('setRandomDirection this.currentDirection',this.currentDirection);\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n//   updateFaceCrop(): void {\n\n//     // On incrémente le compteur de pas\n//     if (this.currentLoopIndex < 3){\n//         this.currentLoopIndex++\n//     } else if (this.currentLoopIndex === 3){\n//         this.currentLoopIndex = 0;\n//     }\n\n//     if (this.currentDirection=== 'left'){\n//         this.currentCycleLoop = this.leftCycleLoop;\n//     } else if (this.currentDirection=== 'right'){\n//         this.currentCycleLoop = this.rightCycleLoop;\n//     }\n\n//     if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n//         this.faceX = 0;\n//         this.faceY = 32;\n//     } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else { // Il avance\n//         this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n//         this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n//     }\n//   }\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\nimport { Enemy } from './enemy';\nimport { ViewPort } from './viewport';\nimport { Block } from './block';\n\n\nexport class DisplayController {\n    \n    private canvas: any;\n    private ctx: CanvasRenderingContext2D;\n\n    constructor(\n         canvas: any\n    ){\n        this.canvas = canvas;\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 //window.innerHeight;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    initCanvas(){\n     \n    }\n\n    draw(shape: string, viewPort: ViewPort, sprite: sprite): void {\n\n        const {x, y, width, height, color } = sprite;\n        this.ctx.fillStyle = color;\n\n        switch(shape){\n\n            case 'rectangle':\n                this.ctx.fillRect(\n                    x - viewPort.x,\n                    y - viewPort.y,\n                    width,\n                    height\n                );\n                break;\n                default:\n                this.ctx.fillRect(x, y, width, height);\n                break;\n        }\n        \n    };\n\n    drawSprite(characterImg: any, viewPort: ViewPort, sprite: sprite){\n\n        // On va déterminer les coordonnées Y/Y du sprite à affichernsur le canvas\n        let canvasX: number;\n        let canvasY: number;\n\n        if (sprite instanceof Player){\n            canvasX = (this.canvas.width / 2) - sprite.width / 2;\n            canvasY = (this.canvas.height - 256 - sprite.height);\n        }\n        if (sprite instanceof Enemy || sprite instanceof Block){\n            canvasX = sprite.x - viewPort.x;\n            canvasY = sprite.y - viewPort.y;\n        }\n\n        this.ctx.drawImage(\n            characterImg,\n            sprite.faceX, // Position X de la partie à croper\n            sprite.faceY, // Position Y de la partie à croper\n            32 , // Largeur de la partie à croper\n            32 , // Hauteur de la partie à corper\n            canvasX, // on l'affiche toujours au milieu du canvas // Position x de l'image à croper sur le canvas\n            canvasY, // on l'affiche toujours au milieu du canvas // Position y de l'image à croper sur le canvas\n            sprite.width, // Largeur de la partie cropée\n            sprite.height // Hauteur de la partie cropée\n        );\n\n    };\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n\n    drawBackground(backgroundImg: any, player: sprite){\n\n          this.ctx.drawImage(\n            backgroundImg, // Objet image représentant le background\n            player.x - this.canvas.width / 2, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            0, // Position Y de la partie à croper\n\n            this.canvas.width , // Largeur de la partie à croper\n            this.canvas.height , // Hauteur de la partie à corper\n            0, // Position X sur le canvas de l'image cropée\n            0,  // Position Y sur le canvas de l'image cropée\n            this.canvas.width , // Largeur de l'image cropée sur le canvas\n            this.canvas.height // Hauteur de l'image cropée sur le canvas\n          );\n    };\n\n    drawImg(img: any, cropX: number, cropY: number, canvasX: number, canvasY: number ): void {\n\n        this.ctx.drawImage(\n            img, // Objet image représentant le background\n            cropX, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            cropY, // Position Y de la partie à croper\n            64 , // Largeur de la partie à croper\n            64 , // Hauteur de la partie à corper\n            canvasX, // Position X sur le canvas de l'image cropée\n            canvasY,  // Position Y sur le canvas de l'image cropée\n            64 , // Largeur de l'image cropée sur le canvas\n            64 // Hauteur de l'image cropée sur le canvas\n          );\n    }\n\n    resizeCanvas(event): void {\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 // window.innerHeight;\n    }\n   \n    drawTxt(txt: string, canvasX:number, canvasY:number): void {\n        this.ctx.font = \"20px Arial\";\n        this.ctx.fillText(txt, canvasX, canvasY);\n    }\n}","\nexport class InputController {\n\n    left= false;\n    right = false;\n    up = false;\n    down = false;\n    attack = false;\n\n    constructor(){\n    }\n\n\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\n\nexport class GameService {\n\n    constructor(){\n    }\n\n    // On vérifie s'il y a collusion entre deux sprites\n    checkCollision(a: sprite, b: sprite): boolean {\n        // On vérifie si A et B sont sur la même mapsheet et s'il y a collision\n        if (\n        (\n            b.x > a.x + a.width ||\n            b.x < a.x - b.width ||\n            b.y > a.y + a.height ||\n            b.y < a.y - b.height\n        )) { // Pas de collision\n            return false;\n        } else { // collision\n            return true;\n        }\n    }\n\n    // On réagit à la collision\n    handleCollision(a: sprite, b: sprite){\n \n        if (\n            (a.y + a.height < b.y + 20 && a.y + a.height > b.y)\n            && ((a.x + a.width > b.x && a.x + a.width < b.x + b.width) \n            || (a.x < b.x + b.width && a.x > b.x))\n\n        ){\n           return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    // Méthode qui retourne un chiffre compris entre A et B\n    rangeNumber (a,b){\n        return Math.floor((Math.random() * b)) + a;\n    };\n\n    // Méthode qui renvoie une direction aléatoire\n    randomDirection(){\n        const randomNumber = this.rangeNumber(1,2);\n        console.log('randomNumber', randomNumber);\n        let direction = '';\n\n        switch(randomNumber){\n            case 1:\n                direction = 'right';\n                break;\n            case 2:\n                direction = 'left';\n                break;\n            default:\n                direction = 'right';\n                break;\n        }\n        return direction;\n    }\n\n\n}","\n\nexport class ViewPort {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    defineViewPoint(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height; \n    }\n}","\ninterface stageFormat {\n    levelTileCollection: number[],\n    nbCols: number,\n    tileSize: number\n}\n\n\nexport class Level {\n\n    levelTileCollection: number[];\n    nbCols: number;\n    tileSize: number;\n    nbRaws: number;\n    length: number;\n    width: number;\n    height: number;\n\n    constructor(stage: stageFormat){\n        this.levelTileCollection = stage.levelTileCollection;\n        this.nbCols = stage.nbCols;\n        this.tileSize = stage.tileSize;\n        this.length = this.levelTileCollection.length;\n        this.nbRaws = this.levelTileCollection.length / this.nbCols;\n        this.width = this.tileSize * this.nbCols;\n        this.height = this.tileSize * this.nbRaws;\n    }\n}","/// On importe les classes ici\nimport { DisplayController } from './src/model/class/display-controller';\nimport { InputController } from './src/model/class/input-controller';\nimport { Player } from './src/model/class/player';\nimport { GameService } from './src/model/class/game-service';\nimport { Enemy } from './src/model/class/enemy';\nimport { ViewPort } from './src/model/class/viewport';\nimport { sprite } from './src/model/interface/general-interfaces';\nimport { Block } from './src/model/class/block';\nimport { Level } from './src/model/class/level';\n\n\nconst canvas: any =  document.getElementById('game');\n\nconst displayController = new DisplayController(canvas);\nconst player = new Player(400, 600);\nconst inputController =  new InputController();\nconst viewPort = new ViewPort(0, 0, 800, 600);\nexport const gameService = new GameService();\n\nlet brickList = [];\nlet enemiesList =  [];\nlet blockList = [];\n\nlet levelJson = {\n    nbCols: 40,\n    tileSize: 64,\n    levelTileCollection: [\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    ]\n}\n\n\nlet tileSetImg = document.getElementById('tileset');\nlet playerImg = document.getElementById('heros6');\nlet enemyImg = document.getElementById('personnage-important2');\nexport let level =  new Level(levelJson);\n\n// Méthode pour créer des ennemis\nconst initEnemies = (count: number)=>{\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = 640;\n\n        enemiesList = [...enemiesList, new Enemy(x, y, gameService)];\n    }\n}\n\n// Méthode pour créer des ennemis\nconst initBlocks = (count: number)=> {\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = gameService.rangeNumber(2, 100);\n\n        console.log({x, y});\n\n        blockList = [...blockList, new Block(x, y, gameService)];\n    } \n}\n\n\n\n\n\n\nconst initPlateforms = (count: number)=> {\n\n    // On construit les plateformes aléatoirement\n    for (let i = 0; i < count; i++) {\n        const newBrick = { \n            x: Math.random() * 3000,\n            y: Math.random() * canvas.height - 400,\n            width: 300,\n            height: 100,\n            color: '#4AA5E4'\n        };\n\n        if (brickList.length === 0){\n            brickList = [...brickList, newBrick];\n        }\n        \n        brickList.forEach(item => {\n            if (!gameService.checkCollision(item,newBrick)){ // Si pas de collision avec une brique existante\n                // On l'ajoute à la liste des briques\n                brickList = [...brickList, newBrick];\n            }\n        });  \n    }\n}\n\n\n\n\nconst initAll = ()=> {\n    initEnemies(5);\n    initPlateforms(6);\n    initBlocks(5);\n};\n\nconsole.log('blockList', blockList);\n\n\nlet handleStart = (event) =>{\n\n    if(+event.targetTouches[0].clientX  > 400 && +event.targetTouches[0].clientY < 300){\n        inputController.up = true;\n    } else if(+event.targetTouches[0].clientX > 400 && +event.targetTouches[0].clientY > 300) {\n        inputController.attack = true;\n    } else if (+event.targetTouches[0].clientX > 0 && +event.targetTouches[0].clientX < 200){\n        inputController.left = true;\n    } else if(+event.targetTouches[0].clientX > 200 && +event.targetTouches[0].clientX < 400) {\n        inputController.right = true;\n    }\n    \n\n}\n\nlet handleEnd = (event) => {\n\n    inputController.up = false;\n    inputController.right = false;\n    inputController.left = false;\n    inputController.attack = false;\n    \n}\n\ncanvas.addEventListener(\"touchstart\", handleStart, false);\ncanvas.addEventListener(\"touchend\", handleEnd, false);\n// canvas.addEventListener(\"touchcancel\", handleCancel, false);\n// canvas.addEventListener(\"touchleave\", handleLeave, false);\n// canvas.addEventListener(\"touchmove\", handleMove, false);\n\n\n// On crée tous les sprites et les éléments\ninitAll();\n\n\n// L'animation générale\nfunction loop() {\n\n    displayController.clear();\n\n    //displayController.drawBackground(backGroundImg, player);\n\n\n    const columNb = 80;\n    let indexRaw = 0;\n    const tileSize = 64;\n    let canvasX = 0;\n    let canvasY = 0;\n    let tileX = 0;\n    let tileY = 0;\n    let cropX: number;\n    let cropY: number;\n\n    let xMin = Math.floor(viewPort.x / tileSize ); // Colone minimale\n    let yMin = Math.floor(viewPort.y / tileSize ); // Rangée Minimum\n    let xMax = Math.ceil((viewPort.x + viewPort.width) / tileSize); // Colone maximale\n    let yMax = Math.ceil((viewPort.y + viewPort.height) / tileSize); // Rangée Minimale\n\n \n    for (let x = xMin; x < xMax; x++){\n\n        for (let y = yMin; y < yMax; y++){\n\n            let value = mapArray[y * columNb + x];\n            canvasX = x * tileSize - viewPort.x;\n            canvasY = y * tileSize - viewPort.y;\n    \n            switch(value){\n                case 0:\n                    cropX = 320;\n                    cropY = 320;\n                    break;\n                case 1:\n                    cropX = 0;\n                    cropY = 0;\n                    break;\n                case 2:\n                    cropX = 256;\n                    cropY = 0;\n                    break;\n                case 3:\n                    cropX = 384;\n                    cropY = 0;\n                    break;\n                case 4:\n                    cropX = 320;\n                    cropY = 256;\n                    break;\n                case 5:\n                    cropX = 384;\n                    cropY = 256;\n                    break;\n            }\n            if(value !== 0){\n                displayController.drawImg(tileSetImg,cropX, cropY, canvasX, canvasY);\n            }\n            \n        }\n\n    }\n\n    // On affiche les blocks\n    blockList.forEach(block => {\n        block.update(player);\n        displayController.drawSprite(tileSetImg, viewPort, block);\n\n        if (!block.haveTouchedPlayer && gameService.checkCollision(player, block)){ // Si le block n'a pas encore percuté le joueur et qu'il y a collision\n            block.haveTouchedPlayer = true;\n            // On retire un point de crédit au joueur.\n            player.setLifeCredit = player.getLifeCredit - 1;\n        }\n    });\n\n    player.update(inputController);\n    displayController.drawSprite(playerImg, viewPort, player);\n    viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n    if (player.isAttacking){ // Si le player attaque on affiche sa zone d'attaque représentée par un carré\n        displayController.draw('rectangle',viewPort,player.damageZone);\n    }\n\n\n    for (let i = 0; i < mapArray.length; i++){\n        \n        indexRaw = Math.floor(i /  columNb);\n        tileX = (i - indexRaw * columNb) * tileSize;\n        tileY = indexRaw * tileSize;\n\n        // switch(mapArray[i]){\n        //     case 0:\n        //         cropX = 320;\n        //         cropY = 320;\n        //         break;\n        //     case 1:\n        //         cropX = 64;\n        //         cropY = 0;\n        //         break;\n        // }\n\n        \n\n        if(mapArray[i] === 3){\n            if(gameService.handleCollision(player, {x: tileX, y: tileY, width: 64, height: 64 , color: '' })){\n               \n                player.setJump(false);\n                \n                player.groundY = tileY;\n                player.update(inputController);\n                const txt = `player.x : ${player.x}, player.y : ${player.y }`;\n                displayController.drawTxt(txt, 10, 50);\n\n                const txt2 = `tileX : ${tileX}, tileY : ${tileY}`;\n                displayController.drawTxt(txt2, 10, 100);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n                \n            } else {\n                \n                player.groundY = 704;\n                player.update(inputController);\n                const texteCoordonneesX= `player.x : ${player.x}`;\n                displayController.drawTxt(texteCoordonneesX, 10, 120);\n               \n                const texteCoordonneesY= `player.y : ${player.y}`;\n                displayController.drawTxt(texteCoordonneesY, 10, 150);\n\n                const texteCreditsDispo= `Credits : ${player.getLifeCredit}`;\n                displayController.drawTxt(texteCreditsDispo, 10, 180);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n            }\n            \n        }\n        \n\n    }\n    \n    \n    enemiesList.forEach((enemy, index) => {\n        enemy.update();\n        displayController.drawSprite(enemyImg, viewPort, enemy);\n\n\n        if (player.isAttacking && gameService.checkCollision(player.damageZone, enemy)){\n            alert('collision entre ennemi et damagezone');\n            enemiesList.splice(index, 1); \n        }\n    });\n\n \n    \n    window.requestAnimationFrame(loop); \n}\n\n\n\n\n// fetch('/levels.json').then(data=> {\n//      return data.json();\n// }).then(elem => {\n//     console.log('elem', elem);\n// })\n\n// function loadImage(url) {\n//     return new Promise(resolve => {\n//         const image = new Image();\n//         image.addEventListener('load', () => {\n//             resolve(image);\n//         });\n//         image.src = url; \n//     });\n// }\n\n\n// let backGroundImg = new Image();\n// backGroundImg.src = 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Polarlicht_2_kmeans_16_large.png';\n// backGroundImg.onload = ()=> {\n//     alert('charge');\n// };\n\n// let tileSetImg = new Image();\n// //tileSetImg.src = 'https://opengameart.org/sites/default/files/Preview3.jpg';\n// tileSetImg.src = '/src/assets/tileset3232.png';\n// tileSetImg.onload = ()=> {\n//     alert('tileset charge');\n//     loop();\n// };\n//console.log(tileSetImg)\n\n\n\n// On ajoute les évènement pour resizer le canvas\nwindow.addEventListener('resize', displayController.resizeCanvas, false);\nwindow.addEventListener('orientationchange', displayController.resizeCanvas, false);\n\n\nloop();\n\n\n\n"]}