{"version":3,"sources":["src/model/class/damage-zone.ts","src/model/class/player.ts","src/model/class/enemy.ts","src/model/class/display-controller.ts","src/model/class/input-controller.ts","src/model/class/game-service.ts","src/model/class/viewport.ts","index.ts"],"names":[],"mappings":";;;;;;AAEA,AGDA,ADGA,AGDA,ADFA,AHCA,AKAA,INAA,AGDA,ADGA,AGDA,ADFA,AHCA,AKAA,KJEA,GCHA,AGCA,ENAA,CGDA,AEEA,EJDA,EGDA,CHCA,EEDA,CAAA,IFCA,CAAA,KEDA,CAAA,SFCA,CAAA;ADAA,AEEA,AGDA,ADFA,AECA;ANAA,AGAA,ADEA,AGDA,ADFA,AHGA,AKFA,IHAA,AFEA,MAAA,CEFA,CHAA,AEEA,AGDA,ADFA,AECA,EHAA,OAAA,CAAA,SAAA,CAAA;AHQI,AEsBH,AG3BG,ADIA,AHLJ,AKKI,WNCA,AKLA,ADIA,AEAA,QAAA,CAAY,CNCZ,AMDA,CNCY,AKLZ,CLKA,AMDuB,CAAvB,CNCe,AKLf,CLKA,AKJC,ADGD,AEAkC,CDNtC,CLOsB,AKFlB,CDCA,EEAA,ENCA,AMDiD,ENCxB,IMDzB,ENCA,AMD+D,ENChC;AAF/B,AGFJ,AD2BC,AE9BG,AHCJ,AKMQ,IHJR,KHEI,AILA,AEOS,CAAL,CJuBP,CD7BD,CGDI,AEOa,CNFb,AMEI,EJuBP,AE9BS,CJKE,AEyBC,CAAZ,EAAuB,CC3BxB,AD2BC,AE9BG,EF8B8B,GFzB9B,QEyBH,EAAyD;AFtBlD,AGLR,ADII,AENA,AH2BA,AKpBI,SNAK,AEDT,AENA,AEOS,CNAL,AMAA,CLoBJ,EDpBa,AMAA,CNAT,AEDJ,AENA,AEOI,GJDI,AENA,AH2BR,CACI,CCtBJ,ADqBA,EAEI,CG7BJ,AH2BA,EAEa;ADrBT,AGNR,ADKI,AGFA,ADJA,AHKA,AKEI,EDHJ,OLGS,AEDT,AENA,AHKA,AKES,CNAL,CIPJ,CDCJ,CHMiB,AKHb,CLGI,AKHJ,ADJK,AHKL,AKEI,CJDJ,EDDO,AKEU,CJDR,ADDT,CGLA,CFMA,CAsBsD,CAnBtD,AIFI,CDHJ,CAAA,cAAA,GAAA,UAAe,CAAf,EAA0B,CAA1B,EAAmC;ALI/B,AGFJ,ADIA,AGLI,ADJJ,AHKA,AKEI,SNAK,AIPT,AHKA,AKES,EHFT,ECLA,CJOI,ACFJ,CKEI,CFPG,CJOU,ACFV,CKEW,CLFlB,EGLA,CJOI,EMAA,IHFJ,CACK,MADL,EACgB;AHEZ,AGAA,ADEJ,AGLI,ADJJ,AHKA,AKEC,QDDO,CLCC,AGAA,AEDA,ADNT,AHKA,CICU,CAAF,GAAM,AJDd,CDEI,AGAA,AEDW,ADNf,CCMgB,CAAF,AJDR,CDEY,AGAA,ACPT,CHKT,CICoB,CAAC,CAAC,CDNtB,CJOI,AGAA,GEDI,IACA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KADd,IAEA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAFd,IAGA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MALlB,EAMG;ALFN,AGAG,AEEK,ADPR,AHGD,SEES,AFFT,MEEI,AFFJ,CEEgB,EFFT,EAAP,CEEI,GAAoB,GAApB,CAHY,CAGY;ADE5B,AGCQ,AJJR,AKEA,EAAA,OJCA,ADHA,CKEA,CAAA,EDEe,AJJf,ECGA,CDHO,ECGE,AGCD,CHDR,CIDA,CLFA,AKEA,eAAA,GAAA,UAAgB,CAAhB,EAA2B,CAA3B,EAAsC,KAAtC,EAAqD,MAArD,EAAmE;ANCvE,AGDQ,ADEJ,AGCK,ADLT,AHCI,AKEI,KDNA,ILMR,AGDa,ADET,AEJJ,AHCI,AKES,CAAL,CDEO,ECFE,CAAT,CHDA,ADEJ,ADHA,CECgB,EDEP,ADHF,CDEX,AECI,ADHA,GECI,ECFR,CDE6B,GAArB,CAJY,CAIa;AHdjC,AEiBI,AGAa,ADlBjB,AHeI,AKEI,CNhBR,AIDA,EJCA,AIDA,CGDA,KLmBI,ADHA,AKES,CAAL,GAAS,CJCb,AIDI,CLFJ,ECGQ,CDHD,CAAP,OCGA;ACFI,ADIJ,AGDQ,AJHR,AKEI,SHFK,ADIT,ADJA,AKES,GHFL,CEGW,CHCf,ADJA,AKEI,CHFW,EDIP,AGDA,AJHD,AKEU,CJEjB,ECJoB,EGEhB,IHFW,AFAf,CEA2B,UAAZ,CAAuB,IAAvB,CAAX;AIhBR,APCa,AGgBR,ADID,AGDK,ADpBI,AHiBT,AKEI,ICnBR,GPCa,AIDA,CJCA,AIDA,CFqBT,ADJA,AKES,KJET,CIFI,EJEI,CFpBC,AMkBS,CJElB,EFpBS,EIDA,CGAb,ADmBQ,CLFJ,CGjBS,CGAb,CNiBuB,GDhBV,GODb,CAAA,GNiBI,GGjBS,gCGAb,CAAA;ALsBI,AGDC,AJCD,AKFC,GDZD,ACOA,CDbJ,CAqBI,IHDA,ADAA,OAAA,GAAU,GAAV,GCAA,GAAmB,CAAnB;AKrBJ,AJkBI,ADIA,ADAA,EEJA,EIlBJ,KLsBI,ADAA,UEJA,CAAA,EIlBJ,GAAA,ALsBI,ADAA,GCAmB,ADAA,CEJnB,AFIA,CEJA,ADIA,EKtBJ,CAAA,OJkBI,GAAA,YAAA,CAEC,CAFD,YIlBJ,CAAA;ALuBI,ADAA,AKHJ,SJGI,ADAA,AKHJ,QAAA,MJGI,EDAA,CCAiB,CAAC,CDAC,EAAnB;AMtBJ,AJqBI,ADCmB,AGAnB,AJCA,AKxBJ,CAAA,CHsBI,AECA,CCvBJ,CCCA,ELsBuB,GDCnB,ECDwB,CKtB5B,CLsB6B,AGAzB,CHAkB,AGAlB,CEtBJ,IJqBI,CAAA,EIrBJ,CAAA,AFsBI,AJCA,CIDA,EJCiB,CAAC,EEFlB,CAAA,IAAA,GAAA,EECA,GAAA,KFDK,EIrBT,CAAA,EJqBI,AECgB,CAAhB,CFDoB,CECO,CAA3B,EAAoC,IFDpC,EAAwC,MAAxC,EAAsD;AAE3C,ADDgB,AGEvB,AJDe,MCDQ,ADCR,EEAR,AEEF,CFFE,AEED,CAAC,CHHqB,AGGvB,AJFe,CEAb,CDDsB,ADCR,CIEV,AJFG,CIEF,CAAC,EFFN,CAAA,CAAA,EEEF,GAAiB,CAAC,CAAC,CAAF,GAAM,EAAvB,IAA6B,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAAR,GAAiB,CAAC,CAAC,CAAjD,KACK,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAlB,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAR,GAAgB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAhD,IACA,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAd,IAAuB,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,CAFnC,CADJ,EAKC;AE5BT,AJsBe,ADDO,AGQX,AJPoB,AKxBlB,ICEb,CLqBqB,CDCU,CCDW,AIvB7B,CHwBK,AGxBL,CHwBK,EFAkB,CEAlB,CEOA,AJPmB,GKxBxB,CD+BF,CE7BX,AJsBkB,CAAA,AGxBL,CHwBE,CItBf,MDFa,CCEb,CAAA,gCAAA,CAAA;AJsBe,ADD4B,AGSlC,AJRa,KICd,AJDa,CCDsB,CDCD,CEArB,GDD2B,AGSjC,EFRM,ADD4B,EAAP,CCCrB,MAAA,CAAA,KAAN;AIrBf,AJqBe,ADDqC,AGUxC,AJT+B,IMrB3C,ELoBoD,ADCT,EEAf,GIrB5B,ALoByD,ADCT,ECDU,AGUvC,AJT8B,CMrBjD,AJqB4B,CFAc,EEAd,CEShB,GE9BZ,CAAA,CJqB4B,CAAA,MAAb,iBIrBf,CAAA;AJqBe,ADD2B,AGWjC,AJV2C,KCD/B,CDC+B,CCDU,CCC1B,GFAqB,EEArB,AFAsB,GEAtB,MAAA,CAAA,KAArB;AIpBf,AJsBQ,ADHuD,AGa1D,AJZqC,GIDtC,CEnBJ,AJsBQ,AEzBR,CAqCI,AJdiB,CCD0C,CDCD,IEE/C,ADHqD,CCGpD,CDHqD,CKnBrE,ALmB8D,CCGtD,CAAY,CItBpB,KJsBQ,EItBR,CAAA,4BAAA,CAAA;AJuBQ,ADJ+D,ADCR,MCDQ,ADCR,GEGlD,EDJ+D,ADCR,CEG5D,CAAS,ADJ4D,ADCR,CAAP,QEGtD,GAAqB,KAArB;AInBR,ALe8D,ADCS,IMhBjE,CLee,CDCkD,CCDU,GKfrE,CNgBgE,EMhBvD,ANgBwD,QMhBhD,CAAC,cAAT,CAAwB,MAAxB,CAArB;AAEA,AJmBQ,ADN0E,AGgB9E,AJf0D,EIe1D,EE7BE,CNce,CCD6D,CDCD,ICDM,CCMxE,CDNyE,AGgBpF,CAAA,CHhB6E,ECMzE,IInBe,EF6BnB,CE7BsB,AF6BtB,IE7B0B,OF6B1B,GAAA,UE7B0B,AF6Bb,CE7Ba,AF6B1B,EAAe,CAAf,EAAgB,YE7BM,CAAsB,MAAtB,CAA1B;AACA,AJoBY,ADR+E,AGiBnF,AJhB0E,IMb5E,ELYqF,ADCT,IMbtE,CJoBK,ADR+E,AGiBjF,AJhBwE,EMbxE,ALYkF,ADCT,EIgBrE,AJhB8D,CIgB7D,CE7BD,IF6BJ,CFTH,AESe,GE7BR,CAAA,AF6BY,CAAC,KE7BjB,CAAW,AF6BC,GE7BZ,EAAgB,AF6BY,CAA5B,EE7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MgBjB,CNhBgB,CCDsB,CDCD,CIoB3B,GHrBiC,EAAC,CKiBlC,CLjB2B,EKiBxB,GFIS,GAAG,EEJJ,CAAC,EFIQ,WAAL,CEJZ,AFI6B,CEJL,AFIZ,EAAmB,CAAnB,CAArB,KEJS,CAAjB;AACA,AJbQ,ADL2C,AGsB3C,AJrBkC,IMiBtC,AFII,EHtB2C,ADCT,KCDc,AGsBzC,AJrBgC,CIqB/B,CEJH,ALlB4C,ADCT,EIqBxC,AJrBiC,CMiBzB,AFII,QEJI,CAAC,KFIjB,EAA4B,OEJpB,CAAwB,IFIhC,IEJQ,CAAhB;AACA,AJCK,ADpBoC,AGuBjC,AJtB2C,GEH/C,CIqBA,CLnBgB,CDC+B,CCDU,CGuBjD,GJtB4C,CMkB5C,CNlB6C,EMkB1C,EFIM,GAAG,EAAhB,CEJe,CAAC,cAAT,CAAwB,uBAAxB,CAAf;AAIA,ALvB8D,ADCrB,IMsBrC,CNtBgB,CCD0C,CDCD,ICDM,EAAC,CAAP,EKuB7D,EAEA;AJLK,ADpBiE,AGyB9D,AJxBsD,MCDQ,ADCR,KCDa,ADCR,CIwBpD,CHzB6D,ADCR,CAAP,UIwBrD;AECR,AL1B6D,AG0BjD,AJzB0D,IMyBhE,CL1Bc,CDCkD,CCDU,IG0B/D,AJzB0D,CIyB/D,CJzBgE,EMyB3D,GAAG,SAAd,WAAc,CAAC,KAAD,EAAc;AAE9B,AJNA,ADtB6E,AG2BjE,AJ1B6C,EEqBzD,GFrBgB,CCD6D,CDCD,CI0BhE,GH3BsE,EAAC,EAAP,EG2BvD,EFLrB,CAAA,AEKwB,OAAZ,EFLZ,CAAA,UAAA,GAAA,UAAW,YAAX,EAA8B,QAA9B,EAAkD,MAAlD,EAAgE;AIOhE,AJLI,ADxBkF,AG4B1E,AJ3BiE,MCDS,ADCT,CM4BxE,IAAI,AL7BkF,ADCT,CM4BxE,CL7BkF,ADCT,EM4BtE,AN5B+D,CM4B5E,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC5B,AJLA,ADzBwE,ADCU,KCDtE,CAAhB,ADCsF,EM6B5E,AJLF,CIKG,EN7BgF,CM6B7E,CN7B8E,EEwBxF,IIKU,CAAA,WAAA,CAAY,WAAZ,CAAwB,GAAxB,EAA6B,IAA7B,CAAV;AACA,AJLA,ADzBJ,AG4BQ,AJ5BoE,KAA5D,CAAhB,EM8BU,AJLF,CIKG,AL9BX,EG4Ba,CEEC,AFFN,GEEJ,AJLA,KDzBJ,GAAc,CAAC;AKgCX,ALhCY,AG6BJ,AJ5BZ,IM+BI,ELhCY,EG6BJ,CJ5BZ,ECDqB,EAAC,CAAP,CKgCA,EFHM,CEGN,EFHS,AJ5BxB,GAAc,CAAC,EI4BH,MEGG,CAAO,WAAP,EAAkB,CAAE,IAAI,OAAA,CAAA,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,OAAA,CAAA,WAAhB,CAAF,CAAlB,CAAX;AACH,AJNG,AD3BoB,AG8BZ,AJ7BI,MCDQ,ADCR,EE0BR,GD3BqB,ADCR,ECDS,ADCR,CE0BR,AF1BC,YE0BW,QAAA,CAAA,MAAtB,EAA6B;AIOpC,AJNW,AD5BO,ADCS,CMwB5B,ILzBkB,CC4BN,AF3BgB,CCDW,IDCN,EE2Bd,AF3Be,GE2BX,KAAK,MAAL,CAAY,KAAZ,GAAoB,CAArB,GAA0B,MAAM,CAAC,KAAP,GAAe,CAAnD;AACA,AD7B4B,AG+B5B,AJ9BO,KAAD,CE4BN,AD7B4B,CDCD,ICDM,EC6B1B,AD7B2B,EAAP,CC6BhB,KAAK,MAAL,CAAY,MAAZ,GAAqB,GAArB,GAA2B,MAAM,CAAC,MAA7C;AIQZ,AJPS,AD9BwC,AGgCjC,AJ/BwB,IMoCpC,ELrC6C,ADCT,EI+BxB,GHhCsC,ADCT,EMoChC,ALrC0C,ADCT,EAAP,CMoCvB,CFLS,CEKzB,EFL4B,OAAZ;AHhCuB,AGiCvB,AJhCiC,KCD/B,CDC+B,CCDU,IDCL,EAAC;AMuCvD,AJTQ,AD/BoD,AGwBpD,AJvB+B,IMuCjC,CNvCY,CCD0C,CDCD,CE8B/C,GD/BqD,EAAC,CC+BhD,AD/ByC,IKwCvC,GAAG,KJTO,IISxB,GJTwB,CAAA,KAAtB,EAA4B,GISb,CAAC,KAAD,EAAc;AJRzB,ADhCwD,ADCR,ME+BhD,ADhCwD,ADCR,KCDa,ADCR,EE+B9C,ADhCuD,ADCR,CAAP,EE+BrC,MAAM,CAAC,CAAP,GAAW,MIWpB,EJX4B,CIW3B,AJX4B,CAA9B;AIYJ,AJXI,ADjC+C,AGmCnD,AJlC4D,KCDlD,CCiCN,AFhCwD,CCDU,CK4ChE,GFTC,AJlC0D,EEgCtD,AFhCuD,GM2CpD,AJXA,GIWG,CFTjB,EFFoB,CAAC,CAAP,GAAW,QAAQ,CAAC,CAA9B;AIYA,AJXH,ADlCsE,AGoC1E,AJnCsD,GIkBvD,EJlBc,CM4CN,AL7CmE,CK6ClE,AN5CiE,EM4C/D,EL7CqE,EK6CjE,AL7CkE,CK6CjE,CL7C0D,KK6C/D,KAAgB,IADN;AAEb,AL9C4E,ADCT,MM6CnE,AL9C4E,ADCT,CM6ClE,EAAE,EL9C8E,ADCT,EM6CjE,AL9C2E,ADCT,CM6CjE,CN7C0D,KM6C/D,KAAgB,MAAM,CAAC,MAAvB,GAAgC,GAFtB;AAGb,AJXJ,ADpCsE,AGuC9E,AJtCwF,KCDtE,CK+CN,AL/CR,ADCoF,GEmC3E,AEGb,EEQiB,AN9C4E,CEmCrF,CIWW,AJXF,AFnC6E,GM2CrE,IFLzB,EFHQ,CACI,YADJ,EAEI,MAAM,CAAC,KAFX,EAEkB;AIUd,AJTA,ADtCR,AGzBJ,AJyB8E,CIzB9E,EAAA,CF+DY,CFtCM,CM+CN,AN/CR,GCAA,CCsCc,CAAC,CISD,EAAE,EJZZ,CIQiB,CJLC,IDtCtB,GAAgB,CAAC;AKgDT,AJTA,ADvCU,ADClB,MM+CQ,AJbJ,ADnCc,ECuCL,CFtCb,EM+Ca,ALhDU,EKgDR,ALhDS,CAAP,QDCjB,GAAgB,CAAC;AM0CI,AJHb,ADxCkB,AGzBjB,AJ0BS,KM0Cd,CJRA,ADnCsB,ADCR,CI1BT,CFiEI,AEjEJ,GHyBsB,ADCR,ECDS,ADCR,CAAP,KI1BR,GAAA,WAAA;AFkED,ADzCS,ADCS,IEwClB,CDzCQ,CDCU,CCDU,ICmChC,AFlC2B,EEwCd,AFxCe;AMkD5B,AJTI,AD1C6B,ADCpB,IEyCT,CFzCQ,CCDqB,CDCD,CMkD5B,GJhBJ,ADnCsC,EC0CzB,AD1C0B,EAAP,EKmDnB,CAAC,MAAV,KAAqB,CAAzB,EAA2B;AACvB,AJTA,AD3CsC,ADCT,IE0C7B,EISA,ALpDsC,ADCT,IE0CvB,CAAC,AD3CoC,ADCT,ECDU,ADCT,EMmD1B,ANnDmB,CEkChC,EIiBa,AJTK,cISL,CAAO,SAAP,EAAgB,CAAE,QAAF,CAAhB,CAAT;AACH,AJTG,AD5C4B,ADCU,IE2CtC,CD5CQ,CDC8B,CCDS,GC4CzC,CAAC,AF3CoC,EAAC,IEkChD,CASkB;AATlB,ADnCoD,ADCpB,KAApB,CCDwC,CDCD,ICDM,EAAC,CAAP;AKuDnD,AJRH,AD/C+D,ADCR,GEmBxD,CImCI,ELvD4D,ADCR,KCDa,ADCR,EMsDhD,ALvDyD,ADCR,CMsDhD,ANtDyC,OMsDnD,CAAkB,UAAA,IAAA,EAAI;AAClB,ALxD+C,ADCS,KCDhD,CDCgD,CCDS,GKwD7D,CAAC,ANvDwD,EAAC,KMuDzD,CAAA,WAAA,CAAY,cAAZ,CAA2B,IAA3B,EAAgC,QAAhC,CAAL,EAA+C;AAAE,AJTxD,AD/CyE,ADCnB,KAAvC,CCD0D,CDCD,ICDM,EAAC,EAAP;AKyD7D,ALzDuE,ADCT,MCDS,ADCT,KCDc,ADCT,ECDU,ADCT,EAAP;AMyD7D,AJTZ,ADjDyE,ADCU,EEgDnF,GDjDgB,CAAhB,ADCmF,CCI7B,CKqD1C,ALnDZ,GDNwF,EAAC,IMyDpE,EJTrB,CISqB,AJTrB,SAAA,CAAA,IISqB,CAAO,AJT5B,GAAA,MISqB,EAAgB,CAAE,GJTvC,KISqC,CAAhB,CAAT;AACH,AJTL,AD1CJ,ADPyE,KAAzD,CAAhB,GEiDS,GAAL,CAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK,MAAL,CAAY,KAArC,EAA4C,KAAK,MAAL,CAAY,MAAxD;AIUC,AJTJ,AD1CD,ADFI,GE0CJ,EIMI,INhDK,CAAL,GAAQ,CAAR;AACA,IM+B6B,CAEjC,INjCS,CAAL,GAAQ,CAAR;AE2CH,ADzCD,ADDI,SAAK,OAAL,GAAgB,KAAK,CAAL,GAAS,KAAK,KAAL,GAAa,CAAtC;AACA,SAAK,OAAL,GAAgB,KAAK,CAAL,GAAS,KAAK,MAAL,GAAc,CAAvC;AMgCJ,AJWA,AD1CA,ADAC,EE0CD,KIXK,EL/BA,CAAL,CK+BS,CAAC,CL/BD,CAAT,CK+Ba,ALrCyC,CKqCtD,AL/BY,EK+BI,CAAC,AJWjB,CAAA,EIXoB,KAApB,EAA2B,AJW3B,CIX4B,AJW5B,EIXA,EAA8B,UJW9B,GAAA,UAAe,aAAf,EAAmC,MAAnC,EAAiD;AAE3C,SAAK,GIbF,AJaH,CAAS,SAAT,CACE,aADF,EACiB;AIOtB,AJNO,AD7CR,ADCA,EAAA,EE4CQ,IF5CR,CCDK,ADCL,CE4Cc,AD7Cd,CC6Ce,CAAP,CD7CC,CAAT,CC6CmB,ADpDmC,CAO1C,EDCZ,CAAA,CE4CwB,KF5CxB,CE4CmB,CAAY,CF5C/B,IE4CmB,GAAoB,CAFjC,EAEoC,AF5CnC,KAAP,EAA6B;AMmDhC,AJNW,AF3CJ,CMwBR,ONxBY,KAAK,CAAC,MAAV,EAAiB;AE4Cb,AD9CR,ADEuB,KEwCjB,EAIK,ED9CN,OAAL,GAAgB,KAAK,CAAL,GAAS,KAAK,KAAL,GAAa,CAAtC;AKsDJ,AJNY,AD/CR,ADEQ,SE6CK,AD/CR,EKqDE,ANnDM,CMmDL,CAAD,CAAX,CJNY,CAAY,AD/CpB,CDEQ,CAAY,CCFJ,ECyCV,CFvCE,CE6CoB,CD/CP,CAAL,GAAS,KAAK,MAAL,GAAc,CAAvC;AKsDJ,AJNY,AD/CR,ADEK,KAFD,IE+CS,AD/CR,EDEM,GMmDD,CAAC,AJNH,AF7CO,CMmDL,AJNU,CIMxB,GLrDI,ADEoB,EEsCd,CDxCa,CC+CU,OF7Cd,GCFf,CDEmC,KAAK,eAAL,GAAuB,EAA/C,EAAkD;AE8CrD,AD9CR,ADCQ,KEqCF,EAQK,CD9CP,GDCS,CCDL,GAAI,IAAZ,ODCQ;AMqDZ,AJPY,AD9CR,ADCK,IMoDL,CJhBM,AFtCK,EE+CC,ED9CP,EDCM,IMoDA,ELrDX,CKqDc,ELrDE,OKqDhB,ILrD2B,CAAC,MKqDd,CAAC,KAAD,ALrDc,EKqDR;AAEpB,AJRQ,AD/C4B,ADE5B,MMqDL,ALvDiC,CKuDhC,EJRS,CD/C2B,CAAC,ADE5B,CMqDJ,CAAC,EJRF,CAAY,CF7CZ,CAAY,GEmCd,EAUsB,AF7CpB,GMqDJ,CAAoB,CAApB,CLvDgC,CKuDT,OAAxB,GAAmC,GAAnC,IAA0C,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA/E,EAAmF;AAC/E,AJRI,ADhDuD,ADG1D,IMqDD,CLxDuB,EAAsC,ECgDpD,EDhDc,CAA3B,GCgDQ,CAAY,GIQD,CAAC,EAAhB,AJnBE,CAWqB,EIQF,IAArB;AACH,AJpBK,ADpCN,GKsDA,MAEO,ALxDF,IKwDK,CAAC,KAAK,CAAC,KLxDjB,GAAwB,KKwDb,CAAoB,ALxD/B,CKwDW,EAAuB,OAAxB,GAAkC,GAAlC,IAAyC,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA9E,EAAmF;AACtF,AJRH,AD/CF,ADEK,GE8BJ,AD7EJ,CKoGQ,ALnDN,IDFU,KAAK,CAAC,EAAN,GMqDW,CAAC,ANrDA,KAAK,CMqDrB,GAAyB,ANrDT,IMqDhB,CNrD8B,KAA9B,EAAoC;AMsDvC,ANrDO,GMmDD,MAEA,ENrDM,EMqDF,CAAC,GNrDJ,EMqDS,CAAC,ANrDI,GAAd,UMqDI,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,CAAlC,IAAuC,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA7E,EAAiF;AACpF,AJVH,AF3CO,IMqDJ,ONrDS,IAAL,GAAY,CMqDD,CAAC,ENrDZ,EMqDJ,GAAuB,IAAvB;AACH,ALrDH,ADAU,ECAV,CKmDS,ILnDT,CAAA,CKqDS,ENrDM,CAAL,CMqDE,CAAC,ENrDO,CCApB,CAAA,CKqDkB,CAAC,CNrDM,GCAzB,GAAA,ADAU,MMqDG,CAAoB,CAApB,EAAuB,ELrDpC,KKqDY,GAAkC,GAAlC,IAAyC,CAAC,KAAK,CAAC,aAAN,CAAoB,CAApB,EAAuB,OAAxB,GAAkC,GAA9E,EAAmF;AACtF,AJVJ,AD1CA,ADDK,EE2CL,EIUI,QLpDI,KAAK,EKoDM,AJVnB,CIUoB,AJVpB,KIUI,GAAwB,CJV5B,CAAA,EIUI,CLpDJ,IC0CA,GAAA,UAAQ,GAAR,EAAkB,KAAlB,EAAiC,KAAjC,EAAgD,OAAhD,EAAiE,OAAjE,EAAgF;AIW/E,AJTG,AD3CF,SC2CO,ED3CF,CC2CH,CAAS,KD3CX,IC2CE,CACI,GADJ,EACS;AIWhB,AJVW,AD5CJ,ADDA,CM0CR,GJGY,IF7CA,CE2CJ,EAEW,ED5CN,ADDI,CAAC,IAAV,CCCA,CDDe,ECCD,CAAd;AC6CI,AD3CJ,ADFI,WAAK,ECEJ,CAAL,GAAU,ADFN,GAAc,CAAC,CCEJ,ADFX,CCEM,GAAS,KAAK,MAAxB,CAHF,CAKE;AKoDR,AJVY,AF7CA,IMuDR,AJVQ,KAJJ,EAIW,AF7CF,EMuDJ,GAAG,SAAZ,ENvDQ,GAAuB,IMuDnB,CAAC,CNvDL,IMuDI,EAAM;AAElB,AJXQ,AD1CJ,ADHC,EMwDL,IJhBI,EAKS,KD1CJ,IKqDM,CAAC,ALrDZ,EKqDJ,CLrDiB,EKqDI,GLrDC,EKqDtB,YLrDiB,CAAoB,KAAK,gBAAzB,EAA2C,KAAxD;AKsDJ,AJXQ,AD1CJ,EKqDJ,IJjBI,EAMS,KD1CJ,IKqDM,CAAC,ALrDZ,GAAa,EKqDjB,GAAwB,ALrDF,KKqDtB,SLrDiB,CAAoB,KAAK,gBAAzB,EAA2C,KAAxD;AKsDJ,AJXQ,ADzCJ,ADJA,EMwDJ,EJXQ,IF7CA,GEsCJ,EAOa,AF7CJ,CAAC,GMwDC,CAAC,CNxDZ,EAAgB,CMwDpB,GAAuB,KAAvB;AACA,AJXQ,AF7CA,EMwDR,EJXQ,OARJ,AFrCS,EE6CK,IIWH,ANxDP,CMwDQ,ENxDM,CAAd,GMwDR,GAAyB,KAAzB;AAEH,AJZW,ADzCN,ADJM,CMkDZ,KJdQ,EASS,GDzCN,ADJM,MCIX,UDJM,GAAuB,OAAvB;AE8CA,ADzCJ,ADJC,MEmCD,CAUO,MDzCF,MAAL,GAAc,CAAd;AKsDR,AJvBQ,AD7BA,MKoDF,CAAC,MLpDM,CAAL,GAAU,KAAK,CKoDvB,ALpDkB,CKoDM,ELpDG,KAAK,KKoDhC,CLpDQ,CKoD8B,ALvDhC,CAKE,UKkDR,EAAmD,KAAnD;AACA,AJZK,AF7CG,GE+BJ,GI0BE,CAAC,ENzDM,MAAL,GAAc,CAAd,IMyDR,CAAwB,UAAxB,EAAoC,SAApC,EAA+C,KAA/C,GACA;AACA,ALpDQ,ADNA,SAAK,CAAL,GCMK,CDNK,ICMV,CDNe,ECMF,IDNb,CCMkB,aAAL,CAAmB,KAAK,gBAAxB,EAA0C,KAAvD;AKqDR,AJbI,ADvCI,ADLA,EE4CJ,OF5CS,ICKA,EDLL,GCKA,ADLc,CE4ClB,CAAA,CDvCiB,EDLM,GCKD,GCuCtB,AF5CkB,CE4ClB,EF5CgC,IAA5B,GCKa,CAAmB,ECuCpC,GAAA,ADvCyC,UCuC5B,KAAb,CDvCiB,CCuCC,CDvCyC,KAAvD;AKyDR,AJhBQ,ADxCA,ADLA,IE6CA,KF7CK,CAAL,CE6CO,CAAC,EF7CE,CE6CV,CAAY,GF7CG,IE6Cf,EAAqB,AF7CrB,KE6CA;AACA,ADvCF,SCuCO,MAAL,CAAY,KAAZ,GAAoB,GAApB,CAHc,CAGU;AIgBhC,ALtDM,ADLE,QAAK,CM2DJ,IAAT,AN3DkB,CAAL,EM2DA,CN3DS,KAAK,MAAf,GAAyB,KAAK,OAAlC,EAA0C;AM6D9C,AJjBI,ADrCF,ADP8C,EM6DhD,OJjBS,MAAL,CAAY,GIiBC,CAAC,EJjBd,GIiBJ,AJjByB,GIehB,AJfL,CImBJ,AJvBkB,CAIW;AAC5B,ADpCC,ADRO,GEuCT,QFvCc,CAAL,GAAS,KAAK,OAAL,GAAe,EAAxB;AMiET,ALxDE,ADRO,MMgEH,KNhEQ,EMgED,ENhEJ,CMgEO,EAAhB,ANhEqB,KAAZ;AMiET,AJpBA,ADpCE,ADRG,EE4CL,IIoBI,QAAQ,GAAG,CAAf,CJpBA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,GAAR,EAAmB;AIqBnB,AJpBI,ADpCF,MKwDI,GJpBG,GAAL,CAAS,CIoBC,GAAG,AJpBb,EIoBJ,CJpBoB,YAAhB;AIqBJ,AJpBI,ADnCF,ADTE,MMgEA,ENhEI,CE4CC,GAAL,CIoBO,AJpBE,AF5CA,CAAL,EMgEM,CAAd,ANhEiB,GAAb,CE4CA,CAAkB,AF5CA,GE4ClB,EAAuB,EAAvB,EAA2B,EAA3B;AIqBJ,AJpBC,ADlCC,ADXsB,GE0CxB,GIuBI,OAAO,GAAG,CAAd;AACA,ALtDE,ADXM,MMiEJ,KAAK,ANjEI,CAAL,EMiEI,CAAZ,ANjEiB,KAAK,CAAL,GAAS,EAAlB;AMkER,AJrBJ,ADjCM,ADXG,KAFD,CMmEA,GJrBR,EIqBa,ANjEE,GMiEC,CAAZ,ANjEe,KAAK,CAAL,GAAS,EE4C5B,EF5Ce,EAAkB;AMkE7B,AJ7IJ,ADuFM,ADZ6B,CE3EnC,EAAA,GI6IQ,KAAJ;AACA,ALtDE,ADZM,MMkEJ,KAAJ,ANlEa,CAAL,GAAS,KAAK,CAAL,GAAS,EAAlB;AMoER,AJhJS,ADyFP,ADZG,MMmED,CJhJK,CAAA,EIgJD,GAAG,IAAI,CAAC,KAAL,CAAW,CJhJb,GAAA,IIgJqB,CAAC,CAAT,GAAa,QAAxB,AJhJF,CIgJT,CAjBS,CAiBsC;;AAC/C,ALtDI,ADZA,MMkEA,GNlEK,CMkED,GAAG,IAAI,CAAC,KAAL,ANlEP,CMkEkB,ANlEE,KAApB,GMkE0B,CAAC,CAAT,GAAa,QAAxB,CAAX,CAlBS,CAkBsC;ALrDzC,ADZF,QCYE,CDZG,ICYE,CAAC,WDZR,KCYO,CAAL;AKsDN,ALrDM,ADZL,GA9CD,GM+GI,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,QAAQ,CAAC,CAAT,GAAa,QAAQ,CAAC,KAAvB,IAAgC,QAA1C,CAAX,CAnBS,CAmBuD;ALhGhE;AKiGA,ANhEA,EAAA,IMgEI,ENhEJ,CAAA,CMgEQ,GAAG,IAAI,CAAC,ANhEhB,CAAA,GMgEW,CAAU,CAAC,MNhEtB,EMgE8B,CAAC,ANhE/B,CMgEsB,GAAa,MNhEvB,CAAZ,CMgE2C,CAAC,ANhErB,CAAvB,EAAgC,GMgEX,IAAiC,QAA3C,CAAX,CApBS,CAoBwD;ALnDjE,ADZI,SCYC,ADZI,CAAL,GAAS,CAAT,SCYJ;AKsDA,ALpDA,ADbI,OMiEC,ELpDA,ADbI,CAAL,CMiEK,CAAC,CNjEG,CAAT,CMiES,GLpDb,CKoDA,EAAmB,CAAC,GAAG,IAAvB,EAA6B,CAAC,EAA9B,EAAiC;AAE7B,ALpDJ,ADdI,ICcJ,KKoDS,ANlEA,ECcF,CAAC,CKoDK,CAAC,CLpDd,CAAY,ADdR,CMkEa,ENlEG,EMkEhB,EAAmB,CAAC,ALpDxB,ADdyB,CAAL,CCcE,CKoDK,CNlEE,GMkEzB,ALpDuB,CAA3B,CKoDiC,ANlEC,CMkEA,EAA9B,EAAiC,ANlER,GAAa,CAAtC;AMoEI,ALrDT,ADdK,GCvCN,CAlDF,CAyGE,IDhBW,CMmEG,KAAK,CNnEb,EMmEgB,CNnEA,KAAK,CAAL,CMmEQ,CAAC,CAAC,ANnED,GMmEI,ENnEC,KMmEL,CNnEA,EMmEc,CAAf,ANnEe,CMmEnC,ANnEJ;AMoEI,ANnEP,GALD,CArFJ,CA4FI,CMiEQ,OAAO,GAAG,CAAC,GAAG,QAAJ,GAAe,QAAQ,CAAC,CAAlC;AACA,MAAA,OAAO,GAAG,CAAC,GAAG,QAAJ,GAAe,QAAQ,CAAC,CAAlC;ALpDV,EAAA,KAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,CAAjB,EAAoB,CAApB,EAAqB;AKsDX,ALrDR,ADdA,EAAA,MAAA,CCcK,ADdL,CCcA,GAAS,CKqDM,ALrDf,IDdA,CMmEQ,ANnER,OAAA,GAAA,UAAQ,MAAR,EAAwB;AMoEZ,ALrDZ,ADdI,SCcC,ADdI,CCcT,GKqDiB,ALrDR,ADdL,CMmEQ,ALrDZ,EDdgB,MAAZ;AMoEY,ALrDjB,ADdE,GCWH,ADbE,CC7FJ,ADAA,CC+GE,ADdE,KMiEgB,KAAK,GAAG,GAAR;AACA,UAAA,KAAK,GAAG,GAAR;AACA;ALpDlB,ADdE,ECcF,ADdE,KCcF,CAAA,ADdE,CAAA,QCcF,CAAA,ADdE,CAAA,MAAA,GAAA,QCcF,EDdS,CCcT,KDdE,EAAuB,KCczB;AKqDc,ALnDZ,ADfI,SCeC,ADfI,IMkEQ,CAAL,MNlER,GAAmB,ECevB,GAAwB,CDfpB,ICeyB,WAAL,CAAiB,eAAjB,EAAxB;AKoDgB,ALnDhB,ADfI,ICeJ,KDfS,CMkEO,CLnDT,CAAC,GKmDa,ALnDrB,CAAY,EKmDY,CAAR,KNlEZ,GAAuB,CAAvB,8BCeJ,EAAuD,KAAK,gBAA5D;AKoDgB,ALnDjB,ADfE,GCWH,ADdE,CClGJ,ADAA,CCsHE,ADfE,KMgEgB,KAAK,GAAG,CAAR;AACA;;AACJ,ALlDd,ADfE,ECeF,ADfE,KCeF,CAAA,ADfE,CAAA,IMiEiB,CAAL,GLlDd,CAAA,ADfE,CAAA,QCeF,GAAA,GDfE,GAAA,MCeF,IDfiB,KAAf,EAAqC;AMkErB,ALjDhB,ADfI,UMgEY,KAAK,GAAG,GAAR;AACA,ALjDhB,ADfI,QAAI,CCeH,CKiDW,GNhEH,EMgEQ,CLjDrB,EKiDwB,CAAR,ALjDC,KAAK,CAAL,GAAS,CDflB,GAAwB,CCeD,ADf3B,EAA8B,GCelB,GAAyB,KAAK,KAAL,GAAa,CAAtD;AKkDgB,ALjDhB,ADfQ,SCeH,EDfQ,KCeb,GAAiB,KAAK,CAAL,EDfT,CCekB,KAAK,MAAf,GAA0B,KAAK,MAAL,GAAc,CAAxD;AACD,ADfM,GCUP,CAvHF,CA+HE,ADpBM,MAEO,IAAI,KAAK,gBAAL,KAA0B,CAA9B,EAAgC;AMgE/B,AN/DJ,WAAK,EM+DI,CAAL,aN/DJ,GAAwB,CAAxB;AMgEQ,AN/DX,UM+DW,KAAK,GAAG,GAAR;AACA,AL/ClB,EAAA,KAAA,CAAA,EK+CkB,KAAK,EL/CvB,CK+C0B,AL/C1B,CK+CkB,UL/ClB,GAAA,UAAY,WAAZ,EAAuB;AKgDL,AL9ChB,ADjBI,QAAI,CCiBH,CAAL,GAAS,ADjBI,CAAC,IAAV,EAAe,ICiBC,CAAC,CAArB;AACA,ADjBQ,SCiBH,CAAL,CDjBa,ECiBJ,WAAW,CAAC,CAArB,CAHqB,ADdb,CCkBT,EDlBiC,KAAK,aAA7B;AM+DI,AN9DP,KAFD,MAEO,EM8DM,CAAL,CN9DG,KAAK,CAAC,KAAV,EAAgB;AM+DX,AL7ChB,ADjBQ,SCiBH,CK6CW,CN9DH,IM8DQ,GAAG,AL7CxB,GK6CgB,ALlDK,CAMrB,KDlBQ,GAAwB,KAAK,cAA7B;AM+DQ,AL5CjB,ADlBM,GCWP,CAhIF,CAyIE,KK0CkB,KAAK,GAAG,GAAR;AACA;AN7DZ,QAAI,KAAK,gBAAL,KAAyB,OAAzB,IAAoC,KAAK,MAAL,GAAc,GAAtD,EAA2D;AM8DnD,AL3Cd,ADnBmE,ECmBnE,KAAA,CAAA,KK2CmB,CAAL,GL3Cd,CAAA,mBAAA,GAAA,YAAA,CAEE;AK0CgB,ALzCjB,ADrBS,GCkBV,CA1IF,CA+IE,KKuCkB,CN9DH,IM8DQ,CN9Db,EM8DgB,CN9DH,CAAb,CM8DQ;AACA,AN9DR,UM8DQ,CN9DH,IM8DQ,CN9Db,EM8DgB,CN9DH,EM8DL,AN9DR;AM+DQ,AN9DX,KAHD,MAGO,IAAI,KAAK,gBAAL,KAAyB,MAAzB,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;AMsC9D,ALhBV,ADtB0E,ECsB1E,KAAA,CAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AAEE,ADvBQ,WAAK,KAAL,GAAa,CAAb;AM+DA,ALvCR,ADvBQ,QCuBJ,EKuCO,CN9DE,ECuBJ,EKuCO,CN9DR,GAAa,CM8DA,CAAb,AN9DA,EM8De,MLvCnB,GAAwB,CAA5B,EAA8B;AKwClB,ALvCR,ADvBC,KAHM,GMiEC,GLvCH,ADvBE,IAAG,KAAK,KM8DU,CAAC,CLvC1B,MKuCQ,CAA0B,EN9DxB,KAAyB,GM8D3B,EAAqC,KAArC,AN9DE,EM8D0C,EN9DH,GM8DzC,EAAmD,AN9DL,MAAL,CM8DzC,EAA4D,AN9DL,GAAxD,EAA6D,EM8D5D;AACH,ALvCR,ADvBO,KCqBR,MAEO,ADvBM,ICuBF,CDvBH,GAAa,CCuBL,ADvBR,gBCuBG,KAA0B,CAA9B,EAAgC;AKyClC,ALxCD,ADvBI,WCuBC,ADvBI,KAAL,GAAa,EAAb,MCuBJ,GAAwB,CAAxB;AK0CH,ALzCA,ADvBI,KAHM,MAGA;AAAE;AMmEb,AL1CA,ADxBQ,EMkER,MAAM,AL1CF,CK0CG,ENlEM,ECwBJ,EK0CT,CAAc,ANlEN,GAAa,KAAK,KCwBtB,EK0CJ,GL1C6B,MAA7B,ADxBqB,CAAsB,CCwBP,IDxBY,gBAA3B,EAA6C,KAA1D;AMmER,AL1CI,ADxBI,EMkER,SL1CS,ADxBI,KAAL,GMkES,ANlEI,CMkEH,INlEQ,GCwBtB,GK0CJ,AL1C4B,CK0CC,IL1CI,KK0CjC,ANlEqB,CAAsB,CMkEH,INlEQ,ECwB5C,EK0CJ,EAAkD,MAAlD,INlEqB,EAA6C,KAA1D;AMmER,AL1CC,ADxBI,EMkEL,GL5CA,KK4CQ,CAAC,AL1CF,IAAI,KAAK,MK0ChB,CAAyB,MAAM,CAAC,CAAP,CL1Cd,GK0C2B,EL1CF,IK0CQ,CAAP,EL1C9B,CK0C0C,CL1CL,KK0CW,CAAC,KAAP,GAAe,CAAvC,CAAzB,EAAqE,MAAM,CAAC,CAAP,GAAY,MAAI,CAAhB,GAAqB,EAA1F,EAA+F,GAA/F,EAAoG,GAApG;ALzCI,ADxBH,GA5BD,CAxGJ,CAsII,MCsBS,gBAAL,GAAwB,KAAK,cAA7B;AK2CJ,AL1CC,MK0CG,MAAM,CAAC,WAAX,EAAuB;AACnB,IAAA,iBAAiB,CAAC,IAAlB,CAAuB,WAAvB,EAAmC,QAAnC,EAA4C,MAAM,CAAC,UAAnD;AACH,AL1CD,ADxBA,EAAA,MCwBI,ADxBJ,CAAA,ICwBS,KDxBT,CAAA,UCwBI,KAAyB,CDxB7B,GAAA,GCwBI,IAAoC,KAAK,ADxB7C,MCwBwC,GAAc,GAAtD,EAA2D;AAAE,ADtBzD,QAAI,CAAJ;AMmEJ,AL5CI,ADtBA,OMkEC,CNlEG,CAAC,EMkEA,AL5CA,CK4CC,ANlEE,GMkEC,CAAb,AL5CI,CDtBa,CMkED,ANlEJ,CMkEK,AL5CA,CAAb,CDtBiB,CMkED,INlEM,IMkEE,CAAC,CNlER,GAAa,CAA9B,CMkEJ,EAAqC,CAAC,EAAtC,EAAyC;AAErC,AL7CA,IK6CA,OL7CK,CK6CG,GAAG,CL7CX,GK6Ce,AL7CF,CK6CG,CL7ChB,IK6CW,CAAW,CAAC,GAAI,OAAhB,CAAX;AACA,AL7CH,ADtBG,IMmEA,CLhDJ,GDnBQ,CMmEC,EL7CF,CK6CK,CAAC,ANnEA,CMmEC,CL7CH,EK6CM,GL7CD,KK6CS,GAAG,CNnEpB,KAAyB,CMmErB,CL7CD,GK6C4B,CNnEnC,CCsBgC,CDtBK,KMmErC,AL7CO,IAAmC,KAAK,MAAL,GAAc,CAAC,GAAtD,EAA2D;AK8C9D,AL9CgE,ADtBzB,IMoEvC,KAAK,GAAG,QAAQ,GAAG,QAAnB,CAJqC,CAMrC;AACA,ALhDA,ADtBI,MAAA,CAAC,GAAG,CCsBH,IDtBQ,CCsBb,ADtBQ,GCsBK,ADtBI,CCsBjB,IDtBsB,KAAL,GAAa,CAA1B;AMuEJ,ALhDA,ADtBC,KAFD,MCwBK,ADtBE,IAAI,CCsBX,GAAa,CDtBG,CCsBhB,eDtBW,KAAyB,OAA7B,EAAqC;AMuE5C,ALhDH,ADvBiD,KCoB3C,MAGA,IAAG,KAAK,gBAAL,KAAyB,UAAzB,IAAuC,KAAK,MAAL,GAAc,GAAxD,EAA6D;AKiDhE,ALhDA,ADvBI,MAAA,CAAC,GAAG,CCuBH,IDvBQ,CCuBb,ADvBQ,GCuBK,ADvBI,CCuBjB,IDvBsB,KAAL,GAAa,CAA1B;AMwEJ,ALhDA,ADvBC,WCuBI,KAAL,GAAa,EAAb;AKiDA,ALhDH,KAHM,MAGA;AKiDH,ALjDK,ADtBL,SAAK,UAAL,GAAkB,IAAI,aAAA,CAAA,UAAJ,CAAe,CAAf,EAAkB,CAAlB,EAAqB,KAAK,KAA1B,EAAiC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","file":"side-scrolling-rpg.77de5100.js","sourceRoot":"..","sourcesContent":["import { sprite } from \"../interface/general-interfaces\";\n\nexport class DamageZone implements sprite {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    color = '#DC33B8';\n\n    constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n}","import { InputController } from './input-controller';\nimport { sprite } from '../interface/general-interfaces';\nimport { DamageZone } from './damage-zone';\n\nexport class Player {\n\n    x: number;\n    y: number;\n    centerX: number;\n    centerY: number;\n    faceX= 0;\n    faceY= 64;\n    width=64;\n    height=64;\n    jump = false;\n    speedX=0;\n    speedY=0;\n    color= '#E44C4A';\n    currentDirection = 'standing';\n    isAttacking: boolean;\n    attackTimeFrame: number;\n    damageZone: DamageZone;\n    \n    groundY = 704;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    \n    constructor(\n        x: number,\n        y: number,\n    ){\n        this.x= x;\n        this.y= y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    update(input: InputController){\n\n        if (input.attack){ // Si le joueur attaque\n            this.attack(true);\n        } else if (this.isAttacking && this.attackTimeFrame < 60){\n            this.attackTimeFrame++;\n        } else {\n            this.attack(false);\n        }\n\n        if (input.up && this.jump === false){\n            this.speedY = 230;\n            this.jump = true;\n            this.y -= this.speedY;\n        }\n\n        if (input.left){\n            this.speedX = -1;\n            this.currentDirection= 'left';\n        }\n\n        if (input.right){\n            this.speedX = 1;\n            this.currentDirection= 'right';\n        }\n        \n        this.speedY = 1;\n        this.y += this.speedY;\n\n        this.speedX = this.speedX * 0.90;\n        this.x += this.speedX;\n\n        \n        if ((this.y + this.height) > this.groundY){ // Si le player se trouve plus bas que palier\n             this.y = this.groundY - 64;\n             this.jump = false;\n        }\n\n        if (this.x < 300) { // On empeche le joueur d'aller au bord gauche de la map courante\n            this.x = this.x + 10;\n        } else if (this.x > 4000){ // On empeche le joueur d'aller au bord droit de la map courante\n            this.x = this.x - 10; \n        }\n\n        this.updateFaceCrop(input);\n        this.updateDamageZone();\n    }\n\n    setPosition(x: number, y: number){\n        this.x = x;\n        this.y = y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    // Méthode appelée quand le bouton de saut est touché\n    setJump(status : boolean): void {\n        this.jump = status;\n    }\n\n    // Méthode appelée quand le bouton d'action est touchée\n    attack(status : boolean): void {\n        this.isAttacking = status;\n        this.attackTimeFrame = 0;\n    }\n\n    // Méthode pour définir les coordonnées de la posture à croper\n    updateFaceCrop(input: InputController): void {\n\n        // On incrémente le compteur de pas\n        if (this.currentLoopIndex < 3){\n            this.currentLoopIndex++\n        } else if (this.currentLoopIndex === 3){\n            this.currentLoopIndex = 0;\n        }\n\n        if (input.left){\n            this.currentCycleLoop = this.leftCycleLoop;\n        } else if (input.right){\n            this.currentCycleLoop = this.rightCycleLoop;\n        }\n\n        if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n            this.faceX = 0;\n            this.faceY = 64;\n        } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n            this.faceX = 0;\n            this.faceY = 32;\n        } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n            this.faceX = 0;\n            this.faceY = 64;\n        } else { // Il avance\n            this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n            this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n        }\n    }\n\n    // On met à jour la zone d'attaque devant le joueur\n    updateDamageZone(): void {\n\n        let x: number\n        let y = this.y - this.height /2;\n\n        if (this.currentDirection=== 'left') { // Si direction vers la gauche\n            x = this.x - this.width / 2;\n        } else if (this.currentDirection=== 'right'){ // Si direction vers la droite\n            x = this.x + this.width / 2;\n        }\n\n        this.damageZone = new DamageZone(x, y, this.width, this.height);\n    }\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\n\nexport class Enemy {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    //characterImg: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 2;\n    color = '#6BE44A';\n    currentDirection: string;\n    faceX = 0;\n    faceY = 64;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    autoMove: any;\n    gameService: GameService;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n    this.gameService = gameService;\n\n    let that  = this;\n    this.autoMove = setInterval(() => { that.setRandomDirection();}, 3000);\n    this.currentDirection = 'left';\n\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update() {\n\n    switch (this.currentDirection) {\n      case 'right':\n        this.speedX = 2;\n\n        this.x = (this.x + this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.rightCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.rightCycleLoop[this.currentLoopIndex].faceY;\n\n        break;\n\n      case 'left':\n        this.speedX = 2;\n\n        this.x = (this.x - this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.leftCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.leftCycleLoop[this.currentLoopIndex].faceY;\n        break;\n\n      // case 'north':\n      //   this.speedY = 2;\n\n      //   this.y = (this.y - this.speedY);\n\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.upCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.upCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n      // case 'south':\n\n      //   this.speedY = 2;\n      //   this.y = (this.y + this.speedY);\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.downCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.downCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n        default:\n          alert('default update');\n          break;\n    }\n\n    this.updateFaceCrop()\n\n    this.setCenter();\n\n    console.log('this.x', this.x);\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    \n    this.currentDirection = this.gameService.randomDirection();\n    console.log('setRandomDirection this.currentDirection',this.currentDirection);\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n  updateFaceCrop(): void {\n\n    // On incrémente le compteur de pas\n    if (this.currentLoopIndex < 3){\n        this.currentLoopIndex++\n    } else if (this.currentLoopIndex === 3){\n        this.currentLoopIndex = 0;\n    }\n\n    if (this.currentDirection=== 'left'){\n        this.currentCycleLoop = this.leftCycleLoop;\n    } else if (this.currentDirection=== 'right'){\n        this.currentCycleLoop = this.rightCycleLoop;\n    }\n\n    if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n        this.faceX = 0;\n        this.faceY = 64;\n    } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n        this.faceX = 0;\n        this.faceY = 32;\n    } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n        this.faceX = 0;\n        this.faceY = 64;\n    } else { // Il avance\n        this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n    }\n  }\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\nimport { Enemy } from './enemy';\nimport { ViewPort } from './viewport';\n\n\nexport class DisplayController {\n    \n    private canvas: any;\n    private ctx: CanvasRenderingContext2D;\n\n    constructor(\n         canvas: any\n    ){\n        this.canvas = canvas;\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 //window.innerHeight;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    initCanvas(){\n     \n    }\n\n    draw(shape: string, viewPort: ViewPort, sprite: sprite): void {\n\n        const {x, y, width, height, color } = sprite;\n\n        console.log('draw');\n        this.ctx.fillStyle = color;\n\n        switch(shape){\n\n            case 'rectangle':\n                this.ctx.fillRect(\n                    x - viewPort.x,\n                    y - viewPort.y,\n                    width,\n                    height\n                );\n                break;\n                default:\n                this.ctx.fillRect(x, y, width, height);\n                break;\n        }\n        \n    };\n\n    drawSprite(characterImg: any, viewPort: ViewPort, sprite: sprite){\n\n        // On va déterminer les coordonnées Y/Y du sprite à affichernsur le canvas\n        let canvasX: number;\n        let canvasY: number;\n\n        if (sprite instanceof Player){\n            canvasX = (this.canvas.width / 2) - sprite.width / 2;\n            canvasY = (this.canvas.height - 256 - sprite.height);\n        }\n        if (sprite instanceof Enemy){\n            canvasX = sprite.x - viewPort.x;\n            canvasY = sprite.y - viewPort.y;\n        }\n\n        this.ctx.drawImage(\n            characterImg,\n            sprite.faceX, // Position X de la partie à croper\n            sprite.faceY, // Position Y de la partie à croper\n            32 , // Largeur de la partie à croper\n            32 , // Hauteur de la partie à corper\n            canvasX, // on l'affiche toujours au milieu du canvas // Position x de l'image à croper sur le canvas\n            canvasY, // on l'affiche toujours au milieu du canvas // Position y de l'image à croper sur le canvas\n            sprite.width, // Largeur de la partie cropée\n            sprite.height // Hauteur de la partie cropée\n        );\n\n    };\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n\n    drawBackground(backgroundImg: any, player: sprite){\n\n          this.ctx.drawImage(\n            backgroundImg, // Objet image représentant le background\n            player.x - this.canvas.width / 2, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            0, // Position Y de la partie à croper\n\n            this.canvas.width , // Largeur de la partie à croper\n            this.canvas.height , // Hauteur de la partie à corper\n            0, // Position X sur le canvas de l'image cropée\n            0,  // Position Y sur le canvas de l'image cropée\n            this.canvas.width , // Largeur de l'image cropée sur le canvas\n            this.canvas.height // Hauteur de l'image cropée sur le canvas\n          );\n    };\n\n    drawImg(img: any, cropX: number, cropY: number, canvasX: number, canvasY: number ): void {\n\n        this.ctx.drawImage(\n            img, // Objet image représentant le background\n            cropX, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            cropY, // Position Y de la partie à croper\n            64 , // Largeur de la partie à croper\n            64 , // Hauteur de la partie à corper\n            canvasX, // Position X sur le canvas de l'image cropée\n            canvasY,  // Position Y sur le canvas de l'image cropée\n            64 , // Largeur de l'image cropée sur le canvas\n            64 // Hauteur de l'image cropée sur le canvas\n          );\n    }\n\n    resizeCanvas(event): void {\n\n        console.log('event', event);\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 // window.innerHeight;\n    }\n   \n    drawTxt(txt: string){\n        this.ctx.font = \"20px Arial\";\n        this.ctx.fillText(txt, 10, 50);\n    }\n}","\nexport class InputController {\n\n    left= false;\n    right = false;\n    up = false;\n    down = false;\n    attack = false;\n\n    constructor(){\n    }\n\n\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\n\nexport class GameService {\n\n    constructor(){\n    }\n\n    // On vérifie s'il y a collusion entre deux sprites\n    checkCollision(a: sprite, b: sprite): boolean {\n        // On vérifie si A et B sont sur la même mapsheet et s'il y a collision\n        if (\n        (\n            b.x > a.x + a.width ||\n            b.x < a.x - b.width ||\n            b.y > a.y + a.height ||\n            b.y < a.y - b.height\n        )) { // Pas de collision\n            return false;\n        } else { // collision\n            return true;\n        }\n    }\n\n    // On réagit à la collision\n    handleCollision(a: sprite, b: sprite){\n \n        if (\n            (a.y + a.height < b.y + 20 && a.y + a.height > b.y)\n            && ((a.x + a.width > b.x && a.x + a.width < b.x + b.width) \n            || (a.x < b.x + b.width && a.x > b.x))\n\n        ){\n           return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    // Méthode qui retourne un chiffre compris entre A et B\n    rangeNumber (a,b){\n        return Math.floor((Math.random() * b)) + a;\n    };\n\n    // Méthode qui renvoie une direction aléatoire\n    randomDirection(){\n        const randomNumber = this.rangeNumber(1,2);\n        console.log('randomNumber', randomNumber);\n        let direction = '';\n\n        switch(randomNumber){\n            case 1:\n                direction = 'right';\n                break;\n            case 2:\n                direction = 'left';\n                break;\n            default:\n                direction = 'right';\n                break;\n        }\n        return direction;\n    }\n\n\n}","\n\nexport class ViewPort {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    defineViewPoint(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height; \n    }\n}","/// On importe les classes ici\nimport { DisplayController } from './src/model/class/display-controller';\nimport { InputController } from './src/model/class/input-controller';\nimport { Player } from './src/model/class/player';\nimport { GameService } from './src/model/class/game-service';\nimport { Enemy } from './src/model/class/enemy';\nimport { ViewPort } from './src/model/class/viewport';\nimport { sprite } from './src/model/interface/general-interfaces';\n\n\nconst canvas: any =  document.getElementById('game');\n\nconst displayController = new DisplayController(canvas);\nconst player = new Player(400, 600);\nconst inputController =  new InputController();\nconst viewPort = new ViewPort(0, 0, 800, 600);\nexport const gameService = new GameService();\nlet enemiesList =  [];\n\n\n\nlet mapArray = [\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n    1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n    2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n];\n\nlet tileSetImg = document.getElementById('tileset');\nlet playerImg = document.getElementById('heros6');\nlet enemyImg = document.getElementById('personnage-important2');\n\n\n\nlet collideBrick: sprite;\n\n// Méthode pour créer des ennemis\nconst initEnemies = (count: number)=>{\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = 640;\n\n        enemiesList = [...enemiesList, new Enemy(x, y, gameService)];\n    } \n}\n\n\nlet brickList = [];\n\n\nconst initPlateforms = (count: number)=> {\n\n    // On construit les plateformes aléatoirement\n    for (let i = 0; i < count; i++) {\n        const newBrick = { \n            x: Math.random() * 3000,\n            y: Math.random() * canvas.height - 400,\n            width: 300,\n            height: 100,\n            color: '#4AA5E4'\n        };\n\n        if (brickList.length === 0){\n            brickList = [...brickList, newBrick];\n        }\n        \n        brickList.forEach(item => {\n            if (!gameService.checkCollision(item,newBrick)){ // Si pas de collision avec une brique existante\n                // On l'ajoute à la liste des briques\n                brickList = [...brickList, newBrick];\n            }\n        })\n        \n        \n    }\n}\n\n\ninitEnemies(5);\ninitPlateforms(6);\n\n\nlet handleStart = (event) =>{\n\n    if(+event.targetTouches[0].clientX  > 400 && +event.targetTouches[0].clientY < 300){\n        inputController.up = true;\n    } else if(+event.targetTouches[0].clientX > 400 && +event.targetTouches[0].clientY > 300) {\n        inputController.attack = true;\n    } else if (+event.targetTouches[0].clientX > 0 && +event.targetTouches[0].clientX < 200){\n        inputController.left = true;\n    } else if(+event.targetTouches[0].clientX > 200 && +event.targetTouches[0].clientX < 400) {\n        inputController.right = true;\n    }\n    \n\n}\n\nlet handleEnd = (event) => {\n\n    inputController.up = false;\n    inputController.right = false;\n    inputController.left = false;\n    inputController.attack = false;\n    \n}\n\ncanvas.addEventListener(\"touchstart\", handleStart, false);\ncanvas.addEventListener(\"touchend\", handleEnd, false);\n// canvas.addEventListener(\"touchcancel\", handleCancel, false);\n// canvas.addEventListener(\"touchleave\", handleLeave, false);\n// canvas.addEventListener(\"touchmove\", handleMove, false);\n\n\n\n\n// L'animation générale\nfunction loop() {\n\n    displayController.clear();\n\n    //displayController.drawBackground(backGroundImg, player);\n\n\n    const columNb = 80;\n    let indexRaw = 0;\n    const tileSize = 64;\n    let canvasX = 0;\n    let canvasY = 0;\n    let tileX = 0;\n    let tileY = 0;\n    let cropX: number;\n    let cropY: number;\n\n    let xMin = Math.floor(viewPort.x / tileSize ); // Colone minimale\n    let yMin = Math.floor(viewPort.y / tileSize ); // Rangée Minimum\n    let xMax = Math.ceil((viewPort.x + viewPort.width) / tileSize); // Colone maximale\n    let yMax = Math.ceil((viewPort.y + viewPort.height) / tileSize); // Rangée Minimale\n\n \n    for (let x = xMin; x < xMax; x++){\n\n        for (let y = yMin; y < yMax; y++){\n\n            let value = mapArray[y * columNb + x];\n            canvasX = x * tileSize - viewPort.x;\n            canvasY = y * tileSize - viewPort.y;\n    \n            switch(value){\n                case 0:\n                    cropX = 320;\n                    cropY = 320;\n                    break;\n                case 1:\n                    cropX = 0;\n                    cropY = 0;\n                    break;\n                case 2:\n                    cropX = 256;\n                    cropY = 0;\n                    break;\n                case 3:\n                    cropX = 384;\n                    cropY = 0;\n                    break;\n                case 4:\n                    cropX = 320;\n                    cropY = 256;\n                    break;\n                case 5:\n                    cropX = 384;\n                    cropY = 256;\n                    break;\n            }\n            if(value !== 0){\n                displayController.drawImg(tileSetImg,cropX, cropY, canvasX, canvasY);\n            }\n            \n        }\n\n    }\n\n\n    player.update(inputController);\n    displayController.drawSprite(playerImg, viewPort, player);\n    viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n    if (player.isAttacking){\n        displayController.draw('rectangle',viewPort,player.damageZone);\n    }\n\n\n    for (let i = 0; i < mapArray.length; i++){\n        \n        indexRaw = Math.floor(i /  columNb);\n        tileX = (i - indexRaw * columNb) * tileSize;\n        tileY = indexRaw * tileSize;\n\n        // switch(mapArray[i]){\n        //     case 0:\n        //         cropX = 320;\n        //         cropY = 320;\n        //         break;\n        //     case 1:\n        //         cropX = 64;\n        //         cropY = 0;\n        //         break;\n        // }\n\n        \n\n        if(mapArray[i] === 3){\n            if(gameService.handleCollision(player, {x: tileX, y: tileY, width: 64, height: 64 , color: '' })){\n               \n                player.setJump(false);\n                \n                player.groundY = tileY;\n                player.update(inputController);\n                const txt = `player.x : ${player.x}, player.y : ${player.y }, tileX : ${tileX}, tileY : ${tileY}`;\n                displayController.drawTxt(txt);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n                \n            } else {\n                \n                player.groundY = 704;\n                player.update(inputController);\n                const txt= `player.x : ${player.x}, player.y : ${player.y}`;\n                displayController.drawTxt(txt);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n            }\n            \n        }\n        \n\n    }\n    \n    \n    enemiesList.forEach((enemy, index) => {\n        enemy.update();\n        displayController.drawSprite(enemyImg, viewPort, enemy);\n\n\n        if (player.isAttacking && gameService.checkCollision(player.damageZone, enemy)){\n            alert('collision entre ennemi et damagezone');\n            enemiesList.splice(index, 1); \n        }\n    });\n    \n\n  \n    \n    //On itère sur la liste des briques\n    // brickList.forEach(brick=> {\n    //     displayController.draw('rectangle', brick, player);\n    //     // if (gameService.checkCollision(brick, player)){ // Si collision entre la brique et le player\n    //     // };\n    //     if(gameService.handleCollision(player, brick)){\n\n    //         //player.x = savedPlayerX;\n    //         //collideBrick = brick;\n    //         player.y = brick.y - player.height - 25;\n    //         player.setJump(false);\n    //     };\n    // });\n\n    window.requestAnimationFrame(loop); \n}\n\n\n\n\n// fetch('/levels.json').then(data=> {\n//      return data.json();\n// }).then(elem => {\n//     console.log('elem', elem);\n// })\n\n// function loadImage(url) {\n//     return new Promise(resolve => {\n//         const image = new Image();\n//         image.addEventListener('load', () => {\n//             resolve(image);\n//         });\n//         image.src = url; \n//     });\n// }\n\n\n// let backGroundImg = new Image();\n// backGroundImg.src = 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Polarlicht_2_kmeans_16_large.png';\n// backGroundImg.onload = ()=> {\n//     alert('charge');\n// };\n\n// let tileSetImg = new Image();\n// //tileSetImg.src = 'https://opengameart.org/sites/default/files/Preview3.jpg';\n// tileSetImg.src = '/src/assets/tileset3232.png';\n// tileSetImg.onload = ()=> {\n//     alert('tileset charge');\n//     loop();\n// };\n//console.log(tileSetImg)\n\n\n\n\n\nwindow.addEventListener('resize', displayController.resizeCanvas, false);\nwindow.addEventListener('orientationchange', displayController.resizeCanvas, false);\n\nloop();\n"]}