{"version":3,"sources":["src/model/class/damage-zone.ts","src/model/class/player.ts","src/model/class/enemy.ts","src/model/class/block.ts","src/model/class/display-controller.ts","src/model/class/input-controller.ts","src/model/class/game-service.ts","src/model/class/viewport.ts","src/model/class/map.ts","src/model/class/tileSet.ts","index.ts","../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"side-scrolling-rpg.77de5100.js","sourceRoot":"..","sourcesContent":["import { sprite } from \"../interface/general-interfaces\";\n\nexport class DamageZone implements sprite {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    color = '#DC33B8';\n\n    constructor(x, y, width, height){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n}","import { InputController } from './input-controller';\nimport { sprite } from '../interface/general-interfaces';\nimport { DamageZone } from './damage-zone';\nimport { map } from '../../../index';\n\nexport class Player {\n\n    x: number;\n    y: number;\n    centerX: number;\n    centerY: number;\n    faceX= 0;\n    faceY= 64;\n    width=64;\n    height=64;\n    jump = false;\n    speedX=0;\n    speedY=0;\n    color= '#E44C4A';\n    currentDirection = 'standing';\n    isAttacking: boolean;\n    attackTimeFrame: number;\n    damageZone: DamageZone;\n    \n    groundY = 704;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    lifeCredit =  10;\n\n    constructor(\n        x: number,\n        y: number,\n    ){\n        this.x= x;\n        this.y= y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    update(input: InputController){\n\n        if (input.attack){ // Si le joueur attaque\n            this.attack(true);\n        } else if (this.isAttacking && this.attackTimeFrame < 60){\n            this.attackTimeFrame++;\n        } else {\n            this.attack(false);\n        }\n\n        if (input.up && this.jump === false){\n            this.speedY = 230;\n            this.jump = true;\n            this.y -= this.speedY;\n        }\n\n        if (input.left){\n            this.speedX = -1;\n            this.currentDirection= 'left';\n        }\n\n        if (input.right){\n            this.speedX = 1;\n            this.currentDirection= 'right';\n        }\n        \n        this.speedY = 1;\n        this.y += this.speedY;\n\n        this.speedX = this.speedX * 0.90;\n        this.x += this.speedX;\n\n        \n        if ((this.y + this.height) > this.groundY){ // Si le player se trouve plus bas que palier\n             this.y = this.groundY - 64;\n             this.jump = false;\n        }\n\n        if (this.x < 300) { // On empeche le joueur d'aller au bord gauche de la map courante\n            this.x = this.x + 10;\n        } else if (this.x > map.getMapWidth - 300 ){ // On empeche le joueur d'aller au bord droit de la map courante\n            this.x = this.x - 10; \n        }\n\n        this.updateFaceCrop(input);\n        this.updateDamageZone();\n    }\n\n    setPosition(x: number, y: number){\n        this.x = x;\n        this.y = y;\n        this.centerX = (this.x + this.width / 2);\n        this.centerY = (this.y + this.height / 2);\n    }\n\n    // Méthode appelée quand le bouton de saut est touché\n    setJump(status : boolean): void {\n        this.jump = status;\n    }\n\n    get getLifeCredit():number { return this.lifeCredit;};\n    set setLifeCredit(value: number) { this.lifeCredit = value;}\n\n    // Méthode appelée quand le bouton d'action est touchée\n    attack(status : boolean): void {\n        this.isAttacking = status;\n        this.attackTimeFrame = 0;\n    }\n\n    // Méthode pour définir les coordonnées de la posture à croper\n    updateFaceCrop(input: InputController): void {\n\n        // On incrémente le compteur de pas\n        if (this.currentLoopIndex < 3){\n            this.currentLoopIndex++\n        } else if (this.currentLoopIndex === 3){\n            this.currentLoopIndex = 0;\n        }\n\n        if (input.left){\n            this.currentCycleLoop = this.leftCycleLoop;\n        } else if (input.right){\n            this.currentCycleLoop = this.rightCycleLoop;\n        }\n\n        if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n            this.faceX = 0;\n            this.faceY = 64;\n        } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n            this.faceX = 0;\n            this.faceY = 32;\n        } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n            this.faceX = 0;\n            this.faceY = 64;\n        } else { // Il avance\n            this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n            this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n        }\n    }\n\n    // On met à jour la zone d'attaque devant le joueur\n    updateDamageZone(): void {\n\n        let x: number\n        let y = this.y - this.height /2;\n\n        if (this.currentDirection=== 'left') { // Si direction vers la gauche\n            x = this.x - this.width / 2;\n        } else if (this.currentDirection=== 'right'){ // Si direction vers la droite\n            x = this.x + this.width / 2;\n        }\n\n        this.damageZone = new DamageZone(x, y, this.width, this.height);\n    }\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\n\nexport class Enemy {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    //characterImg: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 2;\n    color = '#6BE44A';\n    currentDirection: string;\n    faceX = 0;\n    faceY = 64;\n    currentLoopIndex = 0;\n    currentCycleLoop = [];\n    rightCycleLoop = [{faceX:0,faceY:64}, {faceX:32,faceY:64},{faceX:0,faceY:64},{faceX:64,faceY:64}];\n    leftCycleLoop = [{faceX:0,faceY:32}, {faceX:32,faceY:32},{faceX:0,faceY:32},{faceX:64,faceY:32}];\n    upCycleLoop = [{faceX:0,faceY:96}, {faceX:32,faceY:96},{faceX:0,faceY:96},{faceX:64,faceY:96}];\n    downCycleLoop = [{faceX:0,faceY:0}, {faceX:32,faceY:0},{faceX:0,faceY:0},{faceX:64,faceY:0}];\n    autoMove: any;\n    gameService: GameService;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n    this.gameService = gameService;\n\n    let that  = this;\n    this.autoMove = setInterval(() => { that.setRandomDirection();}, 3000);\n    this.currentDirection = 'left';\n\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update() {\n\n    switch (this.currentDirection) {\n      case 'right':\n        this.speedX = 2;\n\n        this.x = (this.x + this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.rightCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.rightCycleLoop[this.currentLoopIndex].faceY;\n\n        break;\n\n      case 'left':\n        this.speedX = 2;\n\n        this.x = (this.x - this.speedX);\n\n        // On détermine la positon x/y du crop du personnage\n        this.faceX = this.leftCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.leftCycleLoop[this.currentLoopIndex].faceY;\n        break;\n\n      // case 'north':\n      //   this.speedY = 2;\n\n      //   this.y = (this.y - this.speedY);\n\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.upCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.upCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n      // case 'south':\n\n      //   this.speedY = 2;\n      //   this.y = (this.y + this.speedY);\n      //   // On détermine la positon x/y du crop du personnage\n      //   this.faceX = this.downCycleLoop[this.currentLoopIndex].faceX;\n      //   this.faceY = this.downCycleLoop[this.currentLoopIndex].faceY;\n      //   break;\n\n        default:\n          alert('default update');\n          break;\n    }\n\n    this.updateFaceCrop()\n\n    this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    this.currentDirection = this.gameService.randomDirection();\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n  updateFaceCrop(): void {\n\n    // On incrémente le compteur de pas\n    if (this.currentLoopIndex < 3){\n        this.currentLoopIndex++\n    } else if (this.currentLoopIndex === 3){\n        this.currentLoopIndex = 0;\n    }\n\n    if (this.currentDirection=== 'left'){\n        this.currentCycleLoop = this.leftCycleLoop;\n    } else if (this.currentDirection=== 'right'){\n        this.currentCycleLoop = this.rightCycleLoop;\n    }\n\n    if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n        this.faceX = 0;\n        this.faceY = 64;\n    } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n        this.faceX = 0;\n        this.faceY = 32;\n    } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n        this.faceX = 0;\n        this.faceY = 64;\n    } else { // Il avance\n        this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n        this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n    }\n  }\n\n}","import { gameService } from '../../../index';\nimport { sprite } from \"../interface/general-interfaces\";\nimport { GameService } from './game-service';\nimport { Player } from './player';\n\nexport class Block {\n\n    //name : string;\n    //energy: number;\n    x: number;\n    y: number;\n    width = 64;\n    height = 64;\n    centerX: number;\n    centerY: number;\n    //reference: string;\n    img: Object;\n    //mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n    speedX = 2;\n    speedY = 0;\n    faceX = 0;\n    faceY = 64;\n    haveTouchedPlayer: false;\n\n // Constructeur de la classe des ennemies\n constructor(x: number, y:number, gameService: GameService) {\n\n    //this.name = name;\n    //this.reference = reference;\n    //this.characterImg = config.getImage(this.reference);\n    /* propriétés communes sprites animés */\n    this.x = x; // Position X sur la map\n    this.y = y; // Position Y sur la map\n    this.centerX = (this.x + this.width / 2);\n    this.centerY = (this.y + this.height / 2);\n  }\n\n\n\n  // Méthode qui va modifier les coordonnées du people.\n  update(player: Player) {\n\n    if (this.x < player.x && this.x + this.width > this.x) { // Si le joueur est en dessous du block\n        // Le block tombe\n        this.speedY = 2;\n    }\n    this.y = this.y + this.speedY;\n\n    //this.updateFaceCrop()\n\n    //this.setCenter();\n  }\n\n  // Réinitialise les cordonnées x /y du people\n  resetCoordinates(x, y): void {\n    this.x = x;\n    this.y = y;\n  }\n\n  // Renvoie une direction aléatoirement\n  setRandomDirection(): void {\n    \n    //this.currentDirection = this.gameService.randomDirection();\n    //console.log('setRandomDirection this.currentDirection',this.currentDirection);\n  }\n\n  // On recalcule le centre du people\n  setCenter(): void {\n\n    // On recalcule le centre du people\n    this.centerX = ((this.x + this.width) - (this.width / 2));\n    this.centerY = ((this.y + this.height) - (this.height / 2));\n  }\n\n\n  // Méthode pour réinitialiser la position du people dans la map\n  setPosition(destination) {\n\n    this.x = destination.x;\n    this.y = destination.y;\n   //this.currentWorldPosition =  new WorldPosition(destination.worldId,destination.mapSheetId );\n    this.setCenter();\n    //this.setMapIndexPosition();\n  }\n\n  // Méthode pour setter l'index du figuant sur la map\n  setMapIndexPosition(){\n\n    //this.mapIndexPosition = Math.floor(this.centerX / 48) + (60 * Math.floor(this.centerY / 48));\n  }\n\n  // Méthode pour définir les coordonnées de la posture à croper\n//   updateFaceCrop(): void {\n\n//     // On incrémente le compteur de pas\n//     if (this.currentLoopIndex < 3){\n//         this.currentLoopIndex++\n//     } else if (this.currentLoopIndex === 3){\n//         this.currentLoopIndex = 0;\n//     }\n\n//     if (this.currentDirection=== 'left'){\n//         this.currentCycleLoop = this.leftCycleLoop;\n//     } else if (this.currentDirection=== 'right'){\n//         this.currentCycleLoop = this.rightCycleLoop;\n//     }\n\n//     if (this.currentDirection=== 'right' && this.speedX < 0.1 ){ // A l'arret vers la droite\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else if (this.currentDirection=== 'left' && this.speedX > -0.1) { // A l'arret la gauche\n//         this.faceX = 0;\n//         this.faceY = 32;\n//     } else if(this.currentDirection=== 'standing' && this.speedX < 0.1) {\n//         this.faceX = 0;\n//         this.faceY = 64;\n//     } else { // Il avance\n//         this.faceX = this.currentCycleLoop[this.currentLoopIndex].faceX;\n//         this.faceY = this.currentCycleLoop[this.currentLoopIndex].faceY;\n//     }\n//   }\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\nimport { Enemy } from './enemy';\nimport { ViewPort } from './viewport';\nimport { Block } from './block';\n\n\nexport class DisplayController {\n    \n    private canvas: any;\n    private ctx: CanvasRenderingContext2D;\n\n    constructor(\n         canvas: any\n    ){\n        this.canvas = canvas;\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 //window.innerHeight;\n        this.ctx = this.canvas.getContext('2d');\n    }\n\n    initCanvas(){\n     \n    }\n\n    draw(shape: string, viewPort: ViewPort, sprite: sprite): void {\n\n        const {x, y, width, height, color } = sprite;\n        this.ctx.fillStyle = color;\n\n        switch(shape){\n\n            case 'rectangle':\n                this.ctx.fillRect(\n                    x - viewPort.x,\n                    y - viewPort.y,\n                    width,\n                    height\n                );\n                break;\n                default:\n                this.ctx.fillRect(x, y, width, height);\n                break;\n        }\n        \n    };\n\n    drawSprite(characterImg: any, viewPort: ViewPort, sprite: sprite){\n\n        // On va déterminer les coordonnées Y/Y du sprite à affichernsur le canvas\n        let canvasX: number;\n        let canvasY: number;\n\n        if (sprite instanceof Player){\n            canvasX = (this.canvas.width / 2) - sprite.width / 2;\n            canvasY = (this.canvas.height - 256 - sprite.height);\n        }\n        if (sprite instanceof Enemy || sprite instanceof Block){\n            canvasX = sprite.x - viewPort.x;\n            canvasY = sprite.y - viewPort.y;\n        }\n\n        this.ctx.drawImage(\n            characterImg,\n            sprite.faceX, // Position X de la partie à croper\n            sprite.faceY, // Position Y de la partie à croper\n            32 , // Largeur de la partie à croper\n            32 , // Hauteur de la partie à corper\n            canvasX, // on l'affiche toujours au milieu du canvas // Position x de l'image à croper sur le canvas\n            canvasY, // on l'affiche toujours au milieu du canvas // Position y de l'image à croper sur le canvas\n            sprite.width, // Largeur de la partie cropée\n            sprite.height // Hauteur de la partie cropée\n        );\n\n    };\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n\n    drawBackground(backgroundImg: any, player: sprite){\n\n          this.ctx.drawImage(\n            backgroundImg, // Objet image représentant le background\n            player.x - this.canvas.width / 2, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            0, // Position Y de la partie à croper\n\n            this.canvas.width , // Largeur de la partie à croper\n            this.canvas.height , // Hauteur de la partie à corper\n            0, // Position X sur le canvas de l'image cropée\n            0,  // Position Y sur le canvas de l'image cropée\n            this.canvas.width , // Largeur de l'image cropée sur le canvas\n            this.canvas.height // Hauteur de l'image cropée sur le canvas\n          );\n    };\n\n    drawImg(img: any, cropX: number, cropY: number, canvasX: number, canvasY: number ): void {\n\n        this.ctx.drawImage(\n            img, // Objet image représentant le background\n            cropX, // Position X de la partie à croper\n            //player.y - 288.5, // Position Y de la partie à croper\n            cropY, // Position Y de la partie à croper\n            64 , // Largeur de la partie à croper\n            64 , // Hauteur de la partie à corper\n            canvasX, // Position X sur le canvas de l'image cropée\n            canvasY,  // Position Y sur le canvas de l'image cropée\n            64 , // Largeur de l'image cropée sur le canvas\n            64 // Hauteur de l'image cropée sur le canvas\n          );\n    }\n\n    resizeCanvas(event): void {\n        this.canvas.width = 800 //window.innerWidth;\n        this.canvas.height = 600 // window.innerHeight;\n    }\n   \n    drawTxt(txt: string, canvasX:number, canvasY:number): void {\n        this.ctx.font = \"20px Arial\";\n        this.ctx.fillText(txt, canvasX, canvasY);\n    }\n}","\nexport class InputController {\n\n    left= false;\n    right = false;\n    up = false;\n    down = false;\n    attack = false;\n\n    constructor(){\n    }\n\n\n\n}","import { sprite } from '../interface/general-interfaces';\nimport { Player } from './player';\n\nexport class GameService {\n\n    constructor(){\n    }\n\n    // On vérifie s'il y a collusion entre deux sprites\n    checkCollision(a: sprite, b: sprite): boolean {\n        // On vérifie si A et B sont sur la même mapsheet et s'il y a collision\n        if (\n        (\n            b.x > a.x + a.width ||\n            b.x < a.x - b.width ||\n            b.y > a.y + a.height ||\n            b.y < a.y - b.height\n        )) { // Pas de collision\n            return false;\n        } else { // collision\n            return true;\n        }\n    }\n\n    // On réagit à la collision\n    handleCollision(a: sprite, b: sprite){\n \n        if (\n            (a.y + a.height < b.y + 20 && a.y + a.height > b.y)\n            && ((a.x + a.width > b.x && a.x + a.width < b.x + b.width) \n            || (a.x < b.x + b.width && a.x > b.x))\n\n        ){\n           return true;\n        } else {\n            return false;\n        }\n\n    }\n\n    // Méthode qui retourne un chiffre compris entre A et B\n    rangeNumber (a,b){\n        return Math.floor((Math.random() * b)) + a;\n    };\n\n    // Méthode qui renvoie une direction aléatoire\n    randomDirection(){\n        const randomNumber = this.rangeNumber(1,2);\n        console.log('randomNumber', randomNumber);\n        let direction = '';\n\n        switch(randomNumber){\n            case 1:\n                direction = 'right';\n                break;\n            case 2:\n                direction = 'left';\n                break;\n            default:\n                direction = 'right';\n                break;\n        }\n        return direction;\n    }\n\n\n}","export class ViewPort {\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    defineViewPoint(x: number, y: number, width: number, height: number){\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height; \n    }\n}","\ninterface Grid {\n    nbCol: number,\n    tileSize: number,\n    collection: any[]\n}\n\n\nexport class Map {\n\n    private nbCol: number;\n    private nbRow: number;\n    private tileSize: number;\n    private collection: number[];\n    private length: number;\n    private width: number;\n    private height: number;\n\n    constructor({nbCol, tileSize, collection}: Grid) {\n        this.nbCol = nbCol;\n        this.tileSize = tileSize;\n        this.collection = collection;\n        this.length = collection.length;\n        this.nbRow = collection.length / nbCol;\n        this.width = nbCol * tileSize;\n        this.height = (collection.length / nbCol) * tileSize;\n    }\n\n    get getMapCollection(): number[] {\n        return this.collection;\n    }\n\n    get getMapWidth(): number {\n        return this.width;\n    }\n\n    get getMapHeight(): number {\n        return this.height;\n    }\n\n    get getLength(): number {\n        return this.length;\n    }\n\n    get getTileSize(): number {\n        return this.tileSize;\n    }\n\n    get getNbCol(): number {\n        return this.nbCol;\n    }\n\n}","\ninterface CropCoordinates {\n    cropX: number,\n    cropY: number\n}\n\ninterface Grid {\n    nbCol: number,\n    nbRow: number,\n    tileSize: number\n}\n\nexport class TileSet {\n\n    nbCol: number;\n    nbRow: number;\n    tileSize: number;\n    imgTileSetCropList: CropCoordinates[] = [];\n\n    constructor(\n        {nbCol, nbRow, tileSize}: Grid\n        \n    ){\n        this.nbCol = nbCol;\n        this.nbRow = nbRow;\n        this.tileSize = tileSize;\n\n        // On constritue la liste des coordonnées des tuiles sur cette tileSet\n        this.initImgTileSetCropList();\n    }\n\n    // On initialise la liste des coordonnés de crop\n    initImgTileSetCropList(): void {\n\n        let cropX: number;\n        let cropY: number;\n\n        for(let y = 0; y < this.nbRow; y++){\n\n            for(let i = 0; i < this.nbCol ; i++){\n\n                cropX = i * this.tileSize;\n                cropY = y * this.tileSize;\n                \n                this.imgTileSetCropList = [...this.imgTileSetCropList, {cropX: cropX, cropY: cropY}];\n            }\n        }\n\n        console.log('this.imgTileSetCropList', this.imgTileSetCropList);\n    }\n\n    // Renvoie les coordonnées de l'image à croper en fonction d'un index de tuile\n    getCropCoordinates(id: number): CropCoordinates {\n        return this.imgTileSetCropList[id];\n    }\n}","/// On importe les classes ici\nimport { DisplayController } from './src/model/class/display-controller';\nimport { InputController } from './src/model/class/input-controller';\nimport { Player } from './src/model/class/player';\nimport { GameService } from './src/model/class/game-service';\nimport { Enemy } from './src/model/class/enemy';\nimport { ViewPort } from './src/model/class/viewport';\nimport { sprite } from './src/model/interface/general-interfaces';\nimport { Block } from './src/model/class/block';\nimport { Map } from './src/model/class/map';\nimport { TileSet } from './src/model/class/tileSet';\n\n\nconst canvas: any =  document.getElementById('game');\n\nconst displayController = new DisplayController(canvas);\nconst player = new Player(400, 600);\nconst inputController =  new InputController();\nconst viewPort = new ViewPort(0, 0, 800, 600);\nexport const gameService = new GameService();\n\nlet enemiesList =  [];\nlet blockList = [];\n\nlet  mapData = {\n        nbCol: 80,\n        tileSize: 64,\n        collection: [\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\n        ]\n};\n\n\nconst imgTileSetData = {\n    nbCol: 8,\n    nbRow: 8,\n    tileSize: 64\n};\n\n\nlet tileSetImg = document.getElementById('tileset');\nlet playerImg = document.getElementById('heros6');\nlet enemyImg = document.getElementById('personnage-important2');\nlet tileSet = new TileSet(imgTileSetData);\nexport let map =  new Map(mapData);\n\n// Méthode pour créer des ennemis\nconst initEnemies = (count: number) =>{\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = 640;\n\n        enemiesList = [...enemiesList, new Enemy(x, y, gameService)];\n    }\n}\n\n// Méthode pour créer des ennemis\nconst initBlocks = (count: number)=> {\n\n    // 0n crée plusieurs ennemis\n    for (let i = 0; i < count; i++) {\n        const x = gameService.rangeNumber(400, 1500);\n        const y = gameService.rangeNumber(2, 100);\n\n        console.log({x, y});\n\n        blockList = [...blockList, new Block(x, y, gameService)];\n    } \n}\n\nconst initAll = ()=> {\n    initEnemies(5);\n    initBlocks(5);\n};\n\nconsole.log('blockList', blockList);\n\n\nlet handleStart = (event) =>{\n\n    if(+event.targetTouches[0].clientX  > 400 && +event.targetTouches[0].clientY < 300){\n        inputController.up = true;\n    } else if(+event.targetTouches[0].clientX > 400 && +event.targetTouches[0].clientY > 300) {\n        inputController.attack = true;\n    } else if (+event.targetTouches[0].clientX > 0 && +event.targetTouches[0].clientX < 200){\n        inputController.left = true;\n    } else if(+event.targetTouches[0].clientX > 200 && +event.targetTouches[0].clientX < 400) {\n        inputController.right = true;\n    }\n    \n\n}\n\nlet handleEnd = (event) => {\n\n    inputController.up = false;\n    inputController.right = false;\n    inputController.left = false;\n    inputController.attack = false;\n    \n}\n\ncanvas.addEventListener(\"touchstart\", handleStart, false);\ncanvas.addEventListener(\"touchend\", handleEnd, false);\n// canvas.addEventListener(\"touchcancel\", handleCancel, false);\n// canvas.addEventListener(\"touchleave\", handleLeave, false);\n// canvas.addEventListener(\"touchmove\", handleMove, false);\n\n\n// On crée tous les sprites et les éléments\ninitAll();\n\n\n// L'animation générale\nfunction loop() {\n\n    displayController.clear();\n\n    const columNb = 80;\n    let indexRaw = 0;\n    let canvasX = 0;\n    let canvasY = 0;\n    let tileX = 0;\n    let tileY = 0;\n\n    let xMin = Math.floor(viewPort.x / map.getTileSize ); // Colone minimale à dessiner\n    let yMin = Math.floor(viewPort.y / map.getTileSize ); // Rangée Minimum à dessiner\n    let xMax = Math.ceil((viewPort.x + viewPort.width) / map.getTileSize); // Colonne maximale à dessiner\n    let yMax = Math.ceil((viewPort.y + viewPort.height) / map.getTileSize); // Rangée Minimale à dessiner\n\n \n    for (let x = xMin; x < xMax; x++){\n\n        for (let y = yMin; y < yMax; y++){\n\n            let value = map.getMapCollection[y * map.getNbCol + x];\n            canvasX = x * map.getTileSize - viewPort.x;\n            canvasY = y * map.getTileSize - viewPort.y;\n\n        // On récupère les coordonnées de l'index de tuile sur la tileSet\n        const {cropX,cropY} = tileSet.getCropCoordinates(value);\n\n            if (value !== 0){\n                displayController.drawImg(tileSetImg, cropX, cropY, canvasX, canvasY);\n            }\n            \n        }\n\n    }\n\n    // On affiche les blocks\n    blockList.forEach(block => {\n        block.update(player);\n        displayController.drawSprite(tileSetImg, viewPort, block);\n\n        if (!block.haveTouchedPlayer && gameService.checkCollision(player, block)){ // Si le block n'a pas encore percuté le joueur et qu'il y a collision\n            block.haveTouchedPlayer = true;\n            // On retire un point de crédit au joueur.\n            player.setLifeCredit = player.getLifeCredit - 1;\n        }\n    });\n\n    player.update(inputController);\n    displayController.drawSprite(playerImg, viewPort, player);\n    viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n    if (player.isAttacking){ // Si le player attaque on affiche sa zone d'attaque représentée par un carré\n        displayController.draw('rectangle',viewPort,player.damageZone);\n    }\n\n\n    for (let i = 0; i < map.getLength; i++){\n        \n        indexRaw = Math.floor(i /  map.getNbCol);\n        tileX = (i - indexRaw * map.getNbCol) * map.getTileSize;\n        tileY = indexRaw * map.getTileSize;\n\n        \n        if(map.getMapCollection[i] === 3){\n            if(gameService.handleCollision(player, {x: tileX, y: tileY, width: 64, height: 64 , color: '' })){\n               \n                player.setJump(false);\n                \n                player.groundY = tileY;\n                player.update(inputController);\n                const txt = `player.x : ${player.x}, player.y : ${player.y }`;\n                displayController.drawTxt(txt, 10, 50);\n\n                const txt2 = `tileX : ${tileX}, tileY : ${tileY}`;\n                displayController.drawTxt(txt2, 10, 100);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n                \n            } else {\n                \n                player.groundY = 704;\n                player.update(inputController);\n                const texteCoordonneesX= `player.x : ${player.x}`;\n                displayController.drawTxt(texteCoordonneesX, 10, 120);\n               \n                const texteCoordonneesY= `player.y : ${player.y}`;\n                displayController.drawTxt(texteCoordonneesY, 10, 150);\n\n                const texteCreditsDispo= `Credits : ${player.getLifeCredit}`;\n                displayController.drawTxt(texteCreditsDispo, 10, 180);\n\n                viewPort.defineViewPoint(player.x - ((800 / 2) - player.width / 2), (player.y - (600/2) + 20), 800, 600);\n\n            }\n            \n        }\n        \n\n    }\n    \n    \n    enemiesList.forEach((enemy, index) => {\n        enemy.update();\n        displayController.drawSprite(enemyImg, viewPort, enemy);\n\n        if (player.isAttacking && gameService.checkCollision(player.damageZone, enemy)){\n            alert('collision entre ennemi et damagezone');\n            enemiesList.splice(index, 1); \n        }\n    });\n\n \n    \n    window.requestAnimationFrame(loop); \n}\n\n\n\n\n// fetch('/levels.json').then(data=> {\n//      return data.json();\n// }).then(elem => {\n//     console.log('elem', elem);\n// })\n\n// function loadImage(url) {\n//     return new Promise(resolve => {\n//         const image = new Image();\n//         image.addEventListener('load', () => {\n//             resolve(image);\n//         });\n//         image.src = url; \n//     });\n// }\n\n\n// let backGroundImg = new Image();\n// backGroundImg.src = 'https://upload.wikimedia.org/wikipedia/commons/c/c5/Polarlicht_2_kmeans_16_large.png';\n// backGroundImg.onload = ()=> {\n//     alert('charge');\n// };\n\n// let tileSetImg = new Image();\n// //tileSetImg.src = 'https://opengameart.org/sites/default/files/Preview3.jpg';\n// tileSetImg.src = '/src/assets/tileset3232.png';\n// tileSetImg.onload = ()=> {\n//     alert('tileset charge');\n//     loop();\n// };\n//console.log(tileSetImg)\n\n\n\n// On ajoute les évènement pour resizer le canvas\nwindow.addEventListener('resize', displayController.resizeCanvas, false);\nwindow.addEventListener('orientationchange', displayController.resizeCanvas, false);\n\n\nloop();\n\n\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}